exports.id=101,exports.ids=[101],exports.modules={85384:e=>{e.exports={style:{fontFamily:"'__Inter_aaf875', '__Inter_Fallback_aaf875'",fontStyle:"normal"},className:"__className_aaf875"}},35664:(e,a,i)=>{"use strict";i.d(a,{Ry:()=>s});var o=new WeakMap,n=new WeakMap,t={},l=0,r=function(e){return e&&(e.host||r(e.parentNode))},c=function(e,a,i,c){var s=(Array.isArray(e)?e:[e]).map(function(e){if(a.contains(e))return e;var i=r(e);return i&&a.contains(i)?i:(console.error("aria-hidden",e,"in not contained inside",a,". Doing nothing"),null)}).filter(function(e){return!!e});t[i]||(t[i]=new WeakMap);var m=t[i],d=[],f=new Set,p=new Set(s),u=function(e){!e||f.has(e)||(f.add(e),u(e.parentNode))};s.forEach(u);var h=function(e){!e||p.has(e)||Array.prototype.forEach.call(e.children,function(e){if(f.has(e))h(e);else try{var a=e.getAttribute(c),t=null!==a&&"false"!==a,l=(o.get(e)||0)+1,r=(m.get(e)||0)+1;o.set(e,l),m.set(e,r),d.push(e),1===l&&t&&n.set(e,!0),1===r&&e.setAttribute(i,"true"),t||e.setAttribute(c,"true")}catch(a){console.error("aria-hidden: cannot operate on ",e,a)}})};return h(a),f.clear(),l++,function(){d.forEach(function(e){var a=o.get(e)-1,t=m.get(e)-1;o.set(e,a),m.set(e,t),a||(n.has(e)||e.removeAttribute(c),n.delete(e)),t||e.removeAttribute(i)}),--l||(o=new WeakMap,o=new WeakMap,n=new WeakMap,t={})}},s=function(e,a,i){void 0===i&&(i="data-aria-hidden");var o,n=Array.from(Array.isArray(e)?e:[e]),t=a||(o=e,"undefined"==typeof document?null:(Array.isArray(o)?o[0]:o).ownerDocument.body);return t?(n.push.apply(n,Array.from(t.querySelectorAll("[aria-live]"))),c(n,t,i,"aria-hidden")):function(){return null}}},62881:(e,a,i)=>{"use strict";i.d(a,{Z:()=>c});var o=i(17577);/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let n=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),t=(...e)=>e.filter((e,a,i)=>!!e&&i.indexOf(e)===a).join(" ");/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var l={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let r=(0,o.forwardRef)(({color:e="currentColor",size:a=24,strokeWidth:i=2,absoluteStrokeWidth:n,className:r="",children:c,iconNode:s,...m},d)=>(0,o.createElement)("svg",{ref:d,...l,width:a,height:a,stroke:e,strokeWidth:n?24*Number(i)/Number(a):i,className:t("lucide",r),...m},[...s.map(([e,a])=>(0,o.createElement)(e,a)),...Array.isArray(c)?c:[c]])),c=(e,a)=>{let i=(0,o.forwardRef)(({className:i,...l},c)=>(0,o.createElement)(r,{ref:c,iconNode:a,className:t(`lucide-${n(e)}`,i),...l}));return i.displayName=`${e}`,i}},32933:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]])},941:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]])},39183:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]])},96633:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("ChevronUp",[["path",{d:"m18 15-6-6-6 6",key:"153udz"}]])},53982:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("Circle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]])},67427:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("Heart",[["path",{d:"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",key:"c3ymky"}]])},77506:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("LoaderCircle",[["path",{d:"M21 12a9 9 0 1 1-6.219-8.56",key:"13zald"}]])},11019:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("Minus",[["path",{d:"M5 12h14",key:"1ays0h"}]])},83855:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]])},88307:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]])},94019:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(62881).Z)("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]])},33265:(e,a,i)=>{"use strict";i.d(a,{default:()=>n.a});var o=i(43353),n=i.n(o)},3486:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"addBasePath",{enumerable:!0,get:function(){return t}});let o=i(8974),n=i(23658);function t(e,a){return(0,n.normalizePathTrailingSlash)((0,o.addPathPrefix)(e,""))}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},53416:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"addLocale",{enumerable:!0,get:function(){return o}}),i(23658);let o=function(e){for(var a=arguments.length,i=Array(a>1?a-1:0),o=1;o<a;o++)i[o-1]=arguments[o];return e};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},15424:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"callServer",{enumerable:!0,get:function(){return n}});let o=i(12994);async function n(e,a){let i=(0,o.getServerActionDispatcher)();if(!i)throw Error("Invariant: missing action dispatcher.");return new Promise((o,n)=>{i({actionId:e,actionArgs:a,resolve:o,reject:n})})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},68038:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"AppRouterAnnouncer",{enumerable:!0,get:function(){return l}});let o=i(17577),n=i(60962),t="next-route-announcer";function l(e){let{tree:a}=e,[i,l]=(0,o.useState)(null);(0,o.useEffect)(()=>(l(function(){var e;let a=document.getElementsByName(t)[0];if(null==a?void 0:null==(e=a.shadowRoot)?void 0:e.childNodes[0])return a.shadowRoot.childNodes[0];{let e=document.createElement(t);e.style.cssText="position:absolute";let a=document.createElement("div");return a.ariaLive="assertive",a.id="__next-route-announcer__",a.role="alert",a.style.cssText="position:absolute;border:0;height:1px;margin:-1px;padding:0;width:1px;clip:rect(0 0 0 0);overflow:hidden;white-space:nowrap;word-wrap:normal",e.attachShadow({mode:"open"}).appendChild(a),document.body.appendChild(e),a}}()),()=>{let e=document.getElementsByTagName(t)[0];(null==e?void 0:e.isConnected)&&document.body.removeChild(e)}),[]);let[r,c]=(0,o.useState)(""),s=(0,o.useRef)();return(0,o.useEffect)(()=>{let e="";if(document.title)e=document.title;else{let a=document.querySelector("h1");a&&(e=a.innerText||a.textContent||"")}void 0!==s.current&&s.current!==e&&c(e),s.current=e},[a]),i?(0,n.createPortal)(r,i):null}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},5138:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{ACTION:function(){return o},FLIGHT_PARAMETERS:function(){return c},NEXT_DID_POSTPONE_HEADER:function(){return m},NEXT_ROUTER_PREFETCH_HEADER:function(){return t},NEXT_ROUTER_STATE_TREE:function(){return n},NEXT_RSC_UNION_QUERY:function(){return s},NEXT_URL:function(){return l},RSC_CONTENT_TYPE_HEADER:function(){return r},RSC_HEADER:function(){return i}});let i="RSC",o="Next-Action",n="Next-Router-State-Tree",t="Next-Router-Prefetch",l="Next-Url",r="text/x-component",c=[[i],[n],[t]],s="_rsc",m="x-nextjs-postponed";("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},12994:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{createEmptyCacheNode:function(){return j},default:function(){return B},getServerActionDispatcher:function(){return A},urlToUrlWithoutFlightMarker:function(){return T}});let o=i(58374),n=i(10326),t=o._(i(17577)),l=i(52413),r=i(57767),c=i(17584),s=i(97008),m=i(77326),d=i(9727),f=i(6199),p=i(32148),u=i(3486),h=i(68038),g=i(46265),b=i(22492),v=i(39519),y=i(5138),k=i(74237),w=i(37929),S=i(68071),R=null,M=null;function A(){return M}let _={};function T(e){let a=new URL(e,location.origin);return a.searchParams.delete(y.NEXT_RSC_UNION_QUERY),a}function E(e){return e.origin!==window.location.origin}function N(e){let{appRouterState:a,sync:i}=e;return(0,t.useInsertionEffect)(()=>{let{tree:e,pushRef:o,canonicalUrl:n}=a,t={...o.preserveCustomHistoryState?window.history.state:{},__NA:!0,__PRIVATE_NEXTJS_INTERNALS_TREE:e};o.pendingPush&&(0,c.createHrefFromUrl)(new URL(window.location.href))!==n?(o.pendingPush=!1,window.history.pushState(t,"",n)):window.history.replaceState(t,"",n),i(a)},[a,i]),null}function j(){return{lazyData:null,rsc:null,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,lazyDataResolved:!1,loading:null}}function C(e){null==e&&(e={});let a=window.history.state,i=null==a?void 0:a.__NA;i&&(e.__NA=i);let o=null==a?void 0:a.__PRIVATE_NEXTJS_INTERNALS_TREE;return o&&(e.__PRIVATE_NEXTJS_INTERNALS_TREE=o),e}function P(e){let{headCacheNode:a}=e,i=null!==a?a.head:null,o=null!==a?a.prefetchHead:null,n=null!==o?o:i;return(0,t.useDeferredValue)(i,n)}function D(e){let a,{buildId:i,initialHead:o,initialTree:c,initialCanonicalUrl:d,initialSeedData:y,couldBeIntercepted:A,assetPrefix:T,missingSlots:j}=e,D=(0,t.useMemo)(()=>(0,f.createInitialRouterState)({buildId:i,initialSeedData:y,initialCanonicalUrl:d,initialTree:c,initialParallelRoutes:R,location:null,initialHead:o,couldBeIntercepted:A}),[i,y,d,c,o,A]),[B,x,I]=(0,m.useReducerWithReduxDevtools)(D);(0,t.useEffect)(()=>{R=null},[]);let{canonicalUrl:O}=(0,m.useUnwrapState)(B),{searchParams:z,pathname:L}=(0,t.useMemo)(()=>{let e=new URL(O,"http://n");return{searchParams:e.searchParams,pathname:(0,w.hasBasePath)(e.pathname)?(0,k.removeBasePath)(e.pathname):e.pathname}},[O]),K=(0,t.useCallback)(e=>{let{previousTree:a,serverResponse:i}=e;(0,t.startTransition)(()=>{x({type:r.ACTION_SERVER_PATCH,previousTree:a,serverResponse:i})})},[x]),G=(0,t.useCallback)((e,a,i)=>{let o=new URL((0,u.addBasePath)(e),location.href);return x({type:r.ACTION_NAVIGATE,url:o,isExternalUrl:E(o),locationSearch:location.search,shouldScroll:null==i||i,navigateType:a})},[x]);M=(0,t.useCallback)(e=>{(0,t.startTransition)(()=>{x({...e,type:r.ACTION_SERVER_ACTION})})},[x]);let V=(0,t.useMemo)(()=>({back:()=>window.history.back(),forward:()=>window.history.forward(),prefetch:(e,a)=>{let i;if(!(0,p.isBot)(window.navigator.userAgent)){try{i=new URL((0,u.addBasePath)(e),window.location.href)}catch(a){throw Error("Cannot prefetch '"+e+"' because it cannot be converted to a URL.")}E(i)||(0,t.startTransition)(()=>{var e;x({type:r.ACTION_PREFETCH,url:i,kind:null!=(e=null==a?void 0:a.kind)?e:r.PrefetchKind.FULL})})}},replace:(e,a)=>{void 0===a&&(a={}),(0,t.startTransition)(()=>{var i;G(e,"replace",null==(i=a.scroll)||i)})},push:(e,a)=>{void 0===a&&(a={}),(0,t.startTransition)(()=>{var i;G(e,"push",null==(i=a.scroll)||i)})},refresh:()=>{(0,t.startTransition)(()=>{x({type:r.ACTION_REFRESH,origin:window.location.origin})})},fastRefresh:()=>{throw Error("fastRefresh can only be used in development mode. Please use refresh instead.")}}),[x,G]);(0,t.useEffect)(()=>{window.next&&(window.next.router=V)},[V]),(0,t.useEffect)(()=>{function e(e){var a;e.persisted&&(null==(a=window.history.state)?void 0:a.__PRIVATE_NEXTJS_INTERNALS_TREE)&&(_.pendingMpaPath=void 0,x({type:r.ACTION_RESTORE,url:new URL(window.location.href),tree:window.history.state.__PRIVATE_NEXTJS_INTERNALS_TREE}))}return window.addEventListener("pageshow",e),()=>{window.removeEventListener("pageshow",e)}},[x]);let{pushRef:F}=(0,m.useUnwrapState)(B);if(F.mpaNavigation){if(_.pendingMpaPath!==O){let e=window.location;F.pendingPush?e.assign(O):e.replace(O),_.pendingMpaPath=O}(0,t.use)(v.unresolvedThenable)}(0,t.useEffect)(()=>{let e=window.history.pushState.bind(window.history),a=window.history.replaceState.bind(window.history),i=e=>{var a;let i=window.location.href,o=null==(a=window.history.state)?void 0:a.__PRIVATE_NEXTJS_INTERNALS_TREE;(0,t.startTransition)(()=>{x({type:r.ACTION_RESTORE,url:new URL(null!=e?e:i,i),tree:o})})};window.history.pushState=function(a,o,n){return(null==a?void 0:a.__NA)||(null==a?void 0:a._N)||(a=C(a),n&&i(n)),e(a,o,n)},window.history.replaceState=function(e,o,n){return(null==e?void 0:e.__NA)||(null==e?void 0:e._N)||(e=C(e),n&&i(n)),a(e,o,n)};let o=e=>{let{state:a}=e;if(a){if(!a.__NA){window.location.reload();return}(0,t.startTransition)(()=>{x({type:r.ACTION_RESTORE,url:new URL(window.location.href),tree:a.__PRIVATE_NEXTJS_INTERNALS_TREE})})}};return window.addEventListener("popstate",o),()=>{window.history.pushState=e,window.history.replaceState=a,window.removeEventListener("popstate",o)}},[x]);let{cache:U,tree:H,nextUrl:q,focusAndScrollRef:$}=(0,m.useUnwrapState)(B),W=(0,t.useMemo)(()=>(0,b.findHeadInCache)(U,H[1]),[U,H]),J=(0,t.useMemo)(()=>(function e(a,i){for(let o of(void 0===i&&(i={}),Object.values(a[1]))){let a=o[0],n=Array.isArray(a),t=n?a[1]:a;!t||t.startsWith(S.PAGE_SEGMENT_KEY)||(n&&("c"===a[2]||"oc"===a[2])?i[a[0]]=a[1].split("/"):n&&(i[a[0]]=a[1]),i=e(o,i))}return i})(H),[H]);if(null!==W){let[e,i]=W;a=(0,n.jsx)(P,{headCacheNode:e},i)}else a=null;let Z=(0,n.jsxs)(g.RedirectBoundary,{children:[a,U.rsc,(0,n.jsx)(h.AppRouterAnnouncer,{tree:H})]});return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(N,{appRouterState:(0,m.useUnwrapState)(B),sync:I}),(0,n.jsx)(s.PathParamsContext.Provider,{value:J,children:(0,n.jsx)(s.PathnameContext.Provider,{value:L,children:(0,n.jsx)(s.SearchParamsContext.Provider,{value:z,children:(0,n.jsx)(l.GlobalLayoutRouterContext.Provider,{value:{buildId:i,changeByServerResponse:K,tree:H,focusAndScrollRef:$,nextUrl:q},children:(0,n.jsx)(l.AppRouterContext.Provider,{value:V,children:(0,n.jsx)(l.LayoutRouterContext.Provider,{value:{childNodes:U.parallelRoutes,tree:H,url:O,loading:U.loading},children:Z})})})})})})]})}function B(e){let{globalErrorComponent:a,...i}=e;return(0,n.jsx)(d.ErrorBoundary,{errorComponent:a,children:(0,n.jsx)(D,{...i})})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},16136:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"bailoutToClientRendering",{enumerable:!0,get:function(){return t}});let o=i(94129),n=i(94749);function t(e){let a=n.staticGenerationAsyncStorage.getStore();if((null==a||!a.forceStatic)&&(null==a?void 0:a.isStaticGeneration))throw new o.BailoutToCSRError(e)}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},96114:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"ClientPageRoot",{enumerable:!0,get:function(){return t}});let o=i(10326),n=i(23325);function t(e){let{Component:a,props:i}=e;return i.searchParams=(0,n.createDynamicallyTrackedSearchParams)(i.searchParams||{}),(0,o.jsx)(a,{...i})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},9727:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{ErrorBoundary:function(){return u},ErrorBoundaryHandler:function(){return d},GlobalError:function(){return f},default:function(){return p}});let o=i(91174),n=i(10326),t=o._(i(17577)),l=i(77389),r=i(37313),c=i(94749),s={error:{fontFamily:'system-ui,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji"',height:"100vh",textAlign:"center",display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center"},text:{fontSize:"14px",fontWeight:400,lineHeight:"28px",margin:"0 8px"}};function m(e){let{error:a}=e,i=c.staticGenerationAsyncStorage.getStore();if((null==i?void 0:i.isRevalidate)||(null==i?void 0:i.isStaticGeneration))throw console.error(a),a;return null}class d extends t.default.Component{static getDerivedStateFromError(e){if((0,r.isNextRouterError)(e))throw e;return{error:e}}static getDerivedStateFromProps(e,a){return e.pathname!==a.previousPathname&&a.error?{error:null,previousPathname:e.pathname}:{error:a.error,previousPathname:e.pathname}}render(){return this.state.error?(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(m,{error:this.state.error}),this.props.errorStyles,this.props.errorScripts,(0,n.jsx)(this.props.errorComponent,{error:this.state.error,reset:this.reset})]}):this.props.children}constructor(e){super(e),this.reset=()=>{this.setState({error:null})},this.state={error:null,previousPathname:this.props.pathname}}}function f(e){let{error:a}=e,i=null==a?void 0:a.digest;return(0,n.jsxs)("html",{id:"__next_error__",children:[(0,n.jsx)("head",{}),(0,n.jsxs)("body",{children:[(0,n.jsx)(m,{error:a}),(0,n.jsx)("div",{style:s.error,children:(0,n.jsxs)("div",{children:[(0,n.jsx)("h2",{style:s.text,children:"Application error: a "+(i?"server":"client")+"-side exception has occurred (see the "+(i?"server logs":"browser console")+" for more information)."}),i?(0,n.jsx)("p",{style:s.text,children:"Digest: "+i}):null]})})]})]})}let p=f;function u(e){let{errorComponent:a,errorStyles:i,errorScripts:o,children:t}=e,r=(0,l.usePathname)();return a?(0,n.jsx)(d,{pathname:r,errorComponent:a,errorStyles:i,errorScripts:o,children:t}):(0,n.jsx)(n.Fragment,{children:t})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},70442:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{DynamicServerError:function(){return o},isDynamicServerError:function(){return n}});let i="DYNAMIC_SERVER_USAGE";class o extends Error{constructor(e){super("Dynamic server usage: "+e),this.description=e,this.digest=i}}function n(e){return"object"==typeof e&&null!==e&&"digest"in e&&"string"==typeof e.digest&&e.digest===i}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},37313:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"isNextRouterError",{enumerable:!0,get:function(){return t}});let o=i(50706),n=i(62747);function t(e){return e&&e.digest&&((0,n.isRedirectError)(e)||(0,o.isNotFoundError)(e))}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},79671:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return R}}),i(91174);let o=i(58374),n=i(10326),t=o._(i(17577));i(60962);let l=i(52413),r=i(9009),c=i(39519),s=i(9727),m=i(70455),d=i(79976),f=i(46265),p=i(41868),u=i(62162),h=i(39886),g=i(45262),b=["bottom","height","left","right","top","width","x","y"];function v(e,a){let i=e.getBoundingClientRect();return i.top>=0&&i.top<=a}class y extends t.default.Component{componentDidMount(){this.handlePotentialScroll()}componentDidUpdate(){this.props.focusAndScrollRef.apply&&this.handlePotentialScroll()}render(){return this.props.children}constructor(...e){super(...e),this.handlePotentialScroll=()=>{let{focusAndScrollRef:e,segmentPath:a}=this.props;if(e.apply){if(0!==e.segmentPaths.length&&!e.segmentPaths.some(e=>a.every((a,i)=>(0,m.matchSegment)(a,e[i]))))return;let i=null,o=e.hashFragment;if(o&&(i=function(e){var a;return"top"===e?document.body:null!=(a=document.getElementById(e))?a:document.getElementsByName(e)[0]}(o)),!i&&(i=null),!(i instanceof Element))return;for(;!(i instanceof HTMLElement)||function(e){if(["sticky","fixed"].includes(getComputedStyle(e).position))return!0;let a=e.getBoundingClientRect();return b.every(e=>0===a[e])}(i);){if(null===i.nextElementSibling)return;i=i.nextElementSibling}e.apply=!1,e.hashFragment=null,e.segmentPaths=[],(0,d.handleSmoothScroll)(()=>{if(o){i.scrollIntoView();return}let e=document.documentElement,a=e.clientHeight;!v(i,a)&&(e.scrollTop=0,v(i,a)||i.scrollIntoView())},{dontForceLayout:!0,onlyHashChange:e.onlyHashChange}),e.onlyHashChange=!1,i.focus()}}}}function k(e){let{segmentPath:a,children:i}=e,o=(0,t.useContext)(l.GlobalLayoutRouterContext);if(!o)throw Error("invariant global layout router not mounted");return(0,n.jsx)(y,{segmentPath:a,focusAndScrollRef:o.focusAndScrollRef,children:i})}function w(e){let{parallelRouterKey:a,url:i,childNodes:o,segmentPath:s,tree:d,cacheKey:f}=e,p=(0,t.useContext)(l.GlobalLayoutRouterContext);if(!p)throw Error("invariant global layout router not mounted");let{buildId:u,changeByServerResponse:h,tree:b}=p,v=o.get(f);if(void 0===v){let e={lazyData:null,rsc:null,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,lazyDataResolved:!1,loading:null};v=e,o.set(f,e)}let y=null!==v.prefetchRsc?v.prefetchRsc:v.rsc,k=(0,t.useDeferredValue)(v.rsc,y),w="object"==typeof k&&null!==k&&"function"==typeof k.then?(0,t.use)(k):k;if(!w){let e=v.lazyData;if(null===e){let a=function e(a,i){if(a){let[o,n]=a,t=2===a.length;if((0,m.matchSegment)(i[0],o)&&i[1].hasOwnProperty(n)){if(t){let a=e(void 0,i[1][n]);return[i[0],{...i[1],[n]:[a[0],a[1],a[2],"refetch"]}]}return[i[0],{...i[1],[n]:e(a.slice(2),i[1][n])}]}}return i}(["",...s],b),o=(0,g.hasInterceptionRouteInCurrentTree)(b);v.lazyData=e=(0,r.fetchServerResponse)(new URL(i,location.origin),a,o?p.nextUrl:null,u),v.lazyDataResolved=!1}let a=(0,t.use)(e);v.lazyDataResolved||(setTimeout(()=>{(0,t.startTransition)(()=>{h({previousTree:b,serverResponse:a})})}),v.lazyDataResolved=!0),(0,t.use)(c.unresolvedThenable)}return(0,n.jsx)(l.LayoutRouterContext.Provider,{value:{tree:d[1][a],childNodes:v.parallelRoutes,url:i,loading:v.loading},children:w})}function S(e){let{children:a,hasLoading:i,loading:o,loadingStyles:l,loadingScripts:r}=e;return i?(0,n.jsx)(t.Suspense,{fallback:(0,n.jsxs)(n.Fragment,{children:[l,r,o]}),children:a}):(0,n.jsx)(n.Fragment,{children:a})}function R(e){let{parallelRouterKey:a,segmentPath:i,error:o,errorStyles:r,errorScripts:c,templateStyles:m,templateScripts:d,template:g,notFound:b,notFoundStyles:v,styles:y}=e,R=(0,t.useContext)(l.LayoutRouterContext);if(!R)throw Error("invariant expected layout router to be mounted");let{childNodes:M,tree:A,url:_,loading:T}=R,E=M.get(a);E||(E=new Map,M.set(a,E));let N=A[1][a][0],j=(0,u.getSegmentValue)(N),C=[N];return(0,n.jsxs)(n.Fragment,{children:[y,C.map(e=>{let t=(0,u.getSegmentValue)(e),y=(0,h.createRouterCacheKey)(e);return(0,n.jsxs)(l.TemplateContext.Provider,{value:(0,n.jsx)(k,{segmentPath:i,children:(0,n.jsx)(s.ErrorBoundary,{errorComponent:o,errorStyles:r,errorScripts:c,children:(0,n.jsx)(S,{hasLoading:!!T,loading:null==T?void 0:T[0],loadingStyles:null==T?void 0:T[1],loadingScripts:null==T?void 0:T[2],children:(0,n.jsx)(p.NotFoundBoundary,{notFound:b,notFoundStyles:v,children:(0,n.jsx)(f.RedirectBoundary,{children:(0,n.jsx)(w,{parallelRouterKey:a,url:_,tree:A,childNodes:E,segmentPath:i,cacheKey:y,isActive:j===t})})})})})}),children:[m,d,g]},(0,h.createRouterCacheKey)(e,!0))})]})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},70455:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{canSegmentBeOverridden:function(){return t},matchSegment:function(){return n}});let o=i(92357),n=(e,a)=>"string"==typeof e?"string"==typeof a&&e===a:"string"!=typeof a&&e[0]===a[0]&&e[1]===a[1],t=(e,a)=>{var i;return!Array.isArray(e)&&!!Array.isArray(a)&&(null==(i=(0,o.getSegmentParam)(e))?void 0:i.param)===a[0]};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},77389:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{ReadonlyURLSearchParams:function(){return c.ReadonlyURLSearchParams},RedirectType:function(){return c.RedirectType},ServerInsertedHTMLContext:function(){return s.ServerInsertedHTMLContext},notFound:function(){return c.notFound},permanentRedirect:function(){return c.permanentRedirect},redirect:function(){return c.redirect},useParams:function(){return p},usePathname:function(){return d},useRouter:function(){return f},useSearchParams:function(){return m},useSelectedLayoutSegment:function(){return h},useSelectedLayoutSegments:function(){return u},useServerInsertedHTML:function(){return s.useServerInsertedHTML}});let o=i(17577),n=i(52413),t=i(97008),l=i(62162),r=i(68071),c=i(97375),s=i(93347);function m(){let e=(0,o.useContext)(t.SearchParamsContext),a=(0,o.useMemo)(()=>e?new c.ReadonlyURLSearchParams(e):null,[e]);{let{bailoutToClientRendering:e}=i(16136);e("useSearchParams()")}return a}function d(){return(0,o.useContext)(t.PathnameContext)}function f(){let e=(0,o.useContext)(n.AppRouterContext);if(null===e)throw Error("invariant expected app router to be mounted");return e}function p(){return(0,o.useContext)(t.PathParamsContext)}function u(e){void 0===e&&(e="children");let a=(0,o.useContext)(n.LayoutRouterContext);return a?function e(a,i,o,n){let t;if(void 0===o&&(o=!0),void 0===n&&(n=[]),o)t=a[1][i];else{var c;let e=a[1];t=null!=(c=e.children)?c:Object.values(e)[0]}if(!t)return n;let s=t[0],m=(0,l.getSegmentValue)(s);return!m||m.startsWith(r.PAGE_SEGMENT_KEY)?n:(n.push(m),e(t,i,!1,n))}(a.tree,e):null}function h(e){void 0===e&&(e="children");let a=u(e);if(!a||0===a.length)return null;let i="children"===e?a[0]:a[a.length-1];return i===r.DEFAULT_SEGMENT_KEY?null:i}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},97375:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{ReadonlyURLSearchParams:function(){return l},RedirectType:function(){return o.RedirectType},notFound:function(){return n.notFound},permanentRedirect:function(){return o.permanentRedirect},redirect:function(){return o.redirect}});let o=i(62747),n=i(50706);class t extends Error{constructor(){super("Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams")}}class l extends URLSearchParams{append(){throw new t}delete(){throw new t}set(){throw new t}sort(){throw new t}}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},41868:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"NotFoundBoundary",{enumerable:!0,get:function(){return m}});let o=i(58374),n=i(10326),t=o._(i(17577)),l=i(77389),r=i(50706);i(576);let c=i(52413);class s extends t.default.Component{componentDidCatch(){}static getDerivedStateFromError(e){if((0,r.isNotFoundError)(e))return{notFoundTriggered:!0};throw e}static getDerivedStateFromProps(e,a){return e.pathname!==a.previousPathname&&a.notFoundTriggered?{notFoundTriggered:!1,previousPathname:e.pathname}:{notFoundTriggered:a.notFoundTriggered,previousPathname:e.pathname}}render(){return this.state.notFoundTriggered?(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("meta",{name:"robots",content:"noindex"}),!1,this.props.notFoundStyles,this.props.notFound]}):this.props.children}constructor(e){super(e),this.state={notFoundTriggered:!!e.asNotFound,previousPathname:e.pathname}}}function m(e){let{notFound:a,notFoundStyles:i,asNotFound:o,children:r}=e,m=(0,l.usePathname)(),d=(0,t.useContext)(c.MissingSlotContext);return a?(0,n.jsx)(s,{pathname:m,notFound:a,notFoundStyles:i,asNotFound:o,missingSlots:d,children:r}):(0,n.jsx)(n.Fragment,{children:r})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},50706:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{isNotFoundError:function(){return n},notFound:function(){return o}});let i="NEXT_NOT_FOUND";function o(){let e=Error(i);throw e.digest=i,e}function n(e){return"object"==typeof e&&null!==e&&"digest"in e&&e.digest===i}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},77815:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"PromiseQueue",{enumerable:!0,get:function(){return s}});let o=i(98285),n=i(78817);var t=n._("_maxConcurrency"),l=n._("_runningCount"),r=n._("_queue"),c=n._("_processNext");class s{enqueue(e){let a,i;let n=new Promise((e,o)=>{a=e,i=o}),t=async()=>{try{o._(this,l)[l]++;let i=await e();a(i)}catch(e){i(e)}finally{o._(this,l)[l]--,o._(this,c)[c]()}};return o._(this,r)[r].push({promiseFn:n,task:t}),o._(this,c)[c](),n}bump(e){let a=o._(this,r)[r].findIndex(a=>a.promiseFn===e);if(a>-1){let e=o._(this,r)[r].splice(a,1)[0];o._(this,r)[r].unshift(e),o._(this,c)[c](!0)}}constructor(e=5){Object.defineProperty(this,c,{value:m}),Object.defineProperty(this,t,{writable:!0,value:void 0}),Object.defineProperty(this,l,{writable:!0,value:void 0}),Object.defineProperty(this,r,{writable:!0,value:void 0}),o._(this,t)[t]=e,o._(this,l)[l]=0,o._(this,r)[r]=[]}}function m(e){if(void 0===e&&(e=!1),(o._(this,l)[l]<o._(this,t)[t]||e)&&o._(this,r)[r].length>0){var a;null==(a=o._(this,r)[r].shift())||a.task()}}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},46265:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{RedirectBoundary:function(){return m},RedirectErrorBoundary:function(){return s}});let o=i(58374),n=i(10326),t=o._(i(17577)),l=i(77389),r=i(62747);function c(e){let{redirect:a,reset:i,redirectType:o}=e,n=(0,l.useRouter)();return(0,t.useEffect)(()=>{t.default.startTransition(()=>{o===r.RedirectType.push?n.push(a,{}):n.replace(a,{}),i()})},[a,o,i,n]),null}class s extends t.default.Component{static getDerivedStateFromError(e){if((0,r.isRedirectError)(e))return{redirect:(0,r.getURLFromRedirectError)(e),redirectType:(0,r.getRedirectTypeFromError)(e)};throw e}render(){let{redirect:e,redirectType:a}=this.state;return null!==e&&null!==a?(0,n.jsx)(c,{redirect:e,redirectType:a,reset:()=>this.setState({redirect:null})}):this.props.children}constructor(e){super(e),this.state={redirect:null,redirectType:null}}}function m(e){let{children:a}=e,i=(0,l.useRouter)();return(0,n.jsx)(s,{router:i,children:a})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},28778:(e,a)=>{"use strict";var i;Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"RedirectStatusCode",{enumerable:!0,get:function(){return i}}),function(e){e[e.SeeOther=303]="SeeOther",e[e.TemporaryRedirect=307]="TemporaryRedirect",e[e.PermanentRedirect=308]="PermanentRedirect"}(i||(i={})),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},62747:(e,a,i)=>{"use strict";var o;Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{RedirectType:function(){return o},getRedirectError:function(){return c},getRedirectStatusCodeFromError:function(){return u},getRedirectTypeFromError:function(){return p},getURLFromRedirectError:function(){return f},isRedirectError:function(){return d},permanentRedirect:function(){return m},redirect:function(){return s}});let n=i(55403),t=i(47849),l=i(28778),r="NEXT_REDIRECT";function c(e,a,i){void 0===i&&(i=l.RedirectStatusCode.TemporaryRedirect);let o=Error(r);o.digest=r+";"+a+";"+e+";"+i+";";let t=n.requestAsyncStorage.getStore();return t&&(o.mutableCookies=t.mutableCookies),o}function s(e,a){void 0===a&&(a="replace");let i=t.actionAsyncStorage.getStore();throw c(e,a,(null==i?void 0:i.isAction)?l.RedirectStatusCode.SeeOther:l.RedirectStatusCode.TemporaryRedirect)}function m(e,a){void 0===a&&(a="replace");let i=t.actionAsyncStorage.getStore();throw c(e,a,(null==i?void 0:i.isAction)?l.RedirectStatusCode.SeeOther:l.RedirectStatusCode.PermanentRedirect)}function d(e){if("object"!=typeof e||null===e||!("digest"in e)||"string"!=typeof e.digest)return!1;let[a,i,o,n]=e.digest.split(";",4),t=Number(n);return a===r&&("replace"===i||"push"===i)&&"string"==typeof o&&!isNaN(t)&&t in l.RedirectStatusCode}function f(e){return d(e)?e.digest.split(";",3)[2]:null}function p(e){if(!d(e))throw Error("Not a redirect error");return e.digest.split(";",2)[1]}function u(e){if(!d(e))throw Error("Not a redirect error");return Number(e.digest.split(";",4)[3])}(function(e){e.push="push",e.replace="replace"})(o||(o={})),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},84759:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return r}});let o=i(58374),n=i(10326),t=o._(i(17577)),l=i(52413);function r(){let e=(0,t.useContext)(l.TemplateContext);return(0,n.jsx)(n.Fragment,{children:e})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},9894:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"applyFlightData",{enumerable:!0,get:function(){return t}});let o=i(114),n=i(19056);function t(e,a,i,t){let[l,r,c]=i.slice(-3);if(null===r)return!1;if(3===i.length){let i=r[2],n=r[3];a.loading=n,a.rsc=i,a.prefetchRsc=null,(0,o.fillLazyItemsTillLeafWithHead)(a,e,l,r,c,t)}else a.rsc=e.rsc,a.prefetchRsc=e.prefetchRsc,a.parallelRoutes=new Map(e.parallelRoutes),a.loading=e.loading,(0,n.fillCacheWithNewSubTreeData)(a,e,i,t);return!0}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},95166:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"applyRouterStatePatchToTree",{enumerable:!0,get:function(){return function e(a,i,o,r){let c;let[s,m,d,f,p]=i;if(1===a.length){let e=l(i,o,a);return(0,t.addRefreshMarkerToActiveParallelSegments)(e,r),e}let[u,h]=a;if(!(0,n.matchSegment)(u,s))return null;if(2===a.length)c=l(m[h],o,a);else if(null===(c=e(a.slice(2),m[h],o,r)))return null;let g=[a[0],{...m,[h]:c},d,f];return p&&(g[4]=!0),(0,t.addRefreshMarkerToActiveParallelSegments)(g,r),g}}});let o=i(68071),n=i(70455),t=i(84158);function l(e,a,i){let[t,r]=e,[c,s]=a;if(c===o.DEFAULT_SEGMENT_KEY&&t!==o.DEFAULT_SEGMENT_KEY)return e;if((0,n.matchSegment)(t,c)){let a={};for(let e in r)void 0!==s[e]?a[e]=l(r[e],s[e],i):a[e]=r[e];for(let e in s)a[e]||(a[e]=s[e]);let o=[t,a];return e[2]&&(o[2]=e[2]),e[3]&&(o[3]=e[3]),e[4]&&(o[4]=e[4]),o}return a}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},12895:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"clearCacheNodeDataForSegmentPath",{enumerable:!0,get:function(){return function e(a,i,n){let t=n.length<=2,[l,r]=n,c=(0,o.createRouterCacheKey)(r),s=i.parallelRoutes.get(l),m=a.parallelRoutes.get(l);m&&m!==s||(m=new Map(s),a.parallelRoutes.set(l,m));let d=null==s?void 0:s.get(c),f=m.get(c);if(t){f&&f.lazyData&&f!==d||m.set(c,{lazyData:null,rsc:null,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,lazyDataResolved:!1,loading:null});return}if(!f||!d){f||m.set(c,{lazyData:null,rsc:null,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,lazyDataResolved:!1,loading:null});return}return f===d&&(f={lazyData:f.lazyData,rsc:f.rsc,prefetchRsc:f.prefetchRsc,head:f.head,prefetchHead:f.prefetchHead,parallelRoutes:new Map(f.parallelRoutes),lazyDataResolved:f.lazyDataResolved,loading:f.loading},m.set(c,f)),e(f,d,n.slice(2))}}});let o=i(39886);("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},47326:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{computeChangedPath:function(){return m},extractPathFromFlightRouterState:function(){return s}});let o=i(87356),n=i(68071),t=i(70455),l=e=>"/"===e[0]?e.slice(1):e,r=e=>"string"==typeof e?"children"===e?"":e:e[1];function c(e){return e.reduce((e,a)=>""===(a=l(a))||(0,n.isGroupSegment)(a)?e:e+"/"+a,"")||"/"}function s(e){var a;let i=Array.isArray(e[0])?e[0][1]:e[0];if(i===n.DEFAULT_SEGMENT_KEY||o.INTERCEPTION_ROUTE_MARKERS.some(e=>i.startsWith(e)))return;if(i.startsWith(n.PAGE_SEGMENT_KEY))return"";let t=[r(i)],l=null!=(a=e[1])?a:{},m=l.children?s(l.children):void 0;if(void 0!==m)t.push(m);else for(let[e,a]of Object.entries(l)){if("children"===e)continue;let i=s(a);void 0!==i&&t.push(i)}return c(t)}function m(e,a){let i=function e(a,i){let[n,l]=a,[c,m]=i,d=r(n),f=r(c);if(o.INTERCEPTION_ROUTE_MARKERS.some(e=>d.startsWith(e)||f.startsWith(e)))return"";if(!(0,t.matchSegment)(n,c)){var p;return null!=(p=s(i))?p:""}for(let a in l)if(m[a]){let i=e(l[a],m[a]);if(null!==i)return r(c)+"/"+i}return null}(e,a);return null==i||"/"===i?i:c(i.split("/"))}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},17584:(e,a)=>{"use strict";function i(e,a){return void 0===a&&(a=!0),e.pathname+e.search+(a?e.hash:"")}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"createHrefFromUrl",{enumerable:!0,get:function(){return i}}),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},6199:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"createInitialRouterState",{enumerable:!0,get:function(){return s}});let o=i(17584),n=i(114),t=i(47326),l=i(79373),r=i(57767),c=i(84158);function s(e){var a;let{buildId:i,initialTree:s,initialSeedData:m,initialCanonicalUrl:d,initialParallelRoutes:f,location:p,initialHead:u,couldBeIntercepted:h}=e,g=!p,b={lazyData:null,rsc:m[2],prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:g?new Map:f,lazyDataResolved:!1,loading:m[3]},v=p?(0,o.createHrefFromUrl)(p):d;(0,c.addRefreshMarkerToActiveParallelSegments)(s,v);let y=new Map;(null===f||0===f.size)&&(0,n.fillLazyItemsTillLeafWithHead)(b,void 0,s,m,u);let k={buildId:i,tree:s,cache:b,prefetchCache:y,pushRef:{pendingPush:!1,mpaNavigation:!1,preserveCustomHistoryState:!0},focusAndScrollRef:{apply:!1,onlyHashChange:!1,hashFragment:null,segmentPaths:[]},canonicalUrl:v,nextUrl:null!=(a=(0,t.extractPathFromFlightRouterState)(s)||(null==p?void 0:p.pathname))?a:null};if(p){let e=new URL(p.pathname,p.origin),a=[["",s,null,null]];(0,l.createPrefetchCacheEntryForInitialLoad)({url:e,kind:r.PrefetchKind.AUTO,data:[a,void 0,!1,h],tree:k.tree,prefetchCache:k.prefetchCache,nextUrl:k.nextUrl})}return k}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},39886:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"createRouterCacheKey",{enumerable:!0,get:function(){return n}});let o=i(68071);function n(e,a){return(void 0===a&&(a=!1),Array.isArray(e))?e[0]+"|"+e[1]+"|"+e[2]:a&&e.startsWith(o.PAGE_SEGMENT_KEY)?o.PAGE_SEGMENT_KEY:e}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},9009:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"fetchServerResponse",{enumerable:!0,get:function(){return m}});let o=i(5138),n=i(12994),t=i(15424),l=i(57767),r=i(92165),{createFromFetch:c}=i(56493);function s(e){return[(0,n.urlToUrlWithoutFlightMarker)(e).toString(),void 0,!1,!1]}async function m(e,a,i,m,d){let f={[o.RSC_HEADER]:"1",[o.NEXT_ROUTER_STATE_TREE]:encodeURIComponent(JSON.stringify(a))};d===l.PrefetchKind.AUTO&&(f[o.NEXT_ROUTER_PREFETCH_HEADER]="1"),i&&(f[o.NEXT_URL]=i);let p=(0,r.hexHash)([f[o.NEXT_ROUTER_PREFETCH_HEADER]||"0",f[o.NEXT_ROUTER_STATE_TREE],f[o.NEXT_URL]].join(","));try{var u;let a=new URL(e);a.searchParams.set(o.NEXT_RSC_UNION_QUERY,p);let i=await fetch(a,{credentials:"same-origin",headers:f}),l=(0,n.urlToUrlWithoutFlightMarker)(i.url),r=i.redirected?l:void 0,d=i.headers.get("content-type")||"",h=!!i.headers.get(o.NEXT_DID_POSTPONE_HEADER),g=!!(null==(u=i.headers.get("vary"))?void 0:u.includes(o.NEXT_URL));if(d!==o.RSC_CONTENT_TYPE_HEADER||!i.ok)return e.hash&&(l.hash=e.hash),s(l.toString());let[b,v]=await c(Promise.resolve(i),{callServer:t.callServer});if(m!==b)return s(i.url);return[v,r,h,g]}catch(a){return console.error("Failed to fetch RSC payload for "+e+". Falling back to browser navigation.",a),[e.toString(),void 0,!1,!1]}}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},19056:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"fillCacheWithNewSubTreeData",{enumerable:!0,get:function(){return function e(a,i,l,r){let c=l.length<=5,[s,m]=l,d=(0,t.createRouterCacheKey)(m),f=i.parallelRoutes.get(s);if(!f)return;let p=a.parallelRoutes.get(s);p&&p!==f||(p=new Map(f),a.parallelRoutes.set(s,p));let u=f.get(d),h=p.get(d);if(c){if(!h||!h.lazyData||h===u){let e=l[3];h={lazyData:null,rsc:e[2],prefetchRsc:null,head:null,prefetchHead:null,loading:e[3],parallelRoutes:u?new Map(u.parallelRoutes):new Map,lazyDataResolved:!1},u&&(0,o.invalidateCacheByRouterState)(h,u,l[2]),(0,n.fillLazyItemsTillLeafWithHead)(h,u,l[2],e,l[4],r),p.set(d,h)}return}h&&u&&(h===u&&(h={lazyData:h.lazyData,rsc:h.rsc,prefetchRsc:h.prefetchRsc,head:h.head,prefetchHead:h.prefetchHead,parallelRoutes:new Map(h.parallelRoutes),lazyDataResolved:!1,loading:h.loading},p.set(d,h)),e(h,u,l.slice(2),r))}}});let o=i(2498),n=i(114),t=i(39886);("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},114:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"fillLazyItemsTillLeafWithHead",{enumerable:!0,get:function(){return function e(a,i,t,l,r,c){if(0===Object.keys(t[1]).length){a.head=r;return}for(let s in t[1]){let m;let d=t[1][s],f=d[0],p=(0,o.createRouterCacheKey)(f),u=null!==l&&void 0!==l[1][s]?l[1][s]:null;if(i){let o=i.parallelRoutes.get(s);if(o){let i;let t=(null==c?void 0:c.kind)==="auto"&&c.status===n.PrefetchCacheEntryStatus.reusable,l=new Map(o),m=l.get(p);i=null!==u?{lazyData:null,rsc:u[2],prefetchRsc:null,head:null,prefetchHead:null,loading:u[3],parallelRoutes:new Map(null==m?void 0:m.parallelRoutes),lazyDataResolved:!1}:t&&m?{lazyData:m.lazyData,rsc:m.rsc,prefetchRsc:m.prefetchRsc,head:m.head,prefetchHead:m.prefetchHead,parallelRoutes:new Map(m.parallelRoutes),lazyDataResolved:m.lazyDataResolved,loading:m.loading}:{lazyData:null,rsc:null,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map(null==m?void 0:m.parallelRoutes),lazyDataResolved:!1,loading:null},l.set(p,i),e(i,m,d,u||null,r,c),a.parallelRoutes.set(s,l);continue}}if(null!==u){let e=u[2],a=u[3];m={lazyData:null,rsc:e,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,lazyDataResolved:!1,loading:a}}else m={lazyData:null,rsc:null,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,lazyDataResolved:!1,loading:null};let h=a.parallelRoutes.get(s);h?h.set(p,m):a.parallelRoutes.set(s,new Map([[p,m]])),e(m,void 0,d,u,r,c)}}}});let o=i(39886),n=i(57767);("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},17252:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"handleMutable",{enumerable:!0,get:function(){return t}});let o=i(47326);function n(e){return void 0!==e}function t(e,a){var i,t,l;let r=null==(t=a.shouldScroll)||t,c=e.nextUrl;if(n(a.patchedTree)){let i=(0,o.computeChangedPath)(e.tree,a.patchedTree);i?c=i:c||(c=e.canonicalUrl)}return{buildId:e.buildId,canonicalUrl:n(a.canonicalUrl)?a.canonicalUrl===e.canonicalUrl?e.canonicalUrl:a.canonicalUrl:e.canonicalUrl,pushRef:{pendingPush:n(a.pendingPush)?a.pendingPush:e.pushRef.pendingPush,mpaNavigation:n(a.mpaNavigation)?a.mpaNavigation:e.pushRef.mpaNavigation,preserveCustomHistoryState:n(a.preserveCustomHistoryState)?a.preserveCustomHistoryState:e.pushRef.preserveCustomHistoryState},focusAndScrollRef:{apply:!!r&&(!!n(null==a?void 0:a.scrollableSegments)||e.focusAndScrollRef.apply),onlyHashChange:!!a.hashFragment&&e.canonicalUrl.split("#",1)[0]===(null==(i=a.canonicalUrl)?void 0:i.split("#",1)[0]),hashFragment:r?a.hashFragment&&""!==a.hashFragment?decodeURIComponent(a.hashFragment.slice(1)):e.focusAndScrollRef.hashFragment:null,segmentPaths:r?null!=(l=null==a?void 0:a.scrollableSegments)?l:e.focusAndScrollRef.segmentPaths:[]},cache:a.cache?a.cache:e.cache,prefetchCache:a.prefetchCache?a.prefetchCache:e.prefetchCache,tree:n(a.patchedTree)?a.patchedTree:e.tree,nextUrl:c}}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},65652:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"handleSegmentMismatch",{enumerable:!0,get:function(){return n}});let o=i(20941);function n(e,a,i){return(0,o.handleExternalUrl)(e,{},e.canonicalUrl,!0)}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},43193:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"invalidateCacheBelowFlightSegmentPath",{enumerable:!0,get:function(){return function e(a,i,n){let t=n.length<=2,[l,r]=n,c=(0,o.createRouterCacheKey)(r),s=i.parallelRoutes.get(l);if(!s)return;let m=a.parallelRoutes.get(l);if(m&&m!==s||(m=new Map(s),a.parallelRoutes.set(l,m)),t){m.delete(c);return}let d=s.get(c),f=m.get(c);f&&d&&(f===d&&(f={lazyData:f.lazyData,rsc:f.rsc,prefetchRsc:f.prefetchRsc,head:f.head,prefetchHead:f.prefetchHead,parallelRoutes:new Map(f.parallelRoutes),lazyDataResolved:f.lazyDataResolved},m.set(c,f)),e(f,d,n.slice(2)))}}});let o=i(39886);("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},2498:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"invalidateCacheByRouterState",{enumerable:!0,get:function(){return n}});let o=i(39886);function n(e,a,i){for(let n in i[1]){let t=i[1][n][0],l=(0,o.createRouterCacheKey)(t),r=a.parallelRoutes.get(n);if(r){let a=new Map(r);a.delete(l),e.parallelRoutes.set(n,a)}}}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},23772:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"isNavigatingToNewRootLayout",{enumerable:!0,get:function(){return function e(a,i){let o=a[0],n=i[0];if(Array.isArray(o)&&Array.isArray(n)){if(o[0]!==n[0]||o[2]!==n[2])return!0}else if(o!==n)return!0;if(a[4])return!i[4];if(i[4])return!0;let t=Object.values(a[1])[0],l=Object.values(i[1])[0];return!t||!l||e(t,l)}}}),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},68831:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{abortTask:function(){return s},listenForDynamicRequest:function(){return r},updateCacheNodeOnNavigation:function(){return function e(a,i,r,s,m){let d=i[1],f=r[1],p=s[1],u=a.parallelRoutes,h=new Map(u),g={},b=null;for(let a in f){let i;let r=f[a],s=d[a],v=u.get(a),y=p[a],k=r[0],w=(0,t.createRouterCacheKey)(k),S=void 0!==s?s[0]:void 0,R=void 0!==v?v.get(w):void 0;if(null!==(i=k===o.PAGE_SEGMENT_KEY?l(r,void 0!==y?y:null,m):k===o.DEFAULT_SEGMENT_KEY?void 0!==s?{route:s,node:null,children:null}:l(r,void 0!==y?y:null,m):void 0!==S&&(0,n.matchSegment)(k,S)&&void 0!==R&&void 0!==s?null!=y?e(R,s,r,y,m):function(e){let a=c(e,null,null);return{route:e,node:a,children:null}}(r):l(r,void 0!==y?y:null,m))){null===b&&(b=new Map),b.set(a,i);let e=i.node;if(null!==e){let i=new Map(v);i.set(w,e),h.set(a,i)}g[a]=i.route}else g[a]=r}if(null===b)return null;let v={lazyData:null,rsc:a.rsc,prefetchRsc:a.prefetchRsc,head:a.head,prefetchHead:a.prefetchHead,loading:a.loading,parallelRoutes:h,lazyDataResolved:!1};return{route:function(e,a){let i=[e[0],a];return 2 in e&&(i[2]=e[2]),3 in e&&(i[3]=e[3]),4 in e&&(i[4]=e[4]),i}(r,g),node:v,children:b}}},updateCacheNodeOnPopstateRestoration:function(){return function e(a,i){let o=i[1],n=a.parallelRoutes,l=new Map(n);for(let a in o){let i=o[a],r=i[0],c=(0,t.createRouterCacheKey)(r),s=n.get(a);if(void 0!==s){let o=s.get(c);if(void 0!==o){let n=e(o,i),t=new Map(s);t.set(c,n),l.set(a,t)}}}let r=a.rsc,c=f(r)&&"pending"===r.status;return{lazyData:null,rsc:r,head:a.head,prefetchHead:c?a.prefetchHead:null,prefetchRsc:c?a.prefetchRsc:null,loading:c?a.loading:null,parallelRoutes:l,lazyDataResolved:!1}}}});let o=i(68071),n=i(70455),t=i(39886);function l(e,a,i){let o=c(e,a,i);return{route:e,node:o,children:null}}function r(e,a){a.then(a=>{for(let i of a[0]){let a=i.slice(0,-3),o=i[i.length-3],l=i[i.length-2],r=i[i.length-1];"string"!=typeof a&&function(e,a,i,o,l){let r=e;for(let e=0;e<a.length;e+=2){let i=a[e],o=a[e+1],t=r.children;if(null!==t){let e=t.get(i);if(void 0!==e){let a=e.route[0];if((0,n.matchSegment)(o,a)){r=e;continue}}}return}(function e(a,i,o,l){let r=a.children,c=a.node;if(null===r){null!==c&&(function e(a,i,o,l,r){let c=i[1],s=o[1],d=l[1],p=a.parallelRoutes;for(let a in c){let i=c[a],o=s[a],l=d[a],f=p.get(a),u=i[0],h=(0,t.createRouterCacheKey)(u),g=void 0!==f?f.get(h):void 0;void 0!==g&&(void 0!==o&&(0,n.matchSegment)(u,o[0])&&null!=l?e(g,i,o,l,r):m(i,g,null))}let u=a.rsc,h=l[2];null===u?a.rsc=h:f(u)&&u.resolve(h);let g=a.head;f(g)&&g.resolve(r)}(c,a.route,i,o,l),a.node=null);return}let s=i[1],d=o[1];for(let a in i){let i=s[a],o=d[a],t=r.get(a);if(void 0!==t){let a=t.route[0];if((0,n.matchSegment)(i[0],a)&&null!=o)return e(t,i,o,l)}}})(r,i,o,l)}(e,a,o,l,r)}s(e,null)},a=>{s(e,a)})}function c(e,a,i){let o=e[1],n=null!==a?a[1]:null,l=new Map;for(let e in o){let a=o[e],r=null!==n?n[e]:null,s=a[0],m=(0,t.createRouterCacheKey)(s),d=c(a,void 0===r?null:r,i),f=new Map;f.set(m,d),l.set(e,f)}let r=0===l.size,s=null!==a?a[2]:null,m=null!==a?a[3]:null;return{lazyData:null,parallelRoutes:l,prefetchRsc:void 0!==s?s:null,prefetchHead:r?i:null,loading:void 0!==m?m:null,rsc:p(),head:r?p():null,lazyDataResolved:!1}}function s(e,a){let i=e.node;if(null===i)return;let o=e.children;if(null===o)m(e.route,i,a);else for(let e of o.values())s(e,a);e.node=null}function m(e,a,i){let o=e[1],n=a.parallelRoutes;for(let e in o){let a=o[e],l=n.get(e);if(void 0===l)continue;let r=a[0],c=(0,t.createRouterCacheKey)(r),s=l.get(c);void 0!==s&&m(a,s,i)}let l=a.rsc;f(l)&&(null===i?l.resolve(null):l.reject(i));let r=a.head;f(r)&&r.resolve(null)}let d=Symbol();function f(e){return e&&e.tag===d}function p(){let e,a;let i=new Promise((i,o)=>{e=i,a=o});return i.status="pending",i.resolve=a=>{"pending"===i.status&&(i.status="fulfilled",i.value=a,e(a))},i.reject=e=>{"pending"===i.status&&(i.status="rejected",i.reason=e,a(e))},i.tag=d,i}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},79373:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{createPrefetchCacheEntryForInitialLoad:function(){return s},getOrCreatePrefetchCacheEntry:function(){return c},prunePrefetchCache:function(){return d}});let o=i(17584),n=i(9009),t=i(57767),l=i(61156);function r(e,a){let i=(0,o.createHrefFromUrl)(e,!1);return a?a+"%"+i:i}function c(e){let a,{url:i,nextUrl:o,tree:n,buildId:l,prefetchCache:c,kind:s}=e,d=r(i,o),f=c.get(d);if(f)a=f;else{let e=r(i),o=c.get(e);o&&(a=o)}return a?(a.status=u(a),a.kind!==t.PrefetchKind.FULL&&s===t.PrefetchKind.FULL)?m({tree:n,url:i,buildId:l,nextUrl:o,prefetchCache:c,kind:null!=s?s:t.PrefetchKind.TEMPORARY}):(s&&a.kind===t.PrefetchKind.TEMPORARY&&(a.kind=s),a):m({tree:n,url:i,buildId:l,nextUrl:o,prefetchCache:c,kind:s||t.PrefetchKind.TEMPORARY})}function s(e){let{nextUrl:a,tree:i,prefetchCache:o,url:n,kind:l,data:c}=e,[,,,s]=c,m=s?r(n,a):r(n),d={treeAtTimeOfPrefetch:i,data:Promise.resolve(c),kind:l,prefetchTime:Date.now(),lastUsedTime:Date.now(),key:m,status:t.PrefetchCacheEntryStatus.fresh};return o.set(m,d),d}function m(e){let{url:a,kind:i,tree:o,nextUrl:c,buildId:s,prefetchCache:m}=e,d=r(a),f=l.prefetchQueue.enqueue(()=>(0,n.fetchServerResponse)(a,o,c,s,i).then(e=>{let[,,,i]=e;return i&&function(e){let{url:a,nextUrl:i,prefetchCache:o}=e,n=r(a),t=o.get(n);if(!t)return;let l=r(a,i);o.set(l,t),o.delete(n)}({url:a,nextUrl:c,prefetchCache:m}),e})),p={treeAtTimeOfPrefetch:o,data:f,kind:i,prefetchTime:Date.now(),lastUsedTime:null,key:d,status:t.PrefetchCacheEntryStatus.fresh};return m.set(d,p),p}function d(e){for(let[a,i]of e)u(i)===t.PrefetchCacheEntryStatus.expired&&e.delete(a)}let f=1e3*Number("30"),p=1e3*Number("300");function u(e){let{kind:a,prefetchTime:i,lastUsedTime:o}=e;return Date.now()<(null!=o?o:i)+f?o?t.PrefetchCacheEntryStatus.reusable:t.PrefetchCacheEntryStatus.fresh:"auto"===a&&Date.now()<i+p?t.PrefetchCacheEntryStatus.stale:"full"===a&&Date.now()<i+p?t.PrefetchCacheEntryStatus.reusable:t.PrefetchCacheEntryStatus.expired}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},95703:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"fastRefreshReducer",{enumerable:!0,get:function(){return o}}),i(9009),i(17584),i(95166),i(23772),i(20941),i(17252),i(9894),i(12994),i(65652),i(45262);let o=function(e,a){return e};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},22492:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"findHeadInCache",{enumerable:!0,get:function(){return n}});let o=i(39886);function n(e,a){return function e(a,i,n){if(0===Object.keys(i).length)return[a,n];for(let t in i){let[l,r]=i[t],c=a.parallelRoutes.get(t);if(!c)continue;let s=(0,o.createRouterCacheKey)(l),m=c.get(s);if(!m)continue;let d=e(m,r,n+"/"+s);if(d)return d}return null}(e,a,"")}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},62162:(e,a)=>{"use strict";function i(e){return Array.isArray(e)?e[1]:e}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getSegmentValue",{enumerable:!0,get:function(){return i}}),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},45262:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"hasInterceptionRouteInCurrentTree",{enumerable:!0,get:function(){return function e(a){let[i,n]=a;if(Array.isArray(i)&&("di"===i[2]||"ci"===i[2])||"string"==typeof i&&(0,o.isInterceptionRouteAppPath)(i))return!0;if(n){for(let a in n)if(e(n[a]))return!0}return!1}}});let o=i(87356);("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},20941:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{handleExternalUrl:function(){return g},navigateReducer:function(){return v}}),i(9009);let o=i(17584),n=i(43193),t=i(95166),l=i(54614),r=i(23772),c=i(57767),s=i(17252),m=i(9894),d=i(61156),f=i(12994),p=i(68071),u=(i(68831),i(79373)),h=i(12895);function g(e,a,i,o){return a.mpaNavigation=!0,a.canonicalUrl=i,a.pendingPush=o,a.scrollableSegments=void 0,(0,s.handleMutable)(e,a)}function b(e){let a=[],[i,o]=e;if(0===Object.keys(o).length)return[[i]];for(let[e,n]of Object.entries(o))for(let o of b(n))""===i?a.push([e,...o]):a.push([i,e,...o]);return a}let v=function(e,a){let{url:i,isExternalUrl:v,navigateType:y,shouldScroll:k}=a,w={},{hash:S}=i,R=(0,o.createHrefFromUrl)(i),M="push"===y;if((0,u.prunePrefetchCache)(e.prefetchCache),w.preserveCustomHistoryState=!1,v)return g(e,w,i.toString(),M);let A=(0,u.getOrCreatePrefetchCacheEntry)({url:i,nextUrl:e.nextUrl,tree:e.tree,buildId:e.buildId,prefetchCache:e.prefetchCache}),{treeAtTimeOfPrefetch:_,data:T}=A;return d.prefetchQueue.bump(T),T.then(a=>{let[i,d]=a,u=!1;if(A.lastUsedTime||(A.lastUsedTime=Date.now(),u=!0),"string"==typeof i)return g(e,w,i,M);if(document.getElementById("__next-page-redirect"))return g(e,w,R,M);let v=e.tree,y=e.cache,T=[];for(let a of i){let i=a.slice(0,-4),o=a.slice(-3)[0],s=["",...i],d=(0,t.applyRouterStatePatchToTree)(s,v,o,R);if(null===d&&(d=(0,t.applyRouterStatePatchToTree)(s,_,o,R)),null!==d){if((0,r.isNavigatingToNewRootLayout)(v,d))return g(e,w,R,M);let t=(0,f.createEmptyCacheNode)(),k=!1;for(let e of(A.status!==c.PrefetchCacheEntryStatus.stale||u?k=(0,m.applyFlightData)(y,t,a,A):(k=function(e,a,i,o){let n=!1;for(let t of(e.rsc=a.rsc,e.prefetchRsc=a.prefetchRsc,e.loading=a.loading,e.parallelRoutes=new Map(a.parallelRoutes),b(o).map(e=>[...i,...e])))(0,h.clearCacheNodeDataForSegmentPath)(e,a,t),n=!0;return n}(t,y,i,o),A.lastUsedTime=Date.now()),(0,l.shouldHardNavigate)(s,v)?(t.rsc=y.rsc,t.prefetchRsc=y.prefetchRsc,(0,n.invalidateCacheBelowFlightSegmentPath)(t,y,i),w.cache=t):k&&(w.cache=t,y=t),v=d,b(o))){let a=[...i,...e];a[a.length-1]!==p.DEFAULT_SEGMENT_KEY&&T.push(a)}}}return w.patchedTree=v,w.canonicalUrl=d?(0,o.createHrefFromUrl)(d):R,w.pendingPush=M,w.scrollableSegments=T,w.hashFragment=S,w.shouldScroll=k,(0,s.handleMutable)(e,w)},()=>e)};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},61156:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{prefetchQueue:function(){return l},prefetchReducer:function(){return r}});let o=i(5138),n=i(77815),t=i(79373),l=new n.PromiseQueue(5);function r(e,a){(0,t.prunePrefetchCache)(e.prefetchCache);let{url:i}=a;return i.searchParams.delete(o.NEXT_RSC_UNION_QUERY),(0,t.getOrCreatePrefetchCacheEntry)({url:i,nextUrl:e.nextUrl,prefetchCache:e.prefetchCache,kind:a.kind,tree:e.tree,buildId:e.buildId}),e}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},69809:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"refreshReducer",{enumerable:!0,get:function(){return u}});let o=i(9009),n=i(17584),t=i(95166),l=i(23772),r=i(20941),c=i(17252),s=i(114),m=i(12994),d=i(65652),f=i(45262),p=i(84158);function u(e,a){let{origin:i}=a,u={},h=e.canonicalUrl,g=e.tree;u.preserveCustomHistoryState=!1;let b=(0,m.createEmptyCacheNode)(),v=(0,f.hasInterceptionRouteInCurrentTree)(e.tree);return b.lazyData=(0,o.fetchServerResponse)(new URL(h,i),[g[0],g[1],g[2],"refetch"],v?e.nextUrl:null,e.buildId),b.lazyData.then(async i=>{let[o,m]=i;if("string"==typeof o)return(0,r.handleExternalUrl)(e,u,o,e.pushRef.pendingPush);for(let i of(b.lazyData=null,o)){if(3!==i.length)return console.log("REFRESH FAILED"),e;let[o]=i,c=(0,t.applyRouterStatePatchToTree)([""],g,o,e.canonicalUrl);if(null===c)return(0,d.handleSegmentMismatch)(e,a,o);if((0,l.isNavigatingToNewRootLayout)(g,c))return(0,r.handleExternalUrl)(e,u,h,e.pushRef.pendingPush);let f=m?(0,n.createHrefFromUrl)(m):void 0;m&&(u.canonicalUrl=f);let[y,k]=i.slice(-2);if(null!==y){let e=y[2];b.rsc=e,b.prefetchRsc=null,(0,s.fillLazyItemsTillLeafWithHead)(b,void 0,o,y,k),u.prefetchCache=new Map}await (0,p.refreshInactiveParallelSegments)({state:e,updatedTree:c,updatedCache:b,includeNextUrl:v,canonicalUrl:u.canonicalUrl||e.canonicalUrl}),u.cache=b,u.patchedTree=c,u.canonicalUrl=h,g=c}return(0,c.handleMutable)(e,u)},()=>e)}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},85608:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"restoreReducer",{enumerable:!0,get:function(){return t}});let o=i(17584),n=i(47326);function t(e,a){var i;let{url:t,tree:l}=a,r=(0,o.createHrefFromUrl)(t),c=l||e.tree,s=e.cache;return{buildId:e.buildId,canonicalUrl:r,pushRef:{pendingPush:!1,mpaNavigation:!1,preserveCustomHistoryState:!0},focusAndScrollRef:e.focusAndScrollRef,cache:s,prefetchCache:e.prefetchCache,tree:c,nextUrl:null!=(i=(0,n.extractPathFromFlightRouterState)(c))?i:t.pathname}}i(68831),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},25240:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"serverActionReducer",{enumerable:!0,get:function(){return y}});let o=i(15424),n=i(5138),t=i(3486),l=i(17584),r=i(20941),c=i(95166),s=i(23772),m=i(17252),d=i(114),f=i(12994),p=i(45262),u=i(65652),h=i(84158),{createFromFetch:g,encodeReply:b}=i(56493);async function v(e,a,i){let l,{actionId:r,actionArgs:c}=i,s=await b(c),m=await fetch("",{method:"POST",headers:{Accept:n.RSC_CONTENT_TYPE_HEADER,[n.ACTION]:r,[n.NEXT_ROUTER_STATE_TREE]:encodeURIComponent(JSON.stringify(e.tree)),...a?{[n.NEXT_URL]:a}:{}},body:s}),d=m.headers.get("x-action-redirect");try{let e=JSON.parse(m.headers.get("x-action-revalidated")||"[[],0,0]");l={paths:e[0]||[],tag:!!e[1],cookie:e[2]}}catch(e){l={paths:[],tag:!1,cookie:!1}}let f=d?new URL((0,t.addBasePath)(d),new URL(e.canonicalUrl,window.location.href)):void 0;if(m.headers.get("content-type")===n.RSC_CONTENT_TYPE_HEADER){let e=await g(Promise.resolve(m),{callServer:o.callServer});if(d){let[,a]=null!=e?e:[];return{actionFlightData:a,redirectLocation:f,revalidatedParts:l}}let[a,[,i]]=null!=e?e:[];return{actionResult:a,actionFlightData:i,redirectLocation:f,revalidatedParts:l}}return{redirectLocation:f,revalidatedParts:l}}function y(e,a){let{resolve:i,reject:o}=a,n={},t=e.canonicalUrl,g=e.tree;n.preserveCustomHistoryState=!1;let b=e.nextUrl&&(0,p.hasInterceptionRouteInCurrentTree)(e.tree)?e.nextUrl:null;return n.inFlightServerAction=v(e,b,a),n.inFlightServerAction.then(async o=>{let{actionResult:p,actionFlightData:v,redirectLocation:y}=o;if(y&&(e.pushRef.pendingPush=!0,n.pendingPush=!0),!v)return(i(p),y)?(0,r.handleExternalUrl)(e,n,y.href,e.pushRef.pendingPush):e;if("string"==typeof v)return(0,r.handleExternalUrl)(e,n,v,e.pushRef.pendingPush);if(n.inFlightServerAction=null,y){let e=(0,l.createHrefFromUrl)(y,!1);n.canonicalUrl=e}for(let i of v){if(3!==i.length)return console.log("SERVER ACTION APPLY FAILED"),e;let[o]=i,m=(0,c.applyRouterStatePatchToTree)([""],g,o,y?(0,l.createHrefFromUrl)(y):e.canonicalUrl);if(null===m)return(0,u.handleSegmentMismatch)(e,a,o);if((0,s.isNavigatingToNewRootLayout)(g,m))return(0,r.handleExternalUrl)(e,n,t,e.pushRef.pendingPush);let[p,v]=i.slice(-2),k=null!==p?p[2]:null;if(null!==k){let a=(0,f.createEmptyCacheNode)();a.rsc=k,a.prefetchRsc=null,(0,d.fillLazyItemsTillLeafWithHead)(a,void 0,o,p,v),await (0,h.refreshInactiveParallelSegments)({state:e,updatedTree:m,updatedCache:a,includeNextUrl:!!b,canonicalUrl:n.canonicalUrl||e.canonicalUrl}),n.cache=a,n.prefetchCache=new Map}n.patchedTree=m,g=m}return i(p),(0,m.handleMutable)(e,n)},a=>(o(a),e))}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},14025:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"serverPatchReducer",{enumerable:!0,get:function(){return d}});let o=i(17584),n=i(95166),t=i(23772),l=i(20941),r=i(9894),c=i(17252),s=i(12994),m=i(65652);function d(e,a){let{serverResponse:i}=a,[d,f]=i,p={};if(p.preserveCustomHistoryState=!1,"string"==typeof d)return(0,l.handleExternalUrl)(e,p,d,e.pushRef.pendingPush);let u=e.tree,h=e.cache;for(let i of d){let c=i.slice(0,-4),[d]=i.slice(-3,-2),g=(0,n.applyRouterStatePatchToTree)(["",...c],u,d,e.canonicalUrl);if(null===g)return(0,m.handleSegmentMismatch)(e,a,d);if((0,t.isNavigatingToNewRootLayout)(u,g))return(0,l.handleExternalUrl)(e,p,e.canonicalUrl,e.pushRef.pendingPush);let b=f?(0,o.createHrefFromUrl)(f):void 0;b&&(p.canonicalUrl=b);let v=(0,s.createEmptyCacheNode)();(0,r.applyFlightData)(h,v,i),p.patchedTree=g,p.cache=v,h=v,u=g}return(0,c.handleMutable)(e,p)}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},84158:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{addRefreshMarkerToActiveParallelSegments:function(){return function e(a,i){let[o,n,,l]=a;for(let r in o.includes(t.PAGE_SEGMENT_KEY)&&"refresh"!==l&&(a[2]=i,a[3]="refresh"),n)e(n[r],i)}},refreshInactiveParallelSegments:function(){return l}});let o=i(9894),n=i(9009),t=i(68071);async function l(e){let a=new Set;await r({...e,rootTree:e.updatedTree,fetchedSegments:a})}async function r(e){let{state:a,updatedTree:i,updatedCache:t,includeNextUrl:l,fetchedSegments:c,rootTree:s=i,canonicalUrl:m}=e,[,d,f,p]=i,u=[];if(f&&f!==m&&"refresh"===p&&!c.has(f)){c.add(f);let e=(0,n.fetchServerResponse)(new URL(f,location.origin),[s[0],s[1],s[2],"refetch"],l?a.nextUrl:null,a.buildId).then(e=>{let a=e[0];if("string"!=typeof a)for(let e of a)(0,o.applyFlightData)(t,t,e)});u.push(e)}for(let e in d){let i=r({state:a,updatedTree:d[e],updatedCache:t,includeNextUrl:l,fetchedSegments:c,rootTree:s,canonicalUrl:m});u.push(i)}await Promise.all(u)}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},57767:(e,a)=>{"use strict";var i,o;Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{ACTION_FAST_REFRESH:function(){return s},ACTION_NAVIGATE:function(){return t},ACTION_PREFETCH:function(){return c},ACTION_REFRESH:function(){return n},ACTION_RESTORE:function(){return l},ACTION_SERVER_ACTION:function(){return m},ACTION_SERVER_PATCH:function(){return r},PrefetchCacheEntryStatus:function(){return o},PrefetchKind:function(){return i},isThenable:function(){return d}});let n="refresh",t="navigate",l="restore",r="server-patch",c="prefetch",s="fast-refresh",m="server-action";function d(e){return e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof e.then}(function(e){e.AUTO="auto",e.FULL="full",e.TEMPORARY="temporary"})(i||(i={})),function(e){e.fresh="fresh",e.reusable="reusable",e.expired="expired",e.stale="stale"}(o||(o={})),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},83860:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"reducer",{enumerable:!0,get:function(){return o}}),i(57767),i(20941),i(14025),i(85608),i(69809),i(61156),i(95703),i(25240);let o=function(e,a){return e};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},54614:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"shouldHardNavigate",{enumerable:!0,get:function(){return function e(a,i){let[n,t]=i,[l,r]=a;return(0,o.matchSegment)(l,n)?!(a.length<=2)&&e(a.slice(2),t[r]):!!Array.isArray(l)}}});let o=i(70455);("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},23325:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{createDynamicallyTrackedSearchParams:function(){return r},createUntrackedSearchParams:function(){return l}});let o=i(94749),n=i(52846),t=i(22255);function l(e){let a=o.staticGenerationAsyncStorage.getStore();return a&&a.forceStatic?{}:e}function r(e){let a=o.staticGenerationAsyncStorage.getStore();return a?a.forceStatic?{}:a.isStaticGeneration||a.dynamicShouldError?new Proxy({},{get:(e,i,o)=>("string"==typeof i&&(0,n.trackDynamicDataAccessed)(a,"searchParams."+i),t.ReflectAdapter.get(e,i,o)),has:(e,i)=>("string"==typeof i&&(0,n.trackDynamicDataAccessed)(a,"searchParams."+i),Reflect.has(e,i)),ownKeys:e=>((0,n.trackDynamicDataAccessed)(a,"searchParams"),Reflect.ownKeys(e))}):e:e}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},86488:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{StaticGenBailoutError:function(){return o},isStaticGenBailoutError:function(){return n}});let i="NEXT_STATIC_GEN_BAILOUT";class o extends Error{constructor(...e){super(...e),this.code=i}}function n(e){return"object"==typeof e&&null!==e&&"code"in e&&e.code===i}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},39519:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"unresolvedThenable",{enumerable:!0,get:function(){return i}});let i={then:()=>{}};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},77326:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{useReducerWithReduxDevtools:function(){return r},useUnwrapState:function(){return l}});let o=i(58374)._(i(17577)),n=i(57767);function t(e){if(e instanceof Map){let a={};for(let[i,o]of e.entries()){if("function"==typeof o){a[i]="fn()";continue}if("object"==typeof o&&null!==o){if(o.$$typeof){a[i]=o.$$typeof.toString();continue}if(o._bundlerConfig){a[i]="FlightData";continue}}a[i]=t(o)}return a}if("object"==typeof e&&null!==e){let a={};for(let i in e){let o=e[i];if("function"==typeof o){a[i]="fn()";continue}if("object"==typeof o&&null!==o){if(o.$$typeof){a[i]=o.$$typeof.toString();continue}if(o.hasOwnProperty("_bundlerConfig")){a[i]="FlightData";continue}}a[i]=t(o)}return a}return Array.isArray(e)?e.map(t):e}function l(e){return(0,n.isThenable)(e)?(0,o.use)(e):e}i(33879);let r=function(e){return[e,()=>{},()=>{}]};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},39683:(e,a,i)=>{"use strict";function o(e,a,i,o){return!1}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getDomainLocale",{enumerable:!0,get:function(){return o}}),i(23658),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},37929:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"hasBasePath",{enumerable:!0,get:function(){return n}});let o=i(34655);function n(e){return(0,o.pathHasPrefix)(e,"")}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},92481:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"Image",{enumerable:!0,get:function(){return y}});let o=i(91174),n=i(58374),t=i(10326),l=n._(i(17577)),r=o._(i(60962)),c=o._(i(60815)),s=i(23078),m=i(35248),d=i(31206);i(576);let f=i(50131),p=o._(i(86820)),u={deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],path:"/_next/image",loader:"default",dangerouslyAllowSVG:!1,unoptimized:!1};function h(e,a,i,o,n,t,l){let r=null==e?void 0:e.src;e&&e["data-loaded-src"]!==r&&(e["data-loaded-src"]=r,("decode"in e?e.decode():Promise.resolve()).catch(()=>{}).then(()=>{if(e.parentElement&&e.isConnected){if("empty"!==a&&n(!0),null==i?void 0:i.current){let a=new Event("load");Object.defineProperty(a,"target",{writable:!1,value:e});let o=!1,n=!1;i.current({...a,nativeEvent:a,currentTarget:e,target:e,isDefaultPrevented:()=>o,isPropagationStopped:()=>n,persist:()=>{},preventDefault:()=>{o=!0,a.preventDefault()},stopPropagation:()=>{n=!0,a.stopPropagation()}})}(null==o?void 0:o.current)&&o.current(e)}}))}function g(e){return l.use?{fetchPriority:e}:{fetchpriority:e}}globalThis.__NEXT_IMAGE_IMPORTED=!0;let b=(0,l.forwardRef)((e,a)=>{let{src:i,srcSet:o,sizes:n,height:r,width:c,decoding:s,className:m,style:d,fetchPriority:f,placeholder:p,loading:u,unoptimized:b,fill:v,onLoadRef:y,onLoadingCompleteRef:k,setBlurComplete:w,setShowAltText:S,sizesInput:R,onLoad:M,onError:A,..._}=e;return(0,t.jsx)("img",{..._,...g(f),loading:u,width:c,height:r,decoding:s,"data-nimg":v?"fill":"1",className:m,style:d,sizes:n,srcSet:o,src:i,ref:(0,l.useCallback)(e=>{a&&("function"==typeof a?a(e):"object"==typeof a&&(a.current=e)),e&&(A&&(e.src=e.src),e.complete&&h(e,p,y,k,w,b,R))},[i,p,y,k,w,A,b,R,a]),onLoad:e=>{h(e.currentTarget,p,y,k,w,b,R)},onError:e=>{S(!0),"empty"!==p&&w(!0),A&&A(e)}})});function v(e){let{isAppRouter:a,imgAttributes:i}=e,o={as:"image",imageSrcSet:i.srcSet,imageSizes:i.sizes,crossOrigin:i.crossOrigin,referrerPolicy:i.referrerPolicy,...g(i.fetchPriority)};return a&&r.default.preload?(r.default.preload(i.src,o),null):(0,t.jsx)(c.default,{children:(0,t.jsx)("link",{rel:"preload",href:i.srcSet?void 0:i.src,...o},"__nimg-"+i.src+i.srcSet+i.sizes)})}let y=(0,l.forwardRef)((e,a)=>{let i=(0,l.useContext)(f.RouterContext),o=(0,l.useContext)(d.ImageConfigContext),n=(0,l.useMemo)(()=>{let e=u||o||m.imageConfigDefault,a=[...e.deviceSizes,...e.imageSizes].sort((e,a)=>e-a),i=e.deviceSizes.sort((e,a)=>e-a);return{...e,allSizes:a,deviceSizes:i}},[o]),{onLoad:r,onLoadingComplete:c}=e,h=(0,l.useRef)(r);(0,l.useEffect)(()=>{h.current=r},[r]);let g=(0,l.useRef)(c);(0,l.useEffect)(()=>{g.current=c},[c]);let[y,k]=(0,l.useState)(!1),[w,S]=(0,l.useState)(!1),{props:R,meta:M}=(0,s.getImgProps)(e,{defaultLoader:p.default,imgConf:n,blurComplete:y,showAltText:w});return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(b,{...R,unoptimized:M.unoptimized,placeholder:M.placeholder,fill:M.fill,onLoadRef:h,onLoadingCompleteRef:g,setBlurComplete:k,setShowAltText:S,sizesInput:e.sizes,ref:a}),M.priority?(0,t.jsx)(v,{isAppRouter:!i,imgAttributes:R}):null]})});("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},79404:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return v}});let o=i(91174),n=i(10326),t=o._(i(17577)),l=i(25619),r=i(60944),c=i(43071),s=i(51348),m=i(53416),d=i(50131),f=i(52413),p=i(49408),u=i(39683),h=i(3486),g=i(57767);function b(e){return"string"==typeof e?e:(0,c.formatUrl)(e)}let v=t.default.forwardRef(function(e,a){let i,o;let{href:c,as:v,children:y,prefetch:k=null,passHref:w,replace:S,shallow:R,scroll:M,locale:A,onClick:_,onMouseEnter:T,onTouchStart:E,legacyBehavior:N=!1,...j}=e;i=y,N&&("string"==typeof i||"number"==typeof i)&&(i=(0,n.jsx)("a",{children:i}));let C=t.default.useContext(d.RouterContext),P=t.default.useContext(f.AppRouterContext),D=null!=C?C:P,B=!C,x=!1!==k,I=null===k?g.PrefetchKind.AUTO:g.PrefetchKind.FULL,{href:O,as:z}=t.default.useMemo(()=>{if(!C){let e=b(c);return{href:e,as:v?b(v):e}}let[e,a]=(0,l.resolveHref)(C,c,!0);return{href:e,as:v?(0,l.resolveHref)(C,v):a||e}},[C,c,v]),L=t.default.useRef(O),K=t.default.useRef(z);N&&(o=t.default.Children.only(i));let G=N?o&&"object"==typeof o&&o.ref:a,[V,F,U]=(0,p.useIntersection)({rootMargin:"200px"}),H=t.default.useCallback(e=>{(K.current!==z||L.current!==O)&&(U(),K.current=z,L.current=O),V(e),G&&("function"==typeof G?G(e):"object"==typeof G&&(G.current=e))},[z,G,O,U,V]);t.default.useEffect(()=>{},[z,O,F,A,x,null==C?void 0:C.locale,D,B,I]);let q={ref:H,onClick(e){N||"function"!=typeof _||_(e),N&&o.props&&"function"==typeof o.props.onClick&&o.props.onClick(e),D&&!e.defaultPrevented&&function(e,a,i,o,n,l,c,s,m){let{nodeName:d}=e.currentTarget;if("A"===d.toUpperCase()&&(function(e){let a=e.currentTarget.getAttribute("target");return a&&"_self"!==a||e.metaKey||e.ctrlKey||e.shiftKey||e.altKey||e.nativeEvent&&2===e.nativeEvent.which}(e)||!m&&!(0,r.isLocalURL)(i)))return;e.preventDefault();let f=()=>{let e=null==c||c;"beforePopState"in a?a[n?"replace":"push"](i,o,{shallow:l,locale:s,scroll:e}):a[n?"replace":"push"](o||i,{scroll:e})};m?t.default.startTransition(f):f()}(e,D,O,z,S,R,M,A,B)},onMouseEnter(e){N||"function"!=typeof T||T(e),N&&o.props&&"function"==typeof o.props.onMouseEnter&&o.props.onMouseEnter(e)},onTouchStart:function(e){N||"function"!=typeof E||E(e),N&&o.props&&"function"==typeof o.props.onTouchStart&&o.props.onTouchStart(e)}};if((0,s.isAbsoluteUrl)(z))q.href=z;else if(!N||w||"a"===o.type&&!("href"in o.props)){let e=void 0!==A?A:null==C?void 0:C.locale,a=(null==C?void 0:C.isLocaleDomain)&&(0,u.getDomainLocale)(z,e,null==C?void 0:C.locales,null==C?void 0:C.domainLocales);q.href=a||(0,h.addBasePath)((0,m.addLocale)(z,e,null==C?void 0:C.defaultLocale))}return N?t.default.cloneElement(o,q):(0,n.jsx)("a",{...j,...q,children:i})});("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},23658:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"normalizePathTrailingSlash",{enumerable:!0,get:function(){return t}});let o=i(83236),n=i(93067),t=e=>{if(!e.startsWith("/"))return e;let{pathname:a,query:i,hash:t}=(0,n.parsePath)(e);return""+(0,o.removeTrailingSlash)(a)+i+t};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},74237:(e,a,i)=>{"use strict";function o(e){return e}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"removeBasePath",{enumerable:!0,get:function(){return o}}),i(37929),("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},10956:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{cancelIdleCallback:function(){return o},requestIdleCallback:function(){return i}});let i="undefined"!=typeof self&&self.requestIdleCallback&&self.requestIdleCallback.bind(window)||function(e){let a=Date.now();return self.setTimeout(function(){e({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-a))}})},1)},o="undefined"!=typeof self&&self.cancelIdleCallback&&self.cancelIdleCallback.bind(window)||function(e){return clearTimeout(e)};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},25619:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"resolveHref",{enumerable:!0,get:function(){return d}});let o=i(72149),n=i(43071),t=i(20757),l=i(51348),r=i(23658),c=i(60944),s=i(94903),m=i(81394);function d(e,a,i){let d;let f="string"==typeof a?a:(0,n.formatWithValidation)(a),p=f.match(/^[a-zA-Z]{1,}:\/\//),u=p?f.slice(p[0].length):f;if((u.split("?",1)[0]||"").match(/(\/\/|\\)/)){console.error("Invalid href '"+f+"' passed to next/router in page: '"+e.pathname+"'. Repeated forward-slashes (//) or backslashes \\ are not valid in the href.");let a=(0,l.normalizeRepeatedSlashes)(u);f=(p?p[0]:"")+a}if(!(0,c.isLocalURL)(f))return i?[f]:f;try{d=new URL(f.startsWith("#")?e.asPath:e.pathname,"http://n")}catch(e){d=new URL("/","http://n")}try{let e=new URL(f,d);e.pathname=(0,r.normalizePathTrailingSlash)(e.pathname);let a="";if((0,s.isDynamicRoute)(e.pathname)&&e.searchParams&&i){let i=(0,o.searchParamsToUrlQuery)(e.searchParams),{result:l,params:r}=(0,m.interpolateAs)(e.pathname,e.pathname,i);l&&(a=(0,n.formatWithValidation)({pathname:l,hash:e.hash,query:(0,t.omit)(i,r)}))}let l=e.origin===d.origin?e.href.slice(e.origin.length):e.href;return i?[l,a||l]:l}catch(e){return i?[f]:f}}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},49408:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"useIntersection",{enumerable:!0,get:function(){return c}});let o=i(17577),n=i(10956),t="function"==typeof IntersectionObserver,l=new Map,r=[];function c(e){let{rootRef:a,rootMargin:i,disabled:c}=e,s=c||!t,[m,d]=(0,o.useState)(!1),f=(0,o.useRef)(null),p=(0,o.useCallback)(e=>{f.current=e},[]);return(0,o.useEffect)(()=>{if(t){if(s||m)return;let e=f.current;if(e&&e.tagName)return function(e,a,i){let{id:o,observer:n,elements:t}=function(e){let a;let i={root:e.root||null,margin:e.rootMargin||""},o=r.find(e=>e.root===i.root&&e.margin===i.margin);if(o&&(a=l.get(o)))return a;let n=new Map;return a={id:i,observer:new IntersectionObserver(e=>{e.forEach(e=>{let a=n.get(e.target),i=e.isIntersecting||e.intersectionRatio>0;a&&i&&a(i)})},e),elements:n},r.push(i),l.set(i,a),a}(i);return t.set(e,a),n.observe(e),function(){if(t.delete(e),n.unobserve(e),0===t.size){n.disconnect(),l.delete(o);let e=r.findIndex(e=>e.root===o.root&&e.margin===o.margin);e>-1&&r.splice(e,1)}}}(e,e=>e&&d(e),{root:null==a?void 0:a.current,rootMargin:i})}else if(!m){let e=(0,n.requestIdleCallback)(()=>d(!0));return()=>(0,n.cancelIdleCallback)(e)}},[s,i,a,m,f.current]),[p,m,(0,o.useCallback)(()=>{d(!1)},[])]}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},56401:(e,a)=>{"use strict";function i(e){return new URL(e,"http://n").pathname}function o(e){return/https?:\/\//.test(e)}Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{getPathname:function(){return i},isFullStringUrl:function(){return o}})},52846:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{Postpone:function(){return d},createPostponedAbortSignal:function(){return b},createPrerenderState:function(){return c},formatDynamicAPIAccesses:function(){return h},markCurrentScopeAsDynamic:function(){return s},trackDynamicDataAccessed:function(){return m},trackDynamicFetch:function(){return f},usedDynamicAPIs:function(){return u}});let o=function(e){return e&&e.__esModule?e:{default:e}}(i(17577)),n=i(70442),t=i(86488),l=i(56401),r="function"==typeof o.default.unstable_postpone;function c(e){return{isDebugSkeleton:e,dynamicAccesses:[]}}function s(e,a){let i=(0,l.getPathname)(e.urlPathname);if(!e.isUnstableCacheCallback){if(e.dynamicShouldError)throw new t.StaticGenBailoutError(`Route ${i} with \`dynamic = "error"\` couldn't be rendered statically because it used \`${a}\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);if(e.prerenderState)p(e.prerenderState,a,i);else if(e.revalidate=0,e.isStaticGeneration){let o=new n.DynamicServerError(`Route ${i} couldn't be rendered statically because it used ${a}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);throw e.dynamicUsageDescription=a,e.dynamicUsageStack=o.stack,o}}}function m(e,a){let i=(0,l.getPathname)(e.urlPathname);if(e.isUnstableCacheCallback)throw Error(`Route ${i} used "${a}" inside a function cached with "unstable_cache(...)". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use "${a}" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`);if(e.dynamicShouldError)throw new t.StaticGenBailoutError(`Route ${i} with \`dynamic = "error"\` couldn't be rendered statically because it used \`${a}\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);if(e.prerenderState)p(e.prerenderState,a,i);else if(e.revalidate=0,e.isStaticGeneration){let o=new n.DynamicServerError(`Route ${i} couldn't be rendered statically because it used \`${a}\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);throw e.dynamicUsageDescription=a,e.dynamicUsageStack=o.stack,o}}function d({reason:e,prerenderState:a,pathname:i}){p(a,e,i)}function f(e,a){e.prerenderState&&p(e.prerenderState,a,e.urlPathname)}function p(e,a,i){g();let n=`Route ${i} needs to bail out of prerendering at this point because it used ${a}. React throws this special object to indicate where. It should not be caught by your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;e.dynamicAccesses.push({stack:e.isDebugSkeleton?Error().stack:void 0,expression:a}),o.default.unstable_postpone(n)}function u(e){return e.dynamicAccesses.length>0}function h(e){return e.dynamicAccesses.filter(e=>"string"==typeof e.stack&&e.stack.length>0).map(({expression:e,stack:a})=>(a=a.split("\n").slice(4).filter(e=>!(e.includes("node_modules/next/")||e.includes(" (<anonymous>)")||e.includes(" (node:"))).join("\n"),`Dynamic API Usage Debug - ${e}:
${a}`))}function g(){if(!r)throw Error("Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js")}function b(e){g();let a=new AbortController;try{o.default.unstable_postpone(e)}catch(e){a.abort(e)}return a.signal}},92357:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getSegmentParam",{enumerable:!0,get:function(){return n}});let o=i(87356);function n(e){let a=o.INTERCEPTION_ROUTE_MARKERS.find(a=>e.startsWith(a));return(a&&(e=e.slice(a.length)),e.startsWith("[[...")&&e.endsWith("]]"))?{type:"optional-catchall",param:e.slice(5,-2)}:e.startsWith("[...")&&e.endsWith("]")?{type:a?"catchall-intercepted":"catchall",param:e.slice(4,-1)}:e.startsWith("[")&&e.endsWith("]")?{type:a?"dynamic-intercepted":"dynamic",param:e.slice(1,-1)}:null}},87356:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{INTERCEPTION_ROUTE_MARKERS:function(){return n},extractInterceptionRouteInformation:function(){return l},isInterceptionRouteAppPath:function(){return t}});let o=i(72862),n=["(..)(..)","(.)","(..)","(...)"];function t(e){return void 0!==e.split("/").find(e=>n.find(a=>e.startsWith(a)))}function l(e){let a,i,t;for(let o of e.split("/"))if(i=n.find(e=>o.startsWith(e))){[a,t]=e.split(i,2);break}if(!a||!i||!t)throw Error(`Invalid interception route: ${e}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`);switch(a=(0,o.normalizeAppPath)(a),i){case"(.)":t="/"===a?`/${t}`:a+"/"+t;break;case"(..)":if("/"===a)throw Error(`Invalid interception route: ${e}. Cannot use (..) marker at the root level, use (.) instead.`);t=a.split("/").slice(0,-1).concat(t).join("/");break;case"(...)":t="/"+t;break;case"(..)(..)":let l=a.split("/");if(l.length<=2)throw Error(`Invalid interception route: ${e}. Cannot use (..)(..) marker at the root level or one level up.`);t=l.slice(0,-2).concat(t).join("/");break;default:throw Error("Invariant: unexpected marker")}return{interceptingRoute:a,interceptedRoute:t}}},81616:(e,a,i)=>{"use strict";e.exports=i(20399)},23484:(e,a,i)=>{"use strict";e.exports=i(81616).vendored.contexts.AmpContext},52413:(e,a,i)=>{"use strict";e.exports=i(81616).vendored.contexts.AppRouterContext},81157:(e,a,i)=>{"use strict";e.exports=i(81616).vendored.contexts.HeadManagerContext},97008:(e,a,i)=>{"use strict";e.exports=i(81616).vendored.contexts.HooksClientContext},31206:(e,a,i)=>{"use strict";e.exports=i(81616).vendored.contexts.ImageConfigContext},50131:(e,a,i)=>{"use strict";e.exports=i(81616).vendored.contexts.RouterContext},93347:(e,a,i)=>{"use strict";e.exports=i(81616).vendored.contexts.ServerInsertedHtml},60962:(e,a,i)=>{"use strict";e.exports=i(81616).vendored["react-ssr"].ReactDOM},10326:(e,a,i)=>{"use strict";e.exports=i(81616).vendored["react-ssr"].ReactJsxRuntime},56493:(e,a,i)=>{"use strict";e.exports=i(81616).vendored["react-ssr"].ReactServerDOMWebpackClientEdge},17577:(e,a,i)=>{"use strict";e.exports=i(81616).vendored["react-ssr"].React},22255:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"ReflectAdapter",{enumerable:!0,get:function(){return i}});class i{static get(e,a,i){let o=Reflect.get(e,a,i);return"function"==typeof o?o.bind(e):o}static set(e,a,i,o){return Reflect.set(e,a,i,o)}static has(e,a){return Reflect.has(e,a)}static deleteProperty(e,a){return Reflect.deleteProperty(e,a)}}},98710:(e,a)=>{"use strict";function i(e){let{ampFirst:a=!1,hybrid:i=!1,hasQuery:o=!1}=void 0===e?{}:e;return a||i&&o}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"isInAmpMode",{enumerable:!0,get:function(){return i}})},43353:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return t}});let o=i(91174);i(10326),i(17577);let n=o._(i(77028));function t(e,a){var i;let o={loading:e=>{let{error:a,isLoading:i,pastDelay:o}=e;return null}};"function"==typeof e&&(o.loader=e);let t={...o,...a};return(0,n.default)({...t,modules:null==(i=t.loadableGenerated)?void 0:i.modules})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},2451:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"escapeStringRegexp",{enumerable:!0,get:function(){return n}});let i=/[|\\{}()[\]^$+*?.-]/,o=/[|\\{}()[\]^$+*?.-]/g;function n(e){return i.test(e)?e.replace(o,"\\$&"):e}},23078:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getImgProps",{enumerable:!0,get:function(){return r}}),i(576);let o=i(20380),n=i(35248);function t(e){return void 0!==e.default}function l(e){return void 0===e?e:"number"==typeof e?Number.isFinite(e)?e:NaN:"string"==typeof e&&/^[0-9]+$/.test(e)?parseInt(e,10):NaN}function r(e,a){var i;let r,c,s,{src:m,sizes:d,unoptimized:f=!1,priority:p=!1,loading:u,className:h,quality:g,width:b,height:v,fill:y=!1,style:k,overrideSrc:w,onLoad:S,onLoadingComplete:R,placeholder:M="empty",blurDataURL:A,fetchPriority:_,layout:T,objectFit:E,objectPosition:N,lazyBoundary:j,lazyRoot:C,...P}=e,{imgConf:D,showAltText:B,blurComplete:x,defaultLoader:I}=a,O=D||n.imageConfigDefault;if("allSizes"in O)r=O;else{let e=[...O.deviceSizes,...O.imageSizes].sort((e,a)=>e-a),a=O.deviceSizes.sort((e,a)=>e-a);r={...O,allSizes:e,deviceSizes:a}}if(void 0===I)throw Error("images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config");let z=P.loader||I;delete P.loader,delete P.srcSet;let L="__next_img_default"in z;if(L){if("custom"===r.loader)throw Error('Image with src "'+m+'" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader')}else{let e=z;z=a=>{let{config:i,...o}=a;return e(o)}}if(T){"fill"===T&&(y=!0);let e={intrinsic:{maxWidth:"100%",height:"auto"},responsive:{width:"100%",height:"auto"}}[T];e&&(k={...k,...e});let a={responsive:"100vw",fill:"100vw"}[T];a&&!d&&(d=a)}let K="",G=l(b),V=l(v);if("object"==typeof(i=m)&&(t(i)||void 0!==i.src)){let e=t(m)?m.default:m;if(!e.src)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received "+JSON.stringify(e));if(!e.height||!e.width)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received "+JSON.stringify(e));if(c=e.blurWidth,s=e.blurHeight,A=A||e.blurDataURL,K=e.src,!y){if(G||V){if(G&&!V){let a=G/e.width;V=Math.round(e.height*a)}else if(!G&&V){let a=V/e.height;G=Math.round(e.width*a)}}else G=e.width,V=e.height}}let F=!p&&("lazy"===u||void 0===u);(!(m="string"==typeof m?m:K)||m.startsWith("data:")||m.startsWith("blob:"))&&(f=!0,F=!1),r.unoptimized&&(f=!0),L&&m.endsWith(".svg")&&!r.dangerouslyAllowSVG&&(f=!0),p&&(_="high");let U=l(g),H=Object.assign(y?{position:"absolute",height:"100%",width:"100%",left:0,top:0,right:0,bottom:0,objectFit:E,objectPosition:N}:{},B?{}:{color:"transparent"},k),q=x||"empty"===M?null:"blur"===M?'url("data:image/svg+xml;charset=utf-8,'+(0,o.getImageBlurSvg)({widthInt:G,heightInt:V,blurWidth:c,blurHeight:s,blurDataURL:A||"",objectFit:H.objectFit})+'")':'url("'+M+'")',$=q?{backgroundSize:H.objectFit||"cover",backgroundPosition:H.objectPosition||"50% 50%",backgroundRepeat:"no-repeat",backgroundImage:q}:{},W=function(e){let{config:a,src:i,unoptimized:o,width:n,quality:t,sizes:l,loader:r}=e;if(o)return{src:i,srcSet:void 0,sizes:void 0};let{widths:c,kind:s}=function(e,a,i){let{deviceSizes:o,allSizes:n}=e;if(i){let e=/(^|\s)(1?\d?\d)vw/g,a=[];for(let o;o=e.exec(i);o)a.push(parseInt(o[2]));if(a.length){let e=.01*Math.min(...a);return{widths:n.filter(a=>a>=o[0]*e),kind:"w"}}return{widths:n,kind:"w"}}return"number"!=typeof a?{widths:o,kind:"w"}:{widths:[...new Set([a,2*a].map(e=>n.find(a=>a>=e)||n[n.length-1]))],kind:"x"}}(a,n,l),m=c.length-1;return{sizes:l||"w"!==s?l:"100vw",srcSet:c.map((e,o)=>r({config:a,src:i,quality:t,width:e})+" "+("w"===s?e:o+1)+s).join(", "),src:r({config:a,src:i,quality:t,width:c[m]})}}({config:r,src:m,unoptimized:f,width:G,quality:U,sizes:d,loader:z});return{props:{...P,loading:F?"lazy":u,fetchPriority:_,width:G,height:V,decoding:"async",className:h,style:{...H,...$},sizes:W.sizes,srcSet:W.srcSet,src:w||W.src},meta:{unoptimized:f,priority:p,placeholder:M,fill:y}}}},92165:(e,a)=>{"use strict";function i(e){let a=5381;for(let i=0;i<e.length;i++)a=(a<<5)+a+e.charCodeAt(i)&4294967295;return a>>>0}function o(e){return i(e).toString(36).slice(0,5)}Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{djb2Hash:function(){return i},hexHash:function(){return o}})},60815:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{default:function(){return h},defaultHead:function(){return d}});let o=i(91174),n=i(58374),t=i(10326),l=n._(i(17577)),r=o._(i(78003)),c=i(23484),s=i(81157),m=i(98710);function d(e){void 0===e&&(e=!1);let a=[(0,t.jsx)("meta",{charSet:"utf-8"})];return e||a.push((0,t.jsx)("meta",{name:"viewport",content:"width=device-width"})),a}function f(e,a){return"string"==typeof a||"number"==typeof a?e:a.type===l.default.Fragment?e.concat(l.default.Children.toArray(a.props.children).reduce((e,a)=>"string"==typeof a||"number"==typeof a?e:e.concat(a),[])):e.concat(a)}i(576);let p=["name","httpEquiv","charSet","itemProp"];function u(e,a){let{inAmpMode:i}=a;return e.reduce(f,[]).reverse().concat(d(i).reverse()).filter(function(){let e=new Set,a=new Set,i=new Set,o={};return n=>{let t=!0,l=!1;if(n.key&&"number"!=typeof n.key&&n.key.indexOf("$")>0){l=!0;let a=n.key.slice(n.key.indexOf("$")+1);e.has(a)?t=!1:e.add(a)}switch(n.type){case"title":case"base":a.has(n.type)?t=!1:a.add(n.type);break;case"meta":for(let e=0,a=p.length;e<a;e++){let a=p[e];if(n.props.hasOwnProperty(a)){if("charSet"===a)i.has(a)?t=!1:i.add(a);else{let e=n.props[a],i=o[a]||new Set;("name"!==a||!l)&&i.has(e)?t=!1:(i.add(e),o[a]=i)}}}}return t}}()).reverse().map((e,a)=>{let o=e.key||a;if(!i&&"link"===e.type&&e.props.href&&["https://fonts.googleapis.com/css","https://use.typekit.net/"].some(a=>e.props.href.startsWith(a))){let a={...e.props||{}};return a["data-href"]=a.href,a.href=void 0,a["data-optimized-fonts"]=!0,l.default.cloneElement(e,a)}return l.default.cloneElement(e,{key:o})})}let h=function(e){let{children:a}=e,i=(0,l.useContext)(c.AmpStateContext),o=(0,l.useContext)(s.HeadManagerContext);return(0,t.jsx)(r.default,{reduceComponentsToState:u,headManager:o,inAmpMode:(0,m.isInAmpMode)(i),children:a})};("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},20380:(e,a)=>{"use strict";function i(e){let{widthInt:a,heightInt:i,blurWidth:o,blurHeight:n,blurDataURL:t,objectFit:l}=e,r=o?40*o:a,c=n?40*n:i,s=r&&c?"viewBox='0 0 "+r+" "+c+"'":"";return"%3Csvg xmlns='http://www.w3.org/2000/svg' "+s+"%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='"+(s?"none":"contain"===l?"xMidYMid":"cover"===l?"xMidYMid slice":"none")+"' style='filter: url(%23b);' href='"+t+"'/%3E%3C/svg%3E"}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getImageBlurSvg",{enumerable:!0,get:function(){return i}})},35248:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{VALID_LOADERS:function(){return i},imageConfigDefault:function(){return o}});let i=["default","imgix","cloudinary","akamai","custom"],o={deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],path:"/_next/image",loader:"default",loaderFile:"",domains:[],disableStaticImages:!1,minimumCacheTTL:60,formats:["image/webp"],dangerouslyAllowSVG:!1,contentSecurityPolicy:"script-src 'none'; frame-src 'none'; sandbox;",contentDispositionType:"inline",remotePatterns:[],unoptimized:!1}},86820:(e,a)=>{"use strict";function i(e){let{config:a,src:i,width:o,quality:n}=e;return a.path+"?url="+encodeURIComponent(i)+"&w="+o+"&q="+(n||75)}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return o}}),i.__next_img_default=!0;let o=i},94129:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{BailoutToCSRError:function(){return o},isBailoutToCSRError:function(){return n}});let i="BAILOUT_TO_CLIENT_SIDE_RENDERING";class o extends Error{constructor(e){super("Bail out to client-side rendering: "+e),this.reason=e,this.digest=i}}function n(e){return"object"==typeof e&&null!==e&&"digest"in e&&e.digest===i}},933:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"BailoutToCSR",{enumerable:!0,get:function(){return n}});let o=i(94129);function n(e){let{reason:a,children:i}=e;throw new o.BailoutToCSRError(a)}},77028:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return s}});let o=i(10326),n=i(17577),t=i(933),l=i(46618);function r(e){return{default:e&&"default"in e?e.default:e}}let c={loader:()=>Promise.resolve(r(()=>null)),loading:null,ssr:!0},s=function(e){let a={...c,...e},i=(0,n.lazy)(()=>a.loader().then(r)),s=a.loading;function m(e){let r=s?(0,o.jsx)(s,{isLoading:!0,pastDelay:!0,error:null}):null,c=a.ssr?(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(l.PreloadCss,{moduleIds:a.modules}),(0,o.jsx)(i,{...e})]}):(0,o.jsx)(t.BailoutToCSR,{reason:"next/dynamic",children:(0,o.jsx)(i,{...e})});return(0,o.jsx)(n.Suspense,{fallback:r,children:c})}return m.displayName="LoadableComponent",m}},46618:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"PreloadCss",{enumerable:!0,get:function(){return t}});let o=i(10326),n=i(55403);function t(e){let{moduleIds:a}=e,i=(0,n.getExpectedRequestStore)("next/dynamic css"),t=[];if(i.reactLoadableManifest&&a){let e=i.reactLoadableManifest;for(let i of a){if(!e[i])continue;let a=e[i].files.filter(e=>e.endsWith(".css"));t.push(...a)}}return 0===t.length?null:(0,o.jsx)(o.Fragment,{children:t.map(e=>(0,o.jsx)("link",{precedence:"dynamic",rel:"stylesheet",href:i.assetPrefix+"/_next/"+encodeURI(e),as:"style"},e))})}},36058:(e,a)=>{"use strict";function i(e){return e.startsWith("/")?e:"/"+e}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"ensureLeadingSlash",{enumerable:!0,get:function(){return i}})},33879:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{ActionQueueContext:function(){return r},createMutableActionQueue:function(){return m}});let o=i(58374),n=i(57767),t=i(83860),l=o._(i(17577)),r=l.default.createContext(null);function c(e,a){null!==e.pending&&(e.pending=e.pending.next,null!==e.pending?s({actionQueue:e,action:e.pending,setState:a}):e.needsRefresh&&(e.needsRefresh=!1,e.dispatch({type:n.ACTION_REFRESH,origin:window.location.origin},a)))}async function s(e){let{actionQueue:a,action:i,setState:o}=e,t=a.state;if(!t)throw Error("Invariant: Router state not initialized");a.pending=i;let l=i.payload,r=a.action(t,l);function s(e){i.discarded||(a.state=e,a.devToolsInstance&&a.devToolsInstance.send(l,e),c(a,o),i.resolve(e))}(0,n.isThenable)(r)?r.then(s,e=>{c(a,o),i.reject(e)}):s(r)}function m(){let e={state:null,dispatch:(a,i)=>(function(e,a,i){let o={resolve:i,reject:()=>{}};if(a.type!==n.ACTION_RESTORE){let e=new Promise((e,a)=>{o={resolve:e,reject:a}});(0,l.startTransition)(()=>{i(e)})}let t={payload:a,next:null,resolve:o.resolve,reject:o.reject};null===e.pending?(e.last=t,s({actionQueue:e,action:t,setState:i})):a.type===n.ACTION_NAVIGATE||a.type===n.ACTION_RESTORE?(e.pending.discarded=!0,e.last=t,e.pending.payload.type===n.ACTION_SERVER_ACTION&&(e.needsRefresh=!0),s({actionQueue:e,action:t,setState:i})):(null!==e.last&&(e.last.next=t),e.last=t)})(e,a,i),action:async(e,a)=>{if(null===e)throw Error("Invariant: Router state not initialized");return(0,t.reducer)(e,a)},pending:null,last:null};return e}},8974:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"addPathPrefix",{enumerable:!0,get:function(){return n}});let o=i(93067);function n(e,a){if(!e.startsWith("/")||!a)return e;let{pathname:i,query:n,hash:t}=(0,o.parsePath)(e);return""+a+i+n+t}},72862:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{normalizeAppPath:function(){return t},normalizeRscURL:function(){return l}});let o=i(36058),n=i(68071);function t(e){return(0,o.ensureLeadingSlash)(e.split("/").reduce((e,a,i,o)=>!a||(0,n.isGroupSegment)(a)||"@"===a[0]||("page"===a||"route"===a)&&i===o.length-1?e:e+"/"+a,""))}function l(e){return e.replace(/\.rsc($|\?)/,"$1")}},43071:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{formatUrl:function(){return t},formatWithValidation:function(){return r},urlObjectKeys:function(){return l}});let o=i(58374)._(i(72149)),n=/https?|ftp|gopher|file/;function t(e){let{auth:a,hostname:i}=e,t=e.protocol||"",l=e.pathname||"",r=e.hash||"",c=e.query||"",s=!1;a=a?encodeURIComponent(a).replace(/%3A/i,":")+"@":"",e.host?s=a+e.host:i&&(s=a+(~i.indexOf(":")?"["+i+"]":i),e.port&&(s+=":"+e.port)),c&&"object"==typeof c&&(c=String(o.urlQueryToSearchParams(c)));let m=e.search||c&&"?"+c||"";return t&&!t.endsWith(":")&&(t+=":"),e.slashes||(!t||n.test(t))&&!1!==s?(s="//"+(s||""),l&&"/"!==l[0]&&(l="/"+l)):s||(s=""),r&&"#"!==r[0]&&(r="#"+r),m&&"?"!==m[0]&&(m="?"+m),""+t+s+(l=l.replace(/[?#]/g,encodeURIComponent))+(m=m.replace("#","%23"))+r}let l=["auth","hash","host","hostname","href","path","pathname","port","protocol","query","search","slashes"];function r(e){return t(e)}},79976:(e,a)=>{"use strict";function i(e,a){if(void 0===a&&(a={}),a.onlyHashChange){e();return}let i=document.documentElement,o=i.style.scrollBehavior;i.style.scrollBehavior="auto",a.dontForceLayout||i.getClientRects(),e(),i.style.scrollBehavior=o}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"handleSmoothScroll",{enumerable:!0,get:function(){return i}})},94903:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{getSortedRoutes:function(){return o.getSortedRoutes},isDynamicRoute:function(){return n.isDynamicRoute}});let o=i(44712),n=i(45541)},81394:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"interpolateAs",{enumerable:!0,get:function(){return t}});let o=i(9966),n=i(37249);function t(e,a,i){let t="",l=(0,n.getRouteRegex)(e),r=l.groups,c=(a!==e?(0,o.getRouteMatcher)(l)(a):"")||i;t=e;let s=Object.keys(r);return s.every(e=>{let a=c[e]||"",{repeat:i,optional:o}=r[e],n="["+(i?"...":"")+e+"]";return o&&(n=(a?"":"/")+"["+n+"]"),i&&!Array.isArray(a)&&(a=[a]),(o||e in c)&&(t=t.replace(n,i?a.map(e=>encodeURIComponent(e)).join("/"):encodeURIComponent(a))||"/")})||(t=""),{params:s,result:t}}},32148:(e,a)=>{"use strict";function i(e){return/Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(e)}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"isBot",{enumerable:!0,get:function(){return i}})},45541:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"isDynamicRoute",{enumerable:!0,get:function(){return t}});let o=i(87356),n=/\/\[[^/]+?\](?=\/|$)/;function t(e){return(0,o.isInterceptionRouteAppPath)(e)&&(e=(0,o.extractInterceptionRouteInformation)(e).interceptedRoute),n.test(e)}},60944:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"isLocalURL",{enumerable:!0,get:function(){return t}});let o=i(51348),n=i(37929);function t(e){if(!(0,o.isAbsoluteUrl)(e))return!0;try{let a=(0,o.getLocationOrigin)(),i=new URL(e,a);return i.origin===a&&(0,n.hasBasePath)(i.pathname)}catch(e){return!1}}},20757:(e,a)=>{"use strict";function i(e,a){let i={};return Object.keys(e).forEach(o=>{a.includes(o)||(i[o]=e[o])}),i}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"omit",{enumerable:!0,get:function(){return i}})},93067:(e,a)=>{"use strict";function i(e){let a=e.indexOf("#"),i=e.indexOf("?"),o=i>-1&&(a<0||i<a);return o||a>-1?{pathname:e.substring(0,o?i:a),query:o?e.substring(i,a>-1?a:void 0):"",hash:a>-1?e.slice(a):""}:{pathname:e,query:"",hash:""}}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"parsePath",{enumerable:!0,get:function(){return i}})},34655:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"pathHasPrefix",{enumerable:!0,get:function(){return n}});let o=i(93067);function n(e,a){if("string"!=typeof e)return!1;let{pathname:i}=(0,o.parsePath)(e);return i===a||i.startsWith(a+"/")}},72149:(e,a)=>{"use strict";function i(e){let a={};return e.forEach((e,i)=>{void 0===a[i]?a[i]=e:Array.isArray(a[i])?a[i].push(e):a[i]=[a[i],e]}),a}function o(e){return"string"!=typeof e&&("number"!=typeof e||isNaN(e))&&"boolean"!=typeof e?"":String(e)}function n(e){let a=new URLSearchParams;return Object.entries(e).forEach(e=>{let[i,n]=e;Array.isArray(n)?n.forEach(e=>a.append(i,o(e))):a.set(i,o(n))}),a}function t(e){for(var a=arguments.length,i=Array(a>1?a-1:0),o=1;o<a;o++)i[o-1]=arguments[o];return i.forEach(a=>{Array.from(a.keys()).forEach(a=>e.delete(a)),a.forEach((a,i)=>e.append(i,a))}),e}Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{assign:function(){return t},searchParamsToUrlQuery:function(){return i},urlQueryToSearchParams:function(){return n}})},83236:(e,a)=>{"use strict";function i(e){return e.replace(/\/$/,"")||"/"}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"removeTrailingSlash",{enumerable:!0,get:function(){return i}})},9966:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getRouteMatcher",{enumerable:!0,get:function(){return n}});let o=i(51348);function n(e){let{re:a,groups:i}=e;return e=>{let n=a.exec(e);if(!n)return!1;let t=e=>{try{return decodeURIComponent(e)}catch(e){throw new o.DecodeError("failed to decode param")}},l={};return Object.keys(i).forEach(e=>{let a=i[e],o=n[a.pos];void 0!==o&&(l[e]=~o.indexOf("/")?o.split("/").map(e=>t(e)):a.repeat?[t(o)]:t(o))}),l}}},37249:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{getNamedMiddlewareRegex:function(){return f},getNamedRouteRegex:function(){return d},getRouteRegex:function(){return c}});let o=i(87356),n=i(2451),t=i(83236);function l(e){let a=e.startsWith("[")&&e.endsWith("]");a&&(e=e.slice(1,-1));let i=e.startsWith("...");return i&&(e=e.slice(3)),{key:e,repeat:i,optional:a}}function r(e){let a=(0,t.removeTrailingSlash)(e).slice(1).split("/"),i={},r=1;return{parameterizedRoute:a.map(e=>{let a=o.INTERCEPTION_ROUTE_MARKERS.find(a=>e.startsWith(a)),t=e.match(/\[((?:\[.*\])|.+)\]/);if(a&&t){let{key:e,optional:o,repeat:c}=l(t[1]);return i[e]={pos:r++,repeat:c,optional:o},"/"+(0,n.escapeStringRegexp)(a)+"([^/]+?)"}if(!t)return"/"+(0,n.escapeStringRegexp)(e);{let{key:e,repeat:a,optional:o}=l(t[1]);return i[e]={pos:r++,repeat:a,optional:o},a?o?"(?:/(.+?))?":"/(.+?)":"/([^/]+?)"}}).join(""),groups:i}}function c(e){let{parameterizedRoute:a,groups:i}=r(e);return{re:RegExp("^"+a+"(?:/)?$"),groups:i}}function s(e){let{interceptionMarker:a,getSafeRouteKey:i,segment:o,routeKeys:t,keyPrefix:r}=e,{key:c,optional:s,repeat:m}=l(o),d=c.replace(/\W/g,"");r&&(d=""+r+d);let f=!1;(0===d.length||d.length>30)&&(f=!0),isNaN(parseInt(d.slice(0,1)))||(f=!0),f&&(d=i()),r?t[d]=""+r+c:t[d]=c;let p=a?(0,n.escapeStringRegexp)(a):"";return m?s?"(?:/"+p+"(?<"+d+">.+?))?":"/"+p+"(?<"+d+">.+?)":"/"+p+"(?<"+d+">[^/]+?)"}function m(e,a){let i;let l=(0,t.removeTrailingSlash)(e).slice(1).split("/"),r=(i=0,()=>{let e="",a=++i;for(;a>0;)e+=String.fromCharCode(97+(a-1)%26),a=Math.floor((a-1)/26);return e}),c={};return{namedParameterizedRoute:l.map(e=>{let i=o.INTERCEPTION_ROUTE_MARKERS.some(a=>e.startsWith(a)),t=e.match(/\[((?:\[.*\])|.+)\]/);if(i&&t){let[i]=e.split(t[0]);return s({getSafeRouteKey:r,interceptionMarker:i,segment:t[1],routeKeys:c,keyPrefix:a?"nxtI":void 0})}return t?s({getSafeRouteKey:r,segment:t[1],routeKeys:c,keyPrefix:a?"nxtP":void 0}):"/"+(0,n.escapeStringRegexp)(e)}).join(""),routeKeys:c}}function d(e,a){let i=m(e,a);return{...c(e),namedRegex:"^"+i.namedParameterizedRoute+"(?:/)?$",routeKeys:i.routeKeys}}function f(e,a){let{parameterizedRoute:i}=r(e),{catchAll:o=!0}=a;if("/"===i)return{namedRegex:"^/"+(o?".*":"")+"$"};let{namedParameterizedRoute:n}=m(e,!1);return{namedRegex:"^"+n+(o?"(?:(/.*)?)":"")+"$"}}},44712:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getSortedRoutes",{enumerable:!0,get:function(){return o}});class i{insert(e){this._insert(e.split("/").filter(Boolean),[],!1)}smoosh(){return this._smoosh()}_smoosh(e){void 0===e&&(e="/");let a=[...this.children.keys()].sort();null!==this.slugName&&a.splice(a.indexOf("[]"),1),null!==this.restSlugName&&a.splice(a.indexOf("[...]"),1),null!==this.optionalRestSlugName&&a.splice(a.indexOf("[[...]]"),1);let i=a.map(a=>this.children.get(a)._smoosh(""+e+a+"/")).reduce((e,a)=>[...e,...a],[]);if(null!==this.slugName&&i.push(...this.children.get("[]")._smoosh(e+"["+this.slugName+"]/")),!this.placeholder){let a="/"===e?"/":e.slice(0,-1);if(null!=this.optionalRestSlugName)throw Error('You cannot define a route with the same specificity as a optional catch-all route ("'+a+'" and "'+a+"[[..."+this.optionalRestSlugName+']]").');i.unshift(a)}return null!==this.restSlugName&&i.push(...this.children.get("[...]")._smoosh(e+"[..."+this.restSlugName+"]/")),null!==this.optionalRestSlugName&&i.push(...this.children.get("[[...]]")._smoosh(e+"[[..."+this.optionalRestSlugName+"]]/")),i}_insert(e,a,o){if(0===e.length){this.placeholder=!1;return}if(o)throw Error("Catch-all must be the last part of the URL.");let n=e[0];if(n.startsWith("[")&&n.endsWith("]")){let i=n.slice(1,-1),l=!1;if(i.startsWith("[")&&i.endsWith("]")&&(i=i.slice(1,-1),l=!0),i.startsWith("...")&&(i=i.substring(3),o=!0),i.startsWith("[")||i.endsWith("]"))throw Error("Segment names may not start or end with extra brackets ('"+i+"').");if(i.startsWith("."))throw Error("Segment names may not start with erroneous periods ('"+i+"').");function t(e,i){if(null!==e&&e!==i)throw Error("You cannot use different slug names for the same dynamic path ('"+e+"' !== '"+i+"').");a.forEach(e=>{if(e===i)throw Error('You cannot have the same slug name "'+i+'" repeat within a single dynamic path');if(e.replace(/\W/g,"")===n.replace(/\W/g,""))throw Error('You cannot have the slug names "'+e+'" and "'+i+'" differ only by non-word symbols within a single dynamic path')}),a.push(i)}if(o){if(l){if(null!=this.restSlugName)throw Error('You cannot use both an required and optional catch-all route at the same level ("[...'+this.restSlugName+']" and "'+e[0]+'" ).');t(this.optionalRestSlugName,i),this.optionalRestSlugName=i,n="[[...]]"}else{if(null!=this.optionalRestSlugName)throw Error('You cannot use both an optional and required catch-all route at the same level ("[[...'+this.optionalRestSlugName+']]" and "'+e[0]+'").');t(this.restSlugName,i),this.restSlugName=i,n="[...]"}}else{if(l)throw Error('Optional route parameters are not yet supported ("'+e[0]+'").');t(this.slugName,i),this.slugName=i,n="[]"}}this.children.has(n)||this.children.set(n,new i),this.children.get(n)._insert(e.slice(1),a,o)}constructor(){this.placeholder=!0,this.children=new Map,this.slugName=null,this.restSlugName=null,this.optionalRestSlugName=null}}function o(e){let a=new i;return e.forEach(e=>a.insert(e)),a.smoosh()}},68071:(e,a)=>{"use strict";function i(e){return"("===e[0]&&e.endsWith(")")}Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{DEFAULT_SEGMENT_KEY:function(){return n},PAGE_SEGMENT_KEY:function(){return o},isGroupSegment:function(){return i}});let o="__PAGE__",n="__DEFAULT__"},78003:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return l}});let o=i(17577),n=()=>{},t=()=>{};function l(e){var a;let{headManager:i,reduceComponentsToState:l}=e;function r(){if(i&&i.mountedInstances){let a=o.Children.toArray(Array.from(i.mountedInstances).filter(Boolean));i.updateHead(l(a,e))}}return null==i||null==(a=i.mountedInstances)||a.add(e.children),r(),n(()=>{var a;return null==i||null==(a=i.mountedInstances)||a.add(e.children),()=>{var a;null==i||null==(a=i.mountedInstances)||a.delete(e.children)}}),n(()=>(i&&(i._pendingUpdate=r),()=>{i&&(i._pendingUpdate=r)})),t(()=>(i&&i._pendingUpdate&&(i._pendingUpdate(),i._pendingUpdate=null),()=>{i&&i._pendingUpdate&&(i._pendingUpdate(),i._pendingUpdate=null)})),null}},51348:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{DecodeError:function(){return u},MiddlewareNotFoundError:function(){return v},MissingStaticPage:function(){return b},NormalizeError:function(){return h},PageNotFoundError:function(){return g},SP:function(){return f},ST:function(){return p},WEB_VITALS:function(){return i},execOnce:function(){return o},getDisplayName:function(){return c},getLocationOrigin:function(){return l},getURL:function(){return r},isAbsoluteUrl:function(){return t},isResSent:function(){return s},loadGetInitialProps:function(){return d},normalizeRepeatedSlashes:function(){return m},stringifyError:function(){return y}});let i=["CLS","FCP","FID","INP","LCP","TTFB"];function o(e){let a,i=!1;return function(){for(var o=arguments.length,n=Array(o),t=0;t<o;t++)n[t]=arguments[t];return i||(i=!0,a=e(...n)),a}}let n=/^[a-zA-Z][a-zA-Z\d+\-.]*?:/,t=e=>n.test(e);function l(){let{protocol:e,hostname:a,port:i}=window.location;return e+"//"+a+(i?":"+i:"")}function r(){let{href:e}=window.location,a=l();return e.substring(a.length)}function c(e){return"string"==typeof e?e:e.displayName||e.name||"Unknown"}function s(e){return e.finished||e.headersSent}function m(e){let a=e.split("?");return a[0].replace(/\\/g,"/").replace(/\/\/+/g,"/")+(a[1]?"?"+a.slice(1).join("?"):"")}async function d(e,a){let i=a.res||a.ctx&&a.ctx.res;if(!e.getInitialProps)return a.ctx&&a.Component?{pageProps:await d(a.Component,a.ctx)}:{};let o=await e.getInitialProps(a);if(i&&s(i))return o;if(!o)throw Error('"'+c(e)+'.getInitialProps()" should resolve to an object. But found "'+o+'" instead.');return o}let f="undefined"!=typeof performance,p=f&&["mark","measure","getEntriesByName"].every(e=>"function"==typeof performance[e]);class u extends Error{}class h extends Error{}class g extends Error{constructor(e){super(),this.code="ENOENT",this.name="PageNotFoundError",this.message="Cannot find module for page: "+e}}class b extends Error{constructor(e,a){super(),this.message="Failed to load static file for page: "+e+" "+a}}class v extends Error{constructor(){super(),this.code="ENOENT",this.message="Cannot find the middleware module"}}function y(e){return JSON.stringify({message:e.message,stack:e.stack})}},576:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"warnOnce",{enumerable:!0,get:function(){return i}});let i=e=>{}},58260:(e,a,i)=>{"use strict";i.d(a,{Z:()=>q});var o,n,t=function(){return(t=Object.assign||function(e){for(var a,i=1,o=arguments.length;i<o;i++)for(var n in a=arguments[i])Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n]);return e}).apply(this,arguments)};function l(e,a){var i={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&0>a.indexOf(o)&&(i[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,o=Object.getOwnPropertySymbols(e);n<o.length;n++)0>a.indexOf(o[n])&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(i[o[n]]=e[o[n]]);return i}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var r=i(17577),c="right-scroll-bar-position",s="width-before-scroll-bar";function m(e,a){return"function"==typeof e?e(a):e&&(e.current=a),e}var d="undefined"!=typeof window?r.useLayoutEffect:r.useEffect,f=new WeakMap;function p(e){return e}var u=function(e){void 0===e&&(e={});var a,i,o,n=(void 0===a&&(a=p),i=[],o=!1,{read:function(){if(o)throw Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");return i.length?i[i.length-1]:null},useMedium:function(e){var n=a(e,o);return i.push(n),function(){i=i.filter(function(e){return e!==n})}},assignSyncMedium:function(e){for(o=!0;i.length;){var a=i;i=[],a.forEach(e)}i={push:function(a){return e(a)},filter:function(){return i}}},assignMedium:function(e){o=!0;var a=[];if(i.length){var n=i;i=[],n.forEach(e),a=i}var t=function(){var i=a;a=[],i.forEach(e)},l=function(){return Promise.resolve().then(t)};l(),i={push:function(e){a.push(e),l()},filter:function(e){return a=a.filter(e),i}}}});return n.options=t({async:!0,ssr:!1},e),n}(),h=function(){},g=r.forwardRef(function(e,a){var i,o,n,c,s=r.useRef(null),p=r.useState({onScrollCapture:h,onWheelCapture:h,onTouchMoveCapture:h}),g=p[0],b=p[1],v=e.forwardProps,y=e.children,k=e.className,w=e.removeScrollBar,S=e.enabled,R=e.shards,M=e.sideCar,A=e.noIsolation,_=e.inert,T=e.allowPinchZoom,E=e.as,N=e.gapMode,j=l(e,["forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","as","gapMode"]),C=(i=[s,a],o=function(e){return i.forEach(function(a){return m(a,e)})},(n=(0,r.useState)(function(){return{value:null,callback:o,facade:{get current(){return n.value},set current(value){var e=n.value;e!==value&&(n.value=value,n.callback(value,e))}}}})[0]).callback=o,c=n.facade,d(function(){var e=f.get(c);if(e){var a=new Set(e),o=new Set(i),n=c.current;a.forEach(function(e){o.has(e)||m(e,null)}),o.forEach(function(e){a.has(e)||m(e,n)})}f.set(c,i)},[i]),c),P=t(t({},j),g);return r.createElement(r.Fragment,null,S&&r.createElement(M,{sideCar:u,removeScrollBar:w,shards:R,noIsolation:A,inert:_,setCallbacks:b,allowPinchZoom:!!T,lockRef:s,gapMode:N}),v?r.cloneElement(r.Children.only(y),t(t({},P),{ref:C})):r.createElement(void 0===E?"div":E,t({},P,{className:k,ref:C}),y))});g.defaultProps={enabled:!0,removeScrollBar:!0,inert:!1},g.classNames={fullWidth:s,zeroRight:c};var b=function(e){var a=e.sideCar,i=l(e,["sideCar"]);if(!a)throw Error("Sidecar: please provide `sideCar` property to import the right car");var o=a.read();if(!o)throw Error("Sidecar medium not found");return r.createElement(o,t({},i))};b.isSideCarExport=!0;var v=function(){var e=0,a=null;return{add:function(o){if(0==e&&(a=function(){if(!document)return null;var e=document.createElement("style");e.type="text/css";var a=n||i.nc;return a&&e.setAttribute("nonce",a),e}())){var t,l;(t=a).styleSheet?t.styleSheet.cssText=o:t.appendChild(document.createTextNode(o)),l=a,(document.head||document.getElementsByTagName("head")[0]).appendChild(l)}e++},remove:function(){--e||!a||(a.parentNode&&a.parentNode.removeChild(a),a=null)}}},y=function(){var e=v();return function(a,i){r.useEffect(function(){return e.add(a),function(){e.remove()}},[a&&i])}},k=function(){var e=y();return function(a){return e(a.styles,a.dynamic),null}},w={left:0,top:0,right:0,gap:0},S=function(e){return parseInt(e||"",10)||0},R=function(e){var a=window.getComputedStyle(document.body),i=a["padding"===e?"paddingLeft":"marginLeft"],o=a["padding"===e?"paddingTop":"marginTop"],n=a["padding"===e?"paddingRight":"marginRight"];return[S(i),S(o),S(n)]},M=function(e){if(void 0===e&&(e="margin"),"undefined"==typeof window)return w;var a=R(e),i=document.documentElement.clientWidth,o=window.innerWidth;return{left:a[0],top:a[1],right:a[2],gap:Math.max(0,o-i+a[2]-a[0])}},A=k(),_="data-scroll-locked",T=function(e,a,i,o){var n=e.left,t=e.top,l=e.right,r=e.gap;return void 0===i&&(i="margin"),"\n  .".concat("with-scroll-bars-hidden"," {\n   overflow: hidden ").concat(o,";\n   padding-right: ").concat(r,"px ").concat(o,";\n  }\n  body[").concat(_,"] {\n    overflow: hidden ").concat(o,";\n    overscroll-behavior: contain;\n    ").concat([a&&"position: relative ".concat(o,";"),"margin"===i&&"\n    padding-left: ".concat(n,"px;\n    padding-top: ").concat(t,"px;\n    padding-right: ").concat(l,"px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(r,"px ").concat(o,";\n    "),"padding"===i&&"padding-right: ".concat(r,"px ").concat(o,";")].filter(Boolean).join(""),"\n  }\n  \n  .").concat(c," {\n    right: ").concat(r,"px ").concat(o,";\n  }\n  \n  .").concat(s," {\n    margin-right: ").concat(r,"px ").concat(o,";\n  }\n  \n  .").concat(c," .").concat(c," {\n    right: 0 ").concat(o,";\n  }\n  \n  .").concat(s," .").concat(s," {\n    margin-right: 0 ").concat(o,";\n  }\n  \n  body[").concat(_,"] {\n    ").concat("--removed-body-scroll-bar-size",": ").concat(r,"px;\n  }\n")},E=function(){var e=parseInt(document.body.getAttribute(_)||"0",10);return isFinite(e)?e:0},N=function(){r.useEffect(function(){return document.body.setAttribute(_,(E()+1).toString()),function(){var e=E()-1;e<=0?document.body.removeAttribute(_):document.body.setAttribute(_,e.toString())}},[])},j=function(e){var a=e.noRelative,i=e.noImportant,o=e.gapMode,n=void 0===o?"margin":o;N();var t=r.useMemo(function(){return M(n)},[n]);return r.createElement(A,{styles:T(t,!a,n,i?"":"!important")})},C=!1;if("undefined"!=typeof window)try{var P=Object.defineProperty({},"passive",{get:function(){return C=!0,!0}});window.addEventListener("test",P,P),window.removeEventListener("test",P,P)}catch(e){C=!1}var D=!!C&&{passive:!1},B=function(e,a){var i=window.getComputedStyle(e);return"hidden"!==i[a]&&!(i.overflowY===i.overflowX&&"TEXTAREA"!==e.tagName&&"visible"===i[a])},x=function(e,a){var i=a.ownerDocument,o=a;do{if("undefined"!=typeof ShadowRoot&&o instanceof ShadowRoot&&(o=o.host),I(e,o)){var n=O(e,o);if(n[1]>n[2])return!0}o=o.parentNode}while(o&&o!==i.body);return!1},I=function(e,a){return"v"===e?B(a,"overflowY"):B(a,"overflowX")},O=function(e,a){return"v"===e?[a.scrollTop,a.scrollHeight,a.clientHeight]:[a.scrollLeft,a.scrollWidth,a.clientWidth]},z=function(e,a,i,o,n){var t,l=(t=window.getComputedStyle(a).direction,"h"===e&&"rtl"===t?-1:1),r=l*o,c=i.target,s=a.contains(c),m=!1,d=r>0,f=0,p=0;do{var u=O(e,c),h=u[0],g=u[1]-u[2]-l*h;(h||g)&&I(e,c)&&(f+=g,p+=h),c instanceof ShadowRoot?c=c.host:c=c.parentNode}while(!s&&c!==document.body||s&&(a.contains(c)||a===c));return d&&(n&&1>Math.abs(f)||!n&&r>f)?m=!0:!d&&(n&&1>Math.abs(p)||!n&&-r>p)&&(m=!0),m},L=function(e){return"changedTouches"in e?[e.changedTouches[0].clientX,e.changedTouches[0].clientY]:[0,0]},K=function(e){return[e.deltaX,e.deltaY]},G=function(e){return e&&"current"in e?e.current:e},V=0,F=[];let U=(o=function(e){var a=r.useRef([]),i=r.useRef([0,0]),o=r.useRef(),n=r.useState(V++)[0],t=r.useState(k)[0],l=r.useRef(e);r.useEffect(function(){l.current=e},[e]),r.useEffect(function(){if(e.inert){document.body.classList.add("block-interactivity-".concat(n));var a=(function(e,a,i){if(i||2==arguments.length)for(var o,n=0,t=a.length;n<t;n++)!o&&n in a||(o||(o=Array.prototype.slice.call(a,0,n)),o[n]=a[n]);return e.concat(o||Array.prototype.slice.call(a))})([e.lockRef.current],(e.shards||[]).map(G),!0).filter(Boolean);return a.forEach(function(e){return e.classList.add("allow-interactivity-".concat(n))}),function(){document.body.classList.remove("block-interactivity-".concat(n)),a.forEach(function(e){return e.classList.remove("allow-interactivity-".concat(n))})}}},[e.inert,e.lockRef.current,e.shards]);var c=r.useCallback(function(e,a){if("touches"in e&&2===e.touches.length)return!l.current.allowPinchZoom;var n,t=L(e),r=i.current,c="deltaX"in e?e.deltaX:r[0]-t[0],s="deltaY"in e?e.deltaY:r[1]-t[1],m=e.target,d=Math.abs(c)>Math.abs(s)?"h":"v";if("touches"in e&&"h"===d&&"range"===m.type)return!1;var f=x(d,m);if(!f)return!0;if(f?n=d:(n="v"===d?"h":"v",f=x(d,m)),!f)return!1;if(!o.current&&"changedTouches"in e&&(c||s)&&(o.current=n),!n)return!0;var p=o.current||n;return z(p,a,e,"h"===p?c:s,!0)},[]),s=r.useCallback(function(e){if(F.length&&F[F.length-1]===t){var i="deltaY"in e?K(e):L(e),o=a.current.filter(function(a){var o;return a.name===e.type&&(a.target===e.target||e.target===a.shadowParent)&&(o=a.delta)[0]===i[0]&&o[1]===i[1]})[0];if(o&&o.should){e.cancelable&&e.preventDefault();return}if(!o){var n=(l.current.shards||[]).map(G).filter(Boolean).filter(function(a){return a.contains(e.target)});(n.length>0?c(e,n[0]):!l.current.noIsolation)&&e.cancelable&&e.preventDefault()}}},[]),m=r.useCallback(function(e,i,o,n){var t={name:e,delta:i,target:o,should:n,shadowParent:function(e){for(var a=null;null!==e;)e instanceof ShadowRoot&&(a=e.host,e=e.host),e=e.parentNode;return a}(o)};a.current.push(t),setTimeout(function(){a.current=a.current.filter(function(e){return e!==t})},1)},[]),d=r.useCallback(function(e){i.current=L(e),o.current=void 0},[]),f=r.useCallback(function(a){m(a.type,K(a),a.target,c(a,e.lockRef.current))},[]),p=r.useCallback(function(a){m(a.type,L(a),a.target,c(a,e.lockRef.current))},[]);r.useEffect(function(){return F.push(t),e.setCallbacks({onScrollCapture:f,onWheelCapture:f,onTouchMoveCapture:p}),document.addEventListener("wheel",s,D),document.addEventListener("touchmove",s,D),document.addEventListener("touchstart",d,D),function(){F=F.filter(function(e){return e!==t}),document.removeEventListener("wheel",s,D),document.removeEventListener("touchmove",s,D),document.removeEventListener("touchstart",d,D)}},[]);var u=e.removeScrollBar,h=e.inert;return r.createElement(r.Fragment,null,h?r.createElement(t,{styles:"\n  .block-interactivity-".concat(n," {pointer-events: none;}\n  .allow-interactivity-").concat(n," {pointer-events: all;}\n")}):null,u?r.createElement(j,{gapMode:e.gapMode}):null)},u.useMedium(o),b);var H=r.forwardRef(function(e,a){return r.createElement(g,t({},e,{ref:a,sideCar:U}))});H.classNames=g.classNames;let q=H},41036:(e,a,i)=>{"use strict";i.d(a,{Vf:()=>M,WB:()=>S,jo:()=>_});var o=i(71159),n=i.n(o),t=i(44159);function l(e,a){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})),i.push.apply(i,o)}return i}function r(e){for(var a=1;a<arguments.length;a++){var i=null!=arguments[a]?arguments[a]:{};a%2?l(Object(i),!0).forEach(function(a){(function(e,a,i){var o;(a="symbol"==typeof(o=function(e,a){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var o=i.call(e,a||"default");if("object"!=typeof o)return o;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(e)}(a,"string"))?o:String(o))in e?Object.defineProperty(e,a,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[a]=i})(e,a,i[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(i,a))})}return e}function c(){return(c=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var i=arguments[a];for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(e[o]=i[o])}return e}).apply(this,arguments)}function s(e,a){if(null==e)return{};var i,o,n=function(e,a){if(null==e)return{};var i,o,n={},t=Object.keys(e);for(o=0;o<t.length;o++)i=t[o],a.indexOf(i)>=0||(n[i]=e[i]);return n}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)i=t[o],a.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}function m(e){if(null!=e)return(e=e.trim()).endsWith("/")&&(e=e.slice(0,-1)),e}var d=m(process.env.KINDE_SITE_URL),f=m(process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH)||m(process.env.KINDE_AUTH_API_PATH)||"/api/auth",p=m(process.env.KINDE_POST_LOGIN_REDIRECT_URL)||m(process.env.KINDE_POST_LOGIN_URL_REDIRECT_URL),u=m(process.env.KINDE_POST_LOGOUT_REDIRECT_URL),h=m(process.env.KINDE_ISSUER_URL),g=process.env.KINDE_CLIENT_ID,b=process.env.KINDE_CLIENT_SECRET,v=process.env.KINDE_AUDIENCE,y=m(process.env.KINDE_COOKIE_DOMAIN),k={isDebugMode:"true"===process.env.KINDE_DEBUG_MODE,apiPath:f,initialState:{accessToken:null,idToken:null,isAuthenticated:!1,isLoading:!0,organization:null,permissions:[],user:null,userOrganizations:[],getAccessToken:function(){return null},getBooleanFlag:function(){return null},getClaim:function(){return null},getFlag:function(){return null},getIdToken:function(){return null},getIntegerFlag:function(){return null},getOrganization:function(){return null},getPermission:function(){return null},getPermissions:function(){return[]},getStringFlag:function(){return null},getToken:function(){return null},getUser:function(){return null},getUserOrganizations:function(){return null},refreshData:function(){return null}},SESSION_PREFIX:"pkce-verifier",redirectURL:d,postLoginRedirectURL:p,issuerURL:h,clientID:g,clientSecret:b,postLogoutRedirectURL:u,audience:v,cookieDomain:y,responseType:"code",scope:"openid profile email offline",codeChallengeMethod:"S256",redirectRoutes:{callback:"".concat(f,"/kinde_callback")},issuerRoutes:{logout:"/logout",login:"/oauth2/auth",register:"/oauth2/auth",token:"/oauth2/token",profile:"/oauth2/v2/user_profile"},clientOptions:{audience:v?v.split(" "):"",authDomain:h||"",clientId:g||"",clientSecret:b||"",logoutRedirectURL:u||"",redirectURL:"".concat(d,"/api/auth/kinde_callback"),frameworkVersion:"2.3.3",framework:"Next.js"},grantType:t.qJ6.AUTHORIZATION_CODE},w=["children","orgCode","postLoginRedirectURL","authUrlParams"];function S(e){var a=e.children,i=e.orgCode,o=e.postLoginRedirectURL,t=e.authUrlParams,l=s(e,w),m=new URLSearchParams,d={};for(var f in null!=i&&(d.org_code=i),null!=o&&(d.post_login_redirect_url=o),d=r(r({},t),d))m.append(f,d[f]);return n().createElement("a",c({href:"".concat(k.apiPath,"/register").concat(m?"?".concat(m.toString()):"")},l),a)}var R=["children","postLoginRedirectURL","orgCode","authUrlParams"];function M(e){var a,i=e.children,o=e.postLoginRedirectURL,t=e.orgCode,l=e.authUrlParams,m=s(e,R),d=new URLSearchParams,f={};if(null!=t&&(f.org_code=t),null!=o){if(null!==(a=o)&&void 0!==a&&a.startsWith("/")){var p="undefined"!=typeof window?window.location.origin:process.env.KINDE_SITE_URL;o="".concat(p).concat(o)}f.post_login_redirect_url=o}for(var u in f=r(r({},l),f))d.append(u,f[u]);var h="".concat(k.apiPath,"/login").concat(d?"?".concat(d.toString()):"");return n().createElement("a",c({href:h},m),i)}var A=["children","postLogoutRedirectURL"];function _(e){var a=e.children,i=e.postLogoutRedirectURL,o=s(e,A);return n().createElement("a",c({href:"".concat(k.apiPath,"/logout").concat(i?"?post_logout_redirect_url=".concat(i):"","\n      ")},o),a)}},63888:(e,a,i)=>{"use strict";function o(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(a,"__esModule",{value:!0});var n=o(i(12781)),t=o(i(13685)),l=o(i(57310)),r=o(i(64326)),c=o(i(95687)),s=o(i(59796));let m=n.Readable,d=Symbol("buffer"),f=Symbol("type");class p{constructor(){this[f]="";let e=arguments[0],a=arguments[1],i=[];if(e){let a=Number(e.length);for(let o=0;o<a;o++){let a;let n=e[o];n instanceof Buffer?a=n:a=ArrayBuffer.isView(n)?Buffer.from(n.buffer,n.byteOffset,n.byteLength):n instanceof ArrayBuffer?Buffer.from(n):n instanceof p?n[d]:Buffer.from("string"==typeof n?n:String(n)),a.length,i.push(a)}}this[d]=Buffer.concat(i);let o=a&&void 0!==a.type&&String(a.type).toLowerCase();o&&!/[^\u0020-\u007E]/.test(o)&&(this[f]=o)}get size(){return this[d].length}get type(){return this[f]}text(){return Promise.resolve(this[d].toString())}arrayBuffer(){let e=this[d];return Promise.resolve(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength))}stream(){let e=new m;return e._read=function(){},e.push(this[d]),e.push(null),e}toString(){return"[object Blob]"}slice(){let e;let a=this.size,i=arguments[0],o=arguments[1];e=void 0===i?0:i<0?Math.max(a+i,0):Math.min(i,a);let n=Math.max((void 0===o?a:o<0?Math.max(a+o,0):Math.min(o,a))-e,0),t=this[d].slice(e,e+n),l=new p([],{type:arguments[2]});return l[d]=t,l}}function u(e,a,i){Error.call(this,e),this.message=e,this.type=a,i&&(this.code=this.errno=i.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(p.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(p.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),u.prototype=Object.create(Error.prototype),u.prototype.constructor=u,u.prototype.name="FetchError";let h=Symbol("Body internals"),g=n.PassThrough;function b(e){var a=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=i.size,t=i.timeout;null==e?e=null:y(e)?e=Buffer.from(e.toString()):k(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof n||(e=Buffer.from(String(e)))),this[h]={body:e,disturbed:!1,error:null},this.size=void 0===o?0:o,this.timeout=void 0===t?0:t,e instanceof n&&e.on("error",function(e){let i="AbortError"===e.name?e:new u(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[h].error=i})}function v(){var e=this;if(this[h].disturbed)return b.Promise.reject(TypeError(`body used already for: ${this.url}`));if(this[h].disturbed=!0,this[h].error)return b.Promise.reject(this[h].error);let a=this.body;if(null===a)return b.Promise.resolve(Buffer.alloc(0));if(k(a)&&(a=a.stream()),Buffer.isBuffer(a))return b.Promise.resolve(a);if(!(a instanceof n))return b.Promise.resolve(Buffer.alloc(0));let i=[],o=0,t=!1;return new b.Promise(function(n,l){let r;e.timeout&&(r=setTimeout(function(){t=!0,l(new u(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),a.on("error",function(a){"AbortError"===a.name?(t=!0,l(a)):l(new u(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))}),a.on("data",function(a){if(!t&&null!==a){if(e.size&&o+a.length>e.size){t=!0,l(new u(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}o+=a.length,i.push(a)}}),a.on("end",function(){if(!t){clearTimeout(r);try{n(Buffer.concat(i,o))}catch(a){l(new u(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}})})}function y(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function k(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function w(e){let a,i;let o=e.body;if(e.bodyUsed)throw Error("cannot clone body after it is used");return o instanceof n&&"function"!=typeof o.getBoundary&&(a=new g,i=new g,o.pipe(a),o.pipe(i),e[h].body=a,o=i),o}function S(e){if(null===e)return null;if("string"==typeof e)return"text/plain;charset=UTF-8";if(y(e))return"application/x-www-form-urlencoded;charset=UTF-8";if(k(e))return e.type||null;if(Buffer.isBuffer(e))return null;if("[object ArrayBuffer]"===Object.prototype.toString.call(e))return null;if(ArrayBuffer.isView(e))return null;else if("function"==typeof e.getBoundary)return`multipart/form-data;boundary=${e.getBoundary()}`;else if(e instanceof n)return null;else return"text/plain;charset=UTF-8"}function R(e){let a=e.body;return null===a?0:k(a)?a.size:Buffer.isBuffer(a)?a.length:a&&"function"==typeof a.getLengthSync&&(a._lengthRetrievers&&0==a._lengthRetrievers.length||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}b.prototype={get body(){return this[h].body},get bodyUsed(){return this[h].disturbed},arrayBuffer(){return v.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return v.call(this).then(function(a){return Object.assign(new p([],{type:e.toLowerCase()}),{[d]:a})})},json(){var e=this;return v.call(this).then(function(a){try{return JSON.parse(a.toString())}catch(a){return b.Promise.reject(new u(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}})},text(){return v.call(this).then(function(e){return e.toString()})},buffer(){return v.call(this)},textConverted(){var e=this;return v.call(this).then(function(a){return function(e,a){throw Error("The package `encoding` must be installed to use the textConverted() function")}(0,e.headers)})}},Object.defineProperties(b.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),b.mixIn=function(e){for(let a of Object.getOwnPropertyNames(b.prototype))if(!(a in e)){let i=Object.getOwnPropertyDescriptor(b.prototype,a);Object.defineProperty(e,a,i)}},b.Promise=global.Promise;let M=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,A=/[^\t\x20-\x7e\x80-\xff]/;function _(e){if(e=`${e}`,M.test(e)||""===e)throw TypeError(`${e} is not a legal HTTP header name`)}function T(e){if(e=`${e}`,A.test(e))throw TypeError(`${e} is not a legal HTTP header value`)}function E(e,a){for(let i in a=a.toLowerCase(),e)if(i.toLowerCase()===a)return i}let N=Symbol("map");class j{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[N]=Object.create(null),e instanceof j){let a=e.raw();for(let e of Object.keys(a))for(let i of a[e])this.append(e,i);return}if(null==e);else if("object"==typeof e){let a=e[Symbol.iterator];if(null!=a){if("function"!=typeof a)throw TypeError("Header pairs must be iterable");let i=[];for(let a of e){if("object"!=typeof a||"function"!=typeof a[Symbol.iterator])throw TypeError("Each header pair must be iterable");i.push(Array.from(a))}for(let e of i){if(2!==e.length)throw TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(let a of Object.keys(e)){let i=e[a];this.append(a,i)}}else throw TypeError("Provided initializer must be an object")}get(e){_(e=`${e}`);let a=E(this[N],e);return void 0===a?null:this[N][a].join(", ")}forEach(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,i=C(this),o=0;for(;o<i.length;){var n=i[o];let t=n[0],l=n[1];e.call(a,l,t,this),i=C(this),o++}}set(e,a){e=`${e}`,a=`${a}`,_(e),T(a);let i=E(this[N],e);this[N][void 0!==i?i:e]=[a]}append(e,a){e=`${e}`,a=`${a}`,_(e),T(a);let i=E(this[N],e);void 0!==i?this[N][i].push(a):this[N][e]=[a]}has(e){return _(e=`${e}`),void 0!==E(this[N],e)}delete(e){_(e=`${e}`);let a=E(this[N],e);void 0!==a&&delete this[N][a]}raw(){return this[N]}keys(){return D(this,"key")}values(){return D(this,"value")}[Symbol.iterator](){return D(this,"key+value")}}function C(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[N]).sort().map("key"===a?function(e){return e.toLowerCase()}:"value"===a?function(a){return e[N][a].join(", ")}:function(a){return[a.toLowerCase(),e[N][a].join(", ")]})}j.prototype.entries=j.prototype[Symbol.iterator],Object.defineProperty(j.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(j.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});let P=Symbol("internal");function D(e,a){let i=Object.create(B);return i[P]={target:e,kind:a,index:0},i}let B=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==B)throw TypeError("Value of `this` is not a HeadersIterator");var e=this[P];let a=e.target,i=e.kind,o=e.index,n=C(a,i);return o>=n.length?{value:void 0,done:!0}:(this[P].index=o+1,{value:n[o],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(B,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});let x=Symbol("Response internals"),I=t.STATUS_CODES;class O{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};b.call(this,e,a);let i=a.status||200,o=new j(a.headers);if(null!=e&&!o.has("Content-Type")){let a=S(e);a&&o.append("Content-Type",a)}this[x]={url:a.url,status:i,statusText:a.statusText||I[i],headers:o,counter:a.counter}}get url(){return this[x].url||""}get status(){return this[x].status}get ok(){return this[x].status>=200&&this[x].status<300}get redirected(){return this[x].counter>0}get statusText(){return this[x].statusText}get headers(){return this[x].headers}clone(){return new O(w(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}b.mixIn(O.prototype),Object.defineProperties(O.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(O.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});let z=Symbol("Request internals"),L=l.URL||r.URL,K=l.parse,G=l.format;function V(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new L(e).toString()),K(e)}let F="destroy"in n.Readable.prototype;function U(e){return"object"==typeof e&&"object"==typeof e[z]}class H{constructor(e){let a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};U(e)?a=V(e.url):(a=e&&e.href?V(e.href):V(`${e}`),e={});let o=i.method||e.method||"GET";if(o=o.toUpperCase(),(null!=i.body||U(e)&&null!==e.body)&&("GET"===o||"HEAD"===o))throw TypeError("Request with GET/HEAD method cannot have body");let n=null!=i.body?i.body:U(e)&&null!==e.body?w(e):null;b.call(this,n,{timeout:i.timeout||e.timeout||0,size:i.size||e.size||0});let t=new j(i.headers||e.headers||{});if(null!=n&&!t.has("Content-Type")){let e=S(n);e&&t.append("Content-Type",e)}let l=U(e)?e.signal:null;if("signal"in i&&(l=i.signal),null!=l&&!function(e){let a=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!!(a&&"AbortSignal"===a.constructor.name)}(l))throw TypeError("Expected signal to be an instanceof AbortSignal");this[z]={method:o,redirect:i.redirect||e.redirect||"follow",headers:t,parsedURL:a,signal:l},this.follow=void 0!==i.follow?i.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==i.compress?i.compress:void 0===e.compress||e.compress,this.counter=i.counter||e.counter||0,this.agent=i.agent||e.agent}get method(){return this[z].method}get url(){return G(this[z].parsedURL)}get headers(){return this[z].headers}get redirect(){return this[z].redirect}get signal(){return this[z].signal}clone(){return new H(this)}}function q(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}b.mixIn(H.prototype),Object.defineProperty(H.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(H.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),q.prototype=Object.create(Error.prototype),q.prototype.constructor=q,q.prototype.name="AbortError";let $=l.URL||r.URL,W=n.PassThrough,J=function(e,a){let i=new $(a).hostname,o=new $(e).hostname;return i===o||"."===i[i.length-o.length-1]&&i.endsWith(o)};function Z(e,a){if(!Z.Promise)throw Error("native promise missing, set fetch.Promise to your favorite alternative");return b.Promise=Z.Promise,new Z.Promise(function(i,o){var l;let r,m;let d=new H(e,a),f=function(e){let a=e[z].parsedURL,i=new j(e[z].headers);if(i.has("Accept")||i.set("Accept","*/*"),!a.protocol||!a.hostname)throw TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(a.protocol))throw TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof n.Readable&&!F)throw Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let o=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(o="0"),null!=e.body){let a=R(e);"number"==typeof a&&(o=String(a))}o&&i.set("Content-Length",o),i.has("User-Agent")||i.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!i.has("Accept-Encoding")&&i.set("Accept-Encoding","gzip,deflate");let t=e.agent;return"function"==typeof t&&(t=t(a)),i.has("Connection")||t||i.set("Connection","close"),Object.assign({},a,{method:e.method,headers:function(e){let a=Object.assign({__proto__:null},e[N]),i=E(e[N],"Host");return void 0!==i&&(a[i]=a[i][0]),a}(i),agent:t})}(d),p=("https:"===f.protocol?c:t).request,h=d.signal,g=null,b=function(){let e=new q("The user aborted a request.");o(e),d.body&&d.body instanceof n.Readable&&Y(d.body,e),g&&g.body&&g.body.emit("error",e)};if(h&&h.aborted){b();return}let v=function(){b(),w()},y=p(f);function w(){y.abort(),h&&h.removeEventListener("abort",v),clearTimeout(r)}h&&h.addEventListener("abort",v),d.timeout&&y.once("socket",function(e){r=setTimeout(function(){o(new u(`network timeout at: ${d.url}`,"request-timeout")),w()},d.timeout)}),y.on("error",function(e){o(new u(`request to ${d.url} failed, reason: ${e.message}`,"system",e)),g&&g.body&&Y(g.body,e),w()}),l=function(e){(!h||!h.aborted)&&g&&g.body&&Y(g.body,e)},y.on("socket",function(e){m=e}),y.on("response",function(e){let a=e.headers;"chunked"!==a["transfer-encoding"]||a["content-length"]||e.once("close",function(e){if(m&&m.listenerCount("data")>0&&!e){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",l(e)}})}),14>parseInt(process.version.substring(1))&&y.on("socket",function(e){e.addListener("close",function(a){let i=e.listenerCount("data")>0;if(g&&i&&!a&&!(h&&h.aborted)){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",g.body.emit("error",e)}})}),y.on("response",function(e){clearTimeout(r);let a=function(e){let a=new j;for(let i of Object.keys(e))if(!M.test(i)){if(Array.isArray(e[i]))for(let o of e[i])A.test(o)||(void 0===a[N][i]?a[N][i]=[o]:a[N][i].push(o));else A.test(e[i])||(a[N][i]=[e[i]])}return a}(e.headers);if(Z.isRedirect(e.statusCode)){let t=a.get("Location"),l=null;try{l=null===t?null:new $(t,d.url).toString()}catch(e){if("manual"!==d.redirect){o(new u(`uri requested responds with an invalid redirect URL: ${t}`,"invalid-redirect")),w();return}}switch(d.redirect){case"error":o(new u(`uri requested responds with a redirect, redirect mode is set to error: ${d.url}`,"no-redirect")),w();return;case"manual":if(null!==l)try{a.set("Location",l)}catch(e){o(e)}break;case"follow":var n;if(null===l)break;if(d.counter>=d.follow){o(new u(`maximum redirect reached at: ${d.url}`,"max-redirect")),w();return}let r={headers:new j(d.headers),follow:d.follow,counter:d.counter+1,agent:d.agent,compress:d.compress,method:d.method,body:d.body,signal:d.signal,timeout:d.timeout,size:d.size};if(!J(d.url,l)||(n=d.url,new $(l).protocol!==new $(n).protocol))for(let e of["authorization","www-authenticate","cookie","cookie2"])r.headers.delete(e);if(303!==e.statusCode&&d.body&&null===R(d)){o(new u("Cannot follow redirect with body being a readable stream","unsupported-redirect")),w();return}(303===e.statusCode||(301===e.statusCode||302===e.statusCode)&&"POST"===d.method)&&(r.method="GET",r.body=void 0,r.headers.delete("content-length")),i(Z(new H(l,r))),w();return}}e.once("end",function(){h&&h.removeEventListener("abort",v)});let t=e.pipe(new W),l={url:d.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:d.size,timeout:d.timeout,counter:d.counter},c=a.get("Content-Encoding");if(!d.compress||"HEAD"===d.method||null===c||204===e.statusCode||304===e.statusCode){i(g=new O(t,l));return}let m={flush:s.Z_SYNC_FLUSH,finishFlush:s.Z_SYNC_FLUSH};if("gzip"==c||"x-gzip"==c){i(g=new O(t=t.pipe(s.createGunzip(m)),l));return}if("deflate"==c||"x-deflate"==c){let a=e.pipe(new W);a.once("data",function(e){i(g=new O(t=(15&e[0])==8?t.pipe(s.createInflate()):t.pipe(s.createInflateRaw()),l))}),a.on("end",function(){g||i(g=new O(t,l))});return}if("br"==c&&"function"==typeof s.createBrotliDecompress){i(g=new O(t=t.pipe(s.createBrotliDecompress()),l));return}i(g=new O(t,l))}),function(e,a){let i=a.body;null===i?e.end():k(i)?i.stream().pipe(e):Buffer.isBuffer(i)?(e.write(i),e.end()):i.pipe(e)}(y,d)})}function Y(e,a){e.destroy?e.destroy(a):(e.emit("error",a),e.end())}Z.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},Z.Promise=global.Promise,e.exports=a=Z,Object.defineProperty(a,"__esModule",{value:!0}),a.default=a,a.Headers=j,a.Request=H,a.Response=O,a.FetchError=u},39104:function(e,a,i){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});let n=o(i(63888)),t=o(i(3034));class l{constructor(e){this.shouldThrowOnError=!1,this.method=e.method,this.url=e.url,this.headers=e.headers,this.schema=e.schema,this.body=e.body,this.shouldThrowOnError=e.shouldThrowOnError,this.signal=e.signal,this.isMaybeSingle=e.isMaybeSingle,e.fetch?this.fetch=e.fetch:"undefined"==typeof fetch?this.fetch=n.default:this.fetch=fetch}throwOnError(){return this.shouldThrowOnError=!0,this}then(e,a){void 0===this.schema||(["GET","HEAD"].includes(this.method)?this.headers["Accept-Profile"]=this.schema:this.headers["Content-Profile"]=this.schema),"GET"!==this.method&&"HEAD"!==this.method&&(this.headers["Content-Type"]="application/json");let i=(0,this.fetch)(this.url.toString(),{method:this.method,headers:this.headers,body:JSON.stringify(this.body),signal:this.signal}).then(async e=>{var a,i,o;let n=null,l=null,r=null,c=e.status,s=e.statusText;if(e.ok){if("HEAD"!==this.method){let a=await e.text();""===a||(l="text/csv"===this.headers.Accept?a:this.headers.Accept&&this.headers.Accept.includes("application/vnd.pgrst.plan+text")?a:JSON.parse(a))}let o=null===(a=this.headers.Prefer)||void 0===a?void 0:a.match(/count=(exact|planned|estimated)/),t=null===(i=e.headers.get("content-range"))||void 0===i?void 0:i.split("/");o&&t&&t.length>1&&(r=parseInt(t[1])),this.isMaybeSingle&&"GET"===this.method&&Array.isArray(l)&&(l.length>1?(n={code:"PGRST116",details:`Results contain ${l.length} rows, application/vnd.pgrst.object+json requires 1 row`,hint:null,message:"JSON object requested, multiple (or no) rows returned"},l=null,r=null,c=406,s="Not Acceptable"):l=1===l.length?l[0]:null)}else{let a=await e.text();try{n=JSON.parse(a),Array.isArray(n)&&404===e.status&&(l=[],n=null,c=200,s="OK")}catch(i){404===e.status&&""===a?(c=204,s="No Content"):n={message:a}}if(n&&this.isMaybeSingle&&(null===(o=null==n?void 0:n.details)||void 0===o?void 0:o.includes("0 rows"))&&(n=null,c=200,s="OK"),n&&this.shouldThrowOnError)throw new t.default(n)}return{error:n,data:l,count:r,status:c,statusText:s}});return this.shouldThrowOnError||(i=i.catch(e=>{var a,i,o;return{error:{message:`${null!==(a=null==e?void 0:e.name)&&void 0!==a?a:"FetchError"}: ${null==e?void 0:e.message}`,details:`${null!==(i=null==e?void 0:e.stack)&&void 0!==i?i:""}`,hint:"",code:`${null!==(o=null==e?void 0:e.code)&&void 0!==o?o:""}`},data:null,count:null,status:0,statusText:""}})),i.then(e,a)}}a.default=l},31750:function(e,a,i){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});let n=o(i(34359)),t=o(i(69603)),l=i(16749);class r{constructor(e,{headers:a={},schema:i,fetch:o}={}){this.url=e,this.headers=Object.assign(Object.assign({},l.DEFAULT_HEADERS),a),this.schemaName=i,this.fetch=o}from(e){let a=new URL(`${this.url}/${e}`);return new n.default(a,{headers:Object.assign({},this.headers),schema:this.schemaName,fetch:this.fetch})}schema(e){return new r(this.url,{headers:this.headers,schema:e,fetch:this.fetch})}rpc(e,a={},{head:i=!1,get:o=!1,count:n}={}){let l,r;let c=new URL(`${this.url}/rpc/${e}`);i||o?(l=i?"HEAD":"GET",Object.entries(a).filter(([e,a])=>void 0!==a).map(([e,a])=>[e,Array.isArray(a)?`{${a.join(",")}}`:`${a}`]).forEach(([e,a])=>{c.searchParams.append(e,a)})):(l="POST",r=a);let s=Object.assign({},this.headers);return n&&(s.Prefer=`count=${n}`),new t.default({method:l,url:c,headers:s,schema:this.schemaName,body:r,fetch:this.fetch,allowEmpty:!1})}}a.default=r},3034:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0});class i extends Error{constructor(e){super(e.message),this.name="PostgrestError",this.details=e.details,this.hint=e.hint,this.code=e.code}}a.default=i},69603:function(e,a,i){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});let n=o(i(3726));class t extends n.default{eq(e,a){return this.url.searchParams.append(e,`eq.${a}`),this}neq(e,a){return this.url.searchParams.append(e,`neq.${a}`),this}gt(e,a){return this.url.searchParams.append(e,`gt.${a}`),this}gte(e,a){return this.url.searchParams.append(e,`gte.${a}`),this}lt(e,a){return this.url.searchParams.append(e,`lt.${a}`),this}lte(e,a){return this.url.searchParams.append(e,`lte.${a}`),this}like(e,a){return this.url.searchParams.append(e,`like.${a}`),this}likeAllOf(e,a){return this.url.searchParams.append(e,`like(all).{${a.join(",")}}`),this}likeAnyOf(e,a){return this.url.searchParams.append(e,`like(any).{${a.join(",")}}`),this}ilike(e,a){return this.url.searchParams.append(e,`ilike.${a}`),this}ilikeAllOf(e,a){return this.url.searchParams.append(e,`ilike(all).{${a.join(",")}}`),this}ilikeAnyOf(e,a){return this.url.searchParams.append(e,`ilike(any).{${a.join(",")}}`),this}is(e,a){return this.url.searchParams.append(e,`is.${a}`),this}in(e,a){let i=Array.from(new Set(a)).map(e=>"string"==typeof e&&RegExp("[,()]").test(e)?`"${e}"`:`${e}`).join(",");return this.url.searchParams.append(e,`in.(${i})`),this}contains(e,a){return"string"==typeof a?this.url.searchParams.append(e,`cs.${a}`):Array.isArray(a)?this.url.searchParams.append(e,`cs.{${a.join(",")}}`):this.url.searchParams.append(e,`cs.${JSON.stringify(a)}`),this}containedBy(e,a){return"string"==typeof a?this.url.searchParams.append(e,`cd.${a}`):Array.isArray(a)?this.url.searchParams.append(e,`cd.{${a.join(",")}}`):this.url.searchParams.append(e,`cd.${JSON.stringify(a)}`),this}rangeGt(e,a){return this.url.searchParams.append(e,`sr.${a}`),this}rangeGte(e,a){return this.url.searchParams.append(e,`nxl.${a}`),this}rangeLt(e,a){return this.url.searchParams.append(e,`sl.${a}`),this}rangeLte(e,a){return this.url.searchParams.append(e,`nxr.${a}`),this}rangeAdjacent(e,a){return this.url.searchParams.append(e,`adj.${a}`),this}overlaps(e,a){return"string"==typeof a?this.url.searchParams.append(e,`ov.${a}`):this.url.searchParams.append(e,`ov.{${a.join(",")}}`),this}textSearch(e,a,{config:i,type:o}={}){let n="";"plain"===o?n="pl":"phrase"===o?n="ph":"websearch"===o&&(n="w");let t=void 0===i?"":`(${i})`;return this.url.searchParams.append(e,`${n}fts${t}.${a}`),this}match(e){return Object.entries(e).forEach(([e,a])=>{this.url.searchParams.append(e,`eq.${a}`)}),this}not(e,a,i){return this.url.searchParams.append(e,`not.${a}.${i}`),this}or(e,{foreignTable:a,referencedTable:i=a}={}){let o=i?`${i}.or`:"or";return this.url.searchParams.append(o,`(${e})`),this}filter(e,a,i){return this.url.searchParams.append(e,`${a}.${i}`),this}}a.default=t},34359:function(e,a,i){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});let n=o(i(69603));class t{constructor(e,{headers:a={},schema:i,fetch:o}){this.url=e,this.headers=a,this.schema=i,this.fetch=o}select(e,{head:a=!1,count:i}={}){let o=!1,t=(null!=e?e:"*").split("").map(e=>/\s/.test(e)&&!o?"":('"'===e&&(o=!o),e)).join("");return this.url.searchParams.set("select",t),i&&(this.headers.Prefer=`count=${i}`),new n.default({method:a?"HEAD":"GET",url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}insert(e,{count:a,defaultToNull:i=!0}={}){let o=[];if(this.headers.Prefer&&o.push(this.headers.Prefer),a&&o.push(`count=${a}`),i||o.push("missing=default"),this.headers.Prefer=o.join(","),Array.isArray(e)){let a=e.reduce((e,a)=>e.concat(Object.keys(a)),[]);if(a.length>0){let e=[...new Set(a)].map(e=>`"${e}"`);this.url.searchParams.set("columns",e.join(","))}}return new n.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}upsert(e,{onConflict:a,ignoreDuplicates:i=!1,count:o,defaultToNull:t=!0}={}){let l=[`resolution=${i?"ignore":"merge"}-duplicates`];if(void 0!==a&&this.url.searchParams.set("on_conflict",a),this.headers.Prefer&&l.push(this.headers.Prefer),o&&l.push(`count=${o}`),t||l.push("missing=default"),this.headers.Prefer=l.join(","),Array.isArray(e)){let a=e.reduce((e,a)=>e.concat(Object.keys(a)),[]);if(a.length>0){let e=[...new Set(a)].map(e=>`"${e}"`);this.url.searchParams.set("columns",e.join(","))}}return new n.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}update(e,{count:a}={}){let i=[];return this.headers.Prefer&&i.push(this.headers.Prefer),a&&i.push(`count=${a}`),this.headers.Prefer=i.join(","),new n.default({method:"PATCH",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}delete({count:e}={}){let a=[];return e&&a.push(`count=${e}`),this.headers.Prefer&&a.unshift(this.headers.Prefer),this.headers.Prefer=a.join(","),new n.default({method:"DELETE",url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}}a.default=t},3726:function(e,a,i){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});let n=o(i(39104));class t extends n.default{select(e){let a=!1,i=(null!=e?e:"*").split("").map(e=>/\s/.test(e)&&!a?"":('"'===e&&(a=!a),e)).join("");return this.url.searchParams.set("select",i),this.headers.Prefer&&(this.headers.Prefer+=","),this.headers.Prefer+="return=representation",this}order(e,{ascending:a=!0,nullsFirst:i,foreignTable:o,referencedTable:n=o}={}){let t=n?`${n}.order`:"order",l=this.url.searchParams.get(t);return this.url.searchParams.set(t,`${l?`${l},`:""}${e}.${a?"asc":"desc"}${void 0===i?"":i?".nullsfirst":".nullslast"}`),this}limit(e,{foreignTable:a,referencedTable:i=a}={}){let o=void 0===i?"limit":`${i}.limit`;return this.url.searchParams.set(o,`${e}`),this}range(e,a,{foreignTable:i,referencedTable:o=i}={}){let n=void 0===o?"offset":`${o}.offset`,t=void 0===o?"limit":`${o}.limit`;return this.url.searchParams.set(n,`${e}`),this.url.searchParams.set(t,`${a-e+1}`),this}abortSignal(e){return this.signal=e,this}single(){return this.headers.Accept="application/vnd.pgrst.object+json",this}maybeSingle(){return"GET"===this.method?this.headers.Accept="application/json":this.headers.Accept="application/vnd.pgrst.object+json",this.isMaybeSingle=!0,this}csv(){return this.headers.Accept="text/csv",this}geojson(){return this.headers.Accept="application/geo+json",this}explain({analyze:e=!1,verbose:a=!1,settings:i=!1,buffers:o=!1,wal:n=!1,format:t="text"}={}){var l;let r=[e?"analyze":null,a?"verbose":null,i?"settings":null,o?"buffers":null,n?"wal":null].filter(Boolean).join("|"),c=null!==(l=this.headers.Accept)&&void 0!==l?l:"application/json";return this.headers.Accept=`application/vnd.pgrst.plan+${t}; for="${c}"; options=${r};`,this}rollback(){var e;return(null!==(e=this.headers.Prefer)&&void 0!==e?e:"").trim().length>0?this.headers.Prefer+=",tx=rollback":this.headers.Prefer="tx=rollback",this}returns(){return this}}a.default=t},16749:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.DEFAULT_HEADERS=void 0;let o=i(27011);a.DEFAULT_HEADERS={"X-Client-Info":`postgrest-js/${o.version}`}},13147:function(e,a,i){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.PostgrestBuilder=a.PostgrestTransformBuilder=a.PostgrestFilterBuilder=a.PostgrestQueryBuilder=a.PostgrestClient=void 0;var n=i(31750);Object.defineProperty(a,"PostgrestClient",{enumerable:!0,get:function(){return o(n).default}});var t=i(34359);Object.defineProperty(a,"PostgrestQueryBuilder",{enumerable:!0,get:function(){return o(t).default}});var l=i(69603);Object.defineProperty(a,"PostgrestFilterBuilder",{enumerable:!0,get:function(){return o(l).default}});var r=i(3726);Object.defineProperty(a,"PostgrestTransformBuilder",{enumerable:!0,get:function(){return o(r).default}});var c=i(39104);Object.defineProperty(a,"PostgrestBuilder",{enumerable:!0,get:function(){return o(c).default}})},27011:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.version=void 0,a.version="0.0.0-automated"},12814:(e,a,i)=>{"use strict";i.d(a,{eI:()=>ak});let o=e=>{let a;return e?a=e:"undefined"==typeof fetch?a=(...e)=>Promise.resolve().then(i.t.bind(i,63888,23)).then(({default:a})=>a(...e)):a=fetch,(...e)=>a(...e)};class n extends Error{constructor(e,a="FunctionsError",i){super(e),this.name=a,this.context=i}}class t extends n{constructor(e){super("Failed to send a request to the Edge Function","FunctionsFetchError",e)}}class l extends n{constructor(e){super("Relay Error invoking the Edge Function","FunctionsRelayError",e)}}class r extends n{constructor(e){super("Edge Function returned a non-2xx status code","FunctionsHttpError",e)}}!function(e){e.Any="any",e.ApNortheast1="ap-northeast-1",e.ApNortheast2="ap-northeast-2",e.ApSouth1="ap-south-1",e.ApSoutheast1="ap-southeast-1",e.ApSoutheast2="ap-southeast-2",e.CaCentral1="ca-central-1",e.EuCentral1="eu-central-1",e.EuWest1="eu-west-1",e.EuWest2="eu-west-2",e.EuWest3="eu-west-3",e.SaEast1="sa-east-1",e.UsEast1="us-east-1",e.UsWest1="us-west-1",e.UsWest2="us-west-2"}(K||(K={}));class c{constructor(e,{headers:a={},customFetch:i,region:n=K.Any}={}){this.url=e,this.headers=a,this.region=n,this.fetch=o(i)}setAuth(e){this.headers.Authorization=`Bearer ${e}`}invoke(e,a={}){var i,o,n,c,s;return o=this,n=void 0,c=void 0,s=function*(){try{let o;let{headers:n,method:c,body:s}=a,m={},{region:d}=a;d||(d=this.region),d&&"any"!==d&&(m["x-region"]=d),s&&(n&&!Object.prototype.hasOwnProperty.call(n,"Content-Type")||!n)&&("undefined"!=typeof Blob&&s instanceof Blob||s instanceof ArrayBuffer?(m["Content-Type"]="application/octet-stream",o=s):"string"==typeof s?(m["Content-Type"]="text/plain",o=s):"undefined"!=typeof FormData&&s instanceof FormData?o=s:(m["Content-Type"]="application/json",o=JSON.stringify(s)));let f=yield this.fetch(`${this.url}/${e}`,{method:c||"POST",headers:Object.assign(Object.assign(Object.assign({},m),this.headers),n),body:o}).catch(e=>{throw new t(e)}),p=f.headers.get("x-relay-error");if(p&&"true"===p)throw new l(f);if(!f.ok)throw new r(f);let u=(null!==(i=f.headers.get("Content-Type"))&&void 0!==i?i:"text/plain").split(";")[0].trim();return{data:"application/json"===u?yield f.json():"application/octet-stream"===u?yield f.blob():"text/event-stream"===u?f:"multipart/form-data"===u?yield f.formData():yield f.text(),error:null}}catch(e){return{data:null,error:e}}},new(c||(c=Promise))(function(e,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function t(e){try{l(s.throw(e))}catch(e){a(e)}}function l(a){var o;a.done?e(a.value):((o=a.value)instanceof c?o:new c(function(e){e(o)})).then(i,t)}l((s=s.apply(o,n||[])).next())})}}let{PostgrestClient:s,PostgrestQueryBuilder:m,PostgrestFilterBuilder:d,PostgrestTransformBuilder:f,PostgrestBuilder:p}=i(13147),u={"X-Client-Info":"realtime-js/2.10.2"};(function(e){e[e.connecting=0]="connecting",e[e.open=1]="open",e[e.closing=2]="closing",e[e.closed=3]="closed"})(G||(G={})),function(e){e.closed="closed",e.errored="errored",e.joined="joined",e.joining="joining",e.leaving="leaving"}(V||(V={})),function(e){e.close="phx_close",e.error="phx_error",e.join="phx_join",e.reply="phx_reply",e.leave="phx_leave",e.access_token="access_token"}(F||(F={})),(U||(U={})).websocket="websocket",function(e){e.Connecting="connecting",e.Open="open",e.Closing="closing",e.Closed="closed"}(H||(H={}));class h{constructor(){this.HEADER_LENGTH=1}decode(e,a){return e.constructor===ArrayBuffer?a(this._binaryDecode(e)):"string"==typeof e?a(JSON.parse(e)):a({})}_binaryDecode(e){let a=new DataView(e),i=new TextDecoder;return this._decodeBroadcast(e,a,i)}_decodeBroadcast(e,a,i){let o=a.getUint8(1),n=a.getUint8(2),t=this.HEADER_LENGTH+2,l=i.decode(e.slice(t,t+o));t+=o;let r=i.decode(e.slice(t,t+n));return t+=n,{ref:null,topic:l,event:r,payload:JSON.parse(i.decode(e.slice(t,e.byteLength)))}}}class g{constructor(e,a){this.callback=e,this.timerCalc=a,this.timer=void 0,this.tries=0,this.callback=e,this.timerCalc=a}reset(){this.tries=0,clearTimeout(this.timer)}scheduleTimeout(){clearTimeout(this.timer),this.timer=setTimeout(()=>{this.tries=this.tries+1,this.callback()},this.timerCalc(this.tries+1))}}!function(e){e.abstime="abstime",e.bool="bool",e.date="date",e.daterange="daterange",e.float4="float4",e.float8="float8",e.int2="int2",e.int4="int4",e.int4range="int4range",e.int8="int8",e.int8range="int8range",e.json="json",e.jsonb="jsonb",e.money="money",e.numeric="numeric",e.oid="oid",e.reltime="reltime",e.text="text",e.time="time",e.timestamp="timestamp",e.timestamptz="timestamptz",e.timetz="timetz",e.tsrange="tsrange",e.tstzrange="tstzrange"}(q||(q={}));let b=(e,a,i={})=>{var o;let n=null!==(o=i.skipTypes)&&void 0!==o?o:[];return Object.keys(a).reduce((i,o)=>(i[o]=v(o,e,a,n),i),{})},v=(e,a,i,o)=>{let n=a.find(a=>a.name===e),t=null==n?void 0:n.type,l=i[e];return t&&!o.includes(t)?y(t,l):k(l)},y=(e,a)=>{if("_"===e.charAt(0))return M(a,e.slice(1,e.length));switch(e){case q.bool:return w(a);case q.float4:case q.float8:case q.int2:case q.int4:case q.int8:case q.numeric:case q.oid:return S(a);case q.json:case q.jsonb:return R(a);case q.timestamp:return A(a);case q.abstime:case q.date:case q.daterange:case q.int4range:case q.int8range:case q.money:case q.reltime:case q.text:case q.time:case q.timestamptz:case q.timetz:case q.tsrange:case q.tstzrange:default:return k(a)}},k=e=>e,w=e=>{switch(e){case"t":return!0;case"f":return!1;default:return e}},S=e=>{if("string"==typeof e){let a=parseFloat(e);if(!Number.isNaN(a))return a}return e},R=e=>{if("string"==typeof e)try{return JSON.parse(e)}catch(e){console.log(`JSON parse error: ${e}`)}return e},M=(e,a)=>{if("string"!=typeof e)return e;let i=e.length-1,o=e[i];if("{"===e[0]&&"}"===o){let o;let n=e.slice(1,i);try{o=JSON.parse("["+n+"]")}catch(e){o=n?n.split(","):[]}return o.map(e=>y(a,e))}return e},A=e=>"string"==typeof e?e.replace(" ","T"):e,_=e=>{let a=e;return(a=(a=a.replace(/^ws/i,"http")).replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i,"")).replace(/\/+$/,"")};class T{constructor(e,a,i={},o=1e4){this.channel=e,this.event=a,this.payload=i,this.timeout=o,this.sent=!1,this.timeoutTimer=void 0,this.ref="",this.receivedResp=null,this.recHooks=[],this.refEvent=null}resend(e){this.timeout=e,this._cancelRefEvent(),this.ref="",this.refEvent=null,this.receivedResp=null,this.sent=!1,this.send()}send(){this._hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload,ref:this.ref,join_ref:this.channel._joinRef()}))}updatePayload(e){this.payload=Object.assign(Object.assign({},this.payload),e)}receive(e,a){var i;return this._hasReceived(e)&&a(null===(i=this.receivedResp)||void 0===i?void 0:i.response),this.recHooks.push({status:e,callback:a}),this}startTimeout(){this.timeoutTimer||(this.ref=this.channel.socket._makeRef(),this.refEvent=this.channel._replyEventName(this.ref),this.channel._on(this.refEvent,{},e=>{this._cancelRefEvent(),this._cancelTimeout(),this.receivedResp=e,this._matchReceive(e)}),this.timeoutTimer=setTimeout(()=>{this.trigger("timeout",{})},this.timeout))}trigger(e,a){this.refEvent&&this.channel._trigger(this.refEvent,{status:e,response:a})}destroy(){this._cancelRefEvent(),this._cancelTimeout()}_cancelRefEvent(){this.refEvent&&this.channel._off(this.refEvent,{})}_cancelTimeout(){clearTimeout(this.timeoutTimer),this.timeoutTimer=void 0}_matchReceive({status:e,response:a}){this.recHooks.filter(a=>a.status===e).forEach(e=>e.callback(a))}_hasReceived(e){return this.receivedResp&&this.receivedResp.status===e}}!function(e){e.SYNC="sync",e.JOIN="join",e.LEAVE="leave"}($||($={}));class E{constructor(e,a){this.channel=e,this.state={},this.pendingDiffs=[],this.joinRef=null,this.caller={onJoin:()=>{},onLeave:()=>{},onSync:()=>{}};let i=(null==a?void 0:a.events)||{state:"presence_state",diff:"presence_diff"};this.channel._on(i.state,{},e=>{let{onJoin:a,onLeave:i,onSync:o}=this.caller;this.joinRef=this.channel._joinRef(),this.state=E.syncState(this.state,e,a,i),this.pendingDiffs.forEach(e=>{this.state=E.syncDiff(this.state,e,a,i)}),this.pendingDiffs=[],o()}),this.channel._on(i.diff,{},e=>{let{onJoin:a,onLeave:i,onSync:o}=this.caller;this.inPendingSyncState()?this.pendingDiffs.push(e):(this.state=E.syncDiff(this.state,e,a,i),o())}),this.onJoin((e,a,i)=>{this.channel._trigger("presence",{event:"join",key:e,currentPresences:a,newPresences:i})}),this.onLeave((e,a,i)=>{this.channel._trigger("presence",{event:"leave",key:e,currentPresences:a,leftPresences:i})}),this.onSync(()=>{this.channel._trigger("presence",{event:"sync"})})}static syncState(e,a,i,o){let n=this.cloneDeep(e),t=this.transformState(a),l={},r={};return this.map(n,(e,a)=>{t[e]||(r[e]=a)}),this.map(t,(e,a)=>{let i=n[e];if(i){let o=a.map(e=>e.presence_ref),n=i.map(e=>e.presence_ref),t=a.filter(e=>0>n.indexOf(e.presence_ref)),c=i.filter(e=>0>o.indexOf(e.presence_ref));t.length>0&&(l[e]=t),c.length>0&&(r[e]=c)}else l[e]=a}),this.syncDiff(n,{joins:l,leaves:r},i,o)}static syncDiff(e,a,i,o){let{joins:n,leaves:t}={joins:this.transformState(a.joins),leaves:this.transformState(a.leaves)};return i||(i=()=>{}),o||(o=()=>{}),this.map(n,(a,o)=>{var n;let t=null!==(n=e[a])&&void 0!==n?n:[];if(e[a]=this.cloneDeep(o),t.length>0){let i=e[a].map(e=>e.presence_ref),o=t.filter(e=>0>i.indexOf(e.presence_ref));e[a].unshift(...o)}i(a,t,o)}),this.map(t,(a,i)=>{let n=e[a];if(!n)return;let t=i.map(e=>e.presence_ref);n=n.filter(e=>0>t.indexOf(e.presence_ref)),e[a]=n,o(a,n,i),0===n.length&&delete e[a]}),e}static map(e,a){return Object.getOwnPropertyNames(e).map(i=>a(i,e[i]))}static transformState(e){return Object.getOwnPropertyNames(e=this.cloneDeep(e)).reduce((a,i)=>{let o=e[i];return"metas"in o?a[i]=o.metas.map(e=>(e.presence_ref=e.phx_ref,delete e.phx_ref,delete e.phx_ref_prev,e)):a[i]=o,a},{})}static cloneDeep(e){return JSON.parse(JSON.stringify(e))}onJoin(e){this.caller.onJoin=e}onLeave(e){this.caller.onLeave=e}onSync(e){this.caller.onSync=e}inPendingSyncState(){return!this.joinRef||this.joinRef!==this.channel._joinRef()}}(function(e){e.ALL="*",e.INSERT="INSERT",e.UPDATE="UPDATE",e.DELETE="DELETE"})(W||(W={})),function(e){e.BROADCAST="broadcast",e.PRESENCE="presence",e.POSTGRES_CHANGES="postgres_changes"}(J||(J={})),function(e){e.SUBSCRIBED="SUBSCRIBED",e.TIMED_OUT="TIMED_OUT",e.CLOSED="CLOSED",e.CHANNEL_ERROR="CHANNEL_ERROR"}(Z||(Z={}));class N{constructor(e,a={config:{}},i){this.topic=e,this.params=a,this.socket=i,this.bindings={},this.state=V.closed,this.joinedOnce=!1,this.pushBuffer=[],this.subTopic=e.replace(/^realtime:/i,""),this.params.config=Object.assign({broadcast:{ack:!1,self:!1},presence:{key:""},private:!1},a.config),this.timeout=this.socket.timeout,this.joinPush=new T(this,F.join,this.params,this.timeout),this.rejoinTimer=new g(()=>this._rejoinUntilConnected(),this.socket.reconnectAfterMs),this.joinPush.receive("ok",()=>{this.state=V.joined,this.rejoinTimer.reset(),this.pushBuffer.forEach(e=>e.send()),this.pushBuffer=[]}),this._onClose(()=>{this.rejoinTimer.reset(),this.socket.log("channel",`close ${this.topic} ${this._joinRef()}`),this.state=V.closed,this.socket._remove(this)}),this._onError(e=>{this._isLeaving()||this._isClosed()||(this.socket.log("channel",`error ${this.topic}`,e),this.state=V.errored,this.rejoinTimer.scheduleTimeout())}),this.joinPush.receive("timeout",()=>{this._isJoining()&&(this.socket.log("channel",`timeout ${this.topic}`,this.joinPush.timeout),this.state=V.errored,this.rejoinTimer.scheduleTimeout())}),this._on(F.reply,{},(e,a)=>{this._trigger(this._replyEventName(a),e)}),this.presence=new E(this),this.broadcastEndpointURL=_(this.socket.endPoint)+"/api/broadcast"}subscribe(e,a=this.timeout){var i,o;if(this.socket.isConnected()||this.socket.connect(),this.joinedOnce)throw"tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance";{let{config:{broadcast:n,presence:t,private:l}}=this.params;this._onError(a=>e&&e("CHANNEL_ERROR",a)),this._onClose(()=>e&&e("CLOSED"));let r={},c={broadcast:n,presence:t,postgres_changes:null!==(o=null===(i=this.bindings.postgres_changes)||void 0===i?void 0:i.map(e=>e.filter))&&void 0!==o?o:[],private:l};this.socket.accessToken&&(r.access_token=this.socket.accessToken),this.updateJoinPayload(Object.assign({config:c},r)),this.joinedOnce=!0,this._rejoin(a),this.joinPush.receive("ok",({postgres_changes:a})=>{var i;if(this.socket.accessToken&&this.socket.setAuth(this.socket.accessToken),void 0===a){e&&e("SUBSCRIBED");return}{let o=this.bindings.postgres_changes,n=null!==(i=null==o?void 0:o.length)&&void 0!==i?i:0,t=[];for(let i=0;i<n;i++){let n=o[i],{filter:{event:l,schema:r,table:c,filter:s}}=n,m=a&&a[i];if(m&&m.event===l&&m.schema===r&&m.table===c&&m.filter===s)t.push(Object.assign(Object.assign({},n),{id:m.id}));else{this.unsubscribe(),e&&e("CHANNEL_ERROR",Error("mismatch between server and client bindings for postgres changes"));return}}this.bindings.postgres_changes=t,e&&e("SUBSCRIBED");return}}).receive("error",a=>{e&&e("CHANNEL_ERROR",Error(JSON.stringify(Object.values(a).join(", ")||"error")))}).receive("timeout",()=>{e&&e("TIMED_OUT")})}return this}presenceState(){return this.presence.state}async track(e,a={}){return await this.send({type:"presence",event:"track",payload:e},a.timeout||this.timeout)}async untrack(e={}){return await this.send({type:"presence",event:"untrack"},e)}on(e,a,i){return this._on(e,a,i)}async send(e,a={}){var i,o;if(this._canPush()||"broadcast"!==e.type)return new Promise(i=>{var o,n,t;let l=this._push(e.type,e,a.timeout||this.timeout);"broadcast"!==e.type||(null===(t=null===(n=null===(o=this.params)||void 0===o?void 0:o.config)||void 0===n?void 0:n.broadcast)||void 0===t?void 0:t.ack)||i("ok"),l.receive("ok",()=>i("ok")),l.receive("error",()=>i("error")),l.receive("timeout",()=>i("timed out"))});{let{event:n,payload:t}=e,l={method:"POST",headers:{Authorization:this.socket.accessToken?`Bearer ${this.socket.accessToken}`:"",apikey:this.socket.apiKey?this.socket.apiKey:"","Content-Type":"application/json"},body:JSON.stringify({messages:[{topic:this.subTopic,event:n,payload:t}]})};try{let e=await this._fetchWithTimeout(this.broadcastEndpointURL,l,null!==(i=a.timeout)&&void 0!==i?i:this.timeout);return await (null===(o=e.body)||void 0===o?void 0:o.cancel()),e.ok?"ok":"error"}catch(e){if("AbortError"===e.name)return"timed out";return"error"}}}updateJoinPayload(e){this.joinPush.updatePayload(e)}unsubscribe(e=this.timeout){this.state=V.leaving;let a=()=>{this.socket.log("channel",`leave ${this.topic}`),this._trigger(F.close,"leave",this._joinRef())};return this.rejoinTimer.reset(),this.joinPush.destroy(),new Promise(i=>{let o=new T(this,F.leave,{},e);o.receive("ok",()=>{a(),i("ok")}).receive("timeout",()=>{a(),i("timed out")}).receive("error",()=>{i("error")}),o.send(),this._canPush()||o.trigger("ok",{})})}async _fetchWithTimeout(e,a,i){let o=new AbortController,n=setTimeout(()=>o.abort(),i),t=await this.socket.fetch(e,Object.assign(Object.assign({},a),{signal:o.signal}));return clearTimeout(n),t}_push(e,a,i=this.timeout){if(!this.joinedOnce)throw`tried to push '${e}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;let o=new T(this,e,a,i);return this._canPush()?o.send():(o.startTimeout(),this.pushBuffer.push(o)),o}_onMessage(e,a,i){return a}_isMember(e){return this.topic===e}_joinRef(){return this.joinPush.ref}_trigger(e,a,i){var o,n;let t=e.toLocaleLowerCase(),{close:l,error:r,leave:c,join:s}=F;if(i&&[l,r,c,s].indexOf(t)>=0&&i!==this._joinRef())return;let m=this._onMessage(t,a,i);if(a&&!m)throw"channel onMessage callbacks must return the payload, modified or unmodified";["insert","update","delete"].includes(t)?null===(o=this.bindings.postgres_changes)||void 0===o||o.filter(e=>{var a,i,o;return(null===(a=e.filter)||void 0===a?void 0:a.event)==="*"||(null===(o=null===(i=e.filter)||void 0===i?void 0:i.event)||void 0===o?void 0:o.toLocaleLowerCase())===t}).map(e=>e.callback(m,i)):null===(n=this.bindings[t])||void 0===n||n.filter(e=>{var i,o,n,l,r,c;if(!["broadcast","presence","postgres_changes"].includes(t))return e.type.toLocaleLowerCase()===t;if("id"in e){let t=e.id,l=null===(i=e.filter)||void 0===i?void 0:i.event;return t&&(null===(o=a.ids)||void 0===o?void 0:o.includes(t))&&("*"===l||(null==l?void 0:l.toLocaleLowerCase())===(null===(n=a.data)||void 0===n?void 0:n.type.toLocaleLowerCase()))}{let i=null===(r=null===(l=null==e?void 0:e.filter)||void 0===l?void 0:l.event)||void 0===r?void 0:r.toLocaleLowerCase();return"*"===i||i===(null===(c=null==a?void 0:a.event)||void 0===c?void 0:c.toLocaleLowerCase())}}).map(e=>{if("object"==typeof m&&"ids"in m){let e=m.data,{schema:a,table:i,commit_timestamp:o,type:n,errors:t}=e;m=Object.assign(Object.assign({},{schema:a,table:i,commit_timestamp:o,eventType:n,new:{},old:{},errors:t}),this._getPayloadRecords(e))}e.callback(m,i)})}_isClosed(){return this.state===V.closed}_isJoined(){return this.state===V.joined}_isJoining(){return this.state===V.joining}_isLeaving(){return this.state===V.leaving}_replyEventName(e){return`chan_reply_${e}`}_on(e,a,i){let o=e.toLocaleLowerCase(),n={type:o,filter:a,callback:i};return this.bindings[o]?this.bindings[o].push(n):this.bindings[o]=[n],this}_off(e,a){let i=e.toLocaleLowerCase();return this.bindings[i]=this.bindings[i].filter(e=>{var o;return!((null===(o=e.type)||void 0===o?void 0:o.toLocaleLowerCase())===i&&N.isEqual(e.filter,a))}),this}static isEqual(e,a){if(Object.keys(e).length!==Object.keys(a).length)return!1;for(let i in e)if(e[i]!==a[i])return!1;return!0}_rejoinUntilConnected(){this.rejoinTimer.scheduleTimeout(),this.socket.isConnected()&&this._rejoin()}_onClose(e){this._on(F.close,{},e)}_onError(e){this._on(F.error,{},a=>e(a))}_canPush(){return this.socket.isConnected()&&this._isJoined()}_rejoin(e=this.timeout){this._isLeaving()||(this.socket._leaveOpenTopic(this.topic),this.state=V.joining,this.joinPush.resend(e))}_getPayloadRecords(e){let a={new:{},old:{}};return("INSERT"===e.type||"UPDATE"===e.type)&&(a.new=b(e.columns,e.record)),("UPDATE"===e.type||"DELETE"===e.type)&&(a.old=b(e.columns,e.old_record)),a}}let j=()=>{},C="undefined"!=typeof WebSocket;class P{constructor(e,a){var o;this.accessToken=null,this.apiKey=null,this.channels=[],this.endPoint="",this.httpEndpoint="",this.headers=u,this.params={},this.timeout=1e4,this.heartbeatIntervalMs=3e4,this.heartbeatTimer=void 0,this.pendingHeartbeatRef=null,this.ref=0,this.logger=j,this.conn=null,this.sendBuffer=[],this.serializer=new h,this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this._resolveFetch=e=>{let a;return e?a=e:"undefined"==typeof fetch?a=(...e)=>Promise.resolve().then(i.t.bind(i,63888,23)).then(({default:a})=>a(...e)):a=fetch,(...e)=>a(...e)},this.endPoint=`${e}/${U.websocket}`,this.httpEndpoint=_(e),(null==a?void 0:a.transport)?this.transport=a.transport:this.transport=null,(null==a?void 0:a.params)&&(this.params=a.params),(null==a?void 0:a.headers)&&(this.headers=Object.assign(Object.assign({},this.headers),a.headers)),(null==a?void 0:a.timeout)&&(this.timeout=a.timeout),(null==a?void 0:a.logger)&&(this.logger=a.logger),(null==a?void 0:a.heartbeatIntervalMs)&&(this.heartbeatIntervalMs=a.heartbeatIntervalMs);let n=null===(o=null==a?void 0:a.params)||void 0===o?void 0:o.apikey;n&&(this.accessToken=n,this.apiKey=n),this.reconnectAfterMs=(null==a?void 0:a.reconnectAfterMs)?a.reconnectAfterMs:e=>[1e3,2e3,5e3,1e4][e-1]||1e4,this.encode=(null==a?void 0:a.encode)?a.encode:(e,a)=>a(JSON.stringify(e)),this.decode=(null==a?void 0:a.decode)?a.decode:this.serializer.decode.bind(this.serializer),this.reconnectTimer=new g(async()=>{this.disconnect(),this.connect()},this.reconnectAfterMs),this.fetch=this._resolveFetch(null==a?void 0:a.fetch)}connect(){if(!this.conn){if(this.transport){this.conn=new this.transport(this._endPointURL(),void 0,{headers:this.headers});return}if(C){this.conn=new WebSocket(this._endPointURL()),this.setupConnection();return}this.conn=new D(this._endPointURL(),void 0,{close:()=>{this.conn=null}}),i.e(893).then(i.bind(i,34893)).then(({default:e})=>{this.conn=new e(this._endPointURL(),void 0,{headers:this.headers}),this.setupConnection()})}}disconnect(e,a){this.conn&&(this.conn.onclose=function(){},e?this.conn.close(e,null!=a?a:""):this.conn.close(),this.conn=null,this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.reset())}getChannels(){return this.channels}async removeChannel(e){let a=await e.unsubscribe();return 0===this.channels.length&&this.disconnect(),a}async removeAllChannels(){let e=await Promise.all(this.channels.map(e=>e.unsubscribe()));return this.disconnect(),e}log(e,a,i){this.logger(e,a,i)}connectionState(){switch(this.conn&&this.conn.readyState){case G.connecting:return H.Connecting;case G.open:return H.Open;case G.closing:return H.Closing;default:return H.Closed}}isConnected(){return this.connectionState()===H.Open}channel(e,a={config:{}}){let i=new N(`realtime:${e}`,a,this);return this.channels.push(i),i}push(e){let{topic:a,event:i,payload:o,ref:n}=e,t=()=>{this.encode(e,e=>{var a;null===(a=this.conn)||void 0===a||a.send(e)})};this.log("push",`${a} ${i} (${n})`,o),this.isConnected()?t():this.sendBuffer.push(t)}setAuth(e){this.accessToken=e,this.channels.forEach(a=>{e&&a.updateJoinPayload({access_token:e}),a.joinedOnce&&a._isJoined()&&a._push(F.access_token,{access_token:e})})}_makeRef(){let e=this.ref+1;return e===this.ref?this.ref=0:this.ref=e,this.ref.toString()}_leaveOpenTopic(e){let a=this.channels.find(a=>a.topic===e&&(a._isJoined()||a._isJoining()));a&&(this.log("transport",`leaving duplicate topic "${e}"`),a.unsubscribe())}_remove(e){this.channels=this.channels.filter(a=>a._joinRef()!==e._joinRef())}setupConnection(){this.conn&&(this.conn.binaryType="arraybuffer",this.conn.onopen=()=>this._onConnOpen(),this.conn.onerror=e=>this._onConnError(e),this.conn.onmessage=e=>this._onConnMessage(e),this.conn.onclose=e=>this._onConnClose(e))}_endPointURL(){return this._appendParams(this.endPoint,Object.assign({},this.params,{vsn:"1.0.0"}))}_onConnMessage(e){this.decode(e.data,e=>{let{topic:a,event:i,payload:o,ref:n}=e;(n&&n===this.pendingHeartbeatRef||i===(null==o?void 0:o.type))&&(this.pendingHeartbeatRef=null),this.log("receive",`${o.status||""} ${a} ${i} ${n&&"("+n+")"||""}`,o),this.channels.filter(e=>e._isMember(a)).forEach(e=>e._trigger(i,o,n)),this.stateChangeCallbacks.message.forEach(a=>a(e))})}_onConnOpen(){this.log("transport",`connected to ${this._endPointURL()}`),this._flushSendBuffer(),this.reconnectTimer.reset(),this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval(()=>this._sendHeartbeat(),this.heartbeatIntervalMs),this.stateChangeCallbacks.open.forEach(e=>e())}_onConnClose(e){this.log("transport","close",e),this._triggerChanError(),this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(a=>a(e))}_onConnError(e){this.log("transport",e.message),this._triggerChanError(),this.stateChangeCallbacks.error.forEach(a=>a(e))}_triggerChanError(){this.channels.forEach(e=>e._trigger(F.error))}_appendParams(e,a){if(0===Object.keys(a).length)return e;let i=e.match(/\?/)?"&":"?",o=new URLSearchParams(a);return`${e}${i}${o}`}_flushSendBuffer(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(e=>e()),this.sendBuffer=[])}_sendHeartbeat(){var e;if(this.isConnected()){if(this.pendingHeartbeatRef){this.pendingHeartbeatRef=null,this.log("transport","heartbeat timeout. Attempting to re-establish connection"),null===(e=this.conn)||void 0===e||e.close(1e3,"hearbeat timeout");return}this.pendingHeartbeatRef=this._makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef}),this.setAuth(this.accessToken)}}}class D{constructor(e,a,i){this.binaryType="arraybuffer",this.onclose=()=>{},this.onerror=()=>{},this.onmessage=()=>{},this.onopen=()=>{},this.readyState=G.connecting,this.send=()=>{},this.url=null,this.url=e,this.close=i.close}}class B extends Error{constructor(e){super(e),this.__isStorageError=!0,this.name="StorageError"}}function x(e){return"object"==typeof e&&null!==e&&"__isStorageError"in e}class I extends B{constructor(e,a){super(e),this.name="StorageApiError",this.status=a}toJSON(){return{name:this.name,message:this.message,status:this.status}}}class O extends B{constructor(e,a){super(e),this.name="StorageUnknownError",this.originalError=a}}let z=e=>{let a;return e?a=e:"undefined"==typeof fetch?a=(...e)=>Promise.resolve().then(i.t.bind(i,63888,23)).then(({default:a})=>a(...e)):a=fetch,(...e)=>a(...e)},L=()=>(function(e,a,i,o){return new(i||(i=Promise))(function(n,t){function l(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(e){var a;e.done?n(e.value):((a=e.value)instanceof i?a:new i(function(e){e(a)})).then(l,r)}c((o=o.apply(e,a||[])).next())})})(void 0,void 0,void 0,function*(){return"undefined"==typeof Response?(yield Promise.resolve().then(i.t.bind(i,63888,23))).Response:Response});var K,G,V,F,U,H,q,$,W,J,Z,Y=function(e,a,i,o){return new(i||(i=Promise))(function(n,t){function l(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(e){var a;e.done?n(e.value):((a=e.value)instanceof i?a:new i(function(e){e(a)})).then(l,r)}c((o=o.apply(e,a||[])).next())})};let X=e=>e.msg||e.message||e.error_description||e.error||JSON.stringify(e),Q=(e,a)=>Y(void 0,void 0,void 0,function*(){e instanceof(yield L())?e.json().then(i=>{a(new I(X(i),e.status||500))}).catch(e=>{a(new O(X(e),e))}):a(new O(X(e),e))}),ee=(e,a,i,o)=>{let n={method:e,headers:(null==a?void 0:a.headers)||{}};return"GET"===e?n:(n.headers=Object.assign({"Content-Type":"application/json"},null==a?void 0:a.headers),n.body=JSON.stringify(o),Object.assign(Object.assign({},n),i))};function ea(e,a,i,o,n,t){return Y(this,void 0,void 0,function*(){return new Promise((l,r)=>{e(i,ee(a,o,n,t)).then(e=>{if(!e.ok)throw e;return(null==o?void 0:o.noResolveJson)?e:e.json()}).then(e=>l(e)).catch(e=>Q(e,r))})})}function ei(e,a,i,o){return Y(this,void 0,void 0,function*(){return ea(e,"GET",a,i,o)})}function eo(e,a,i,o,n){return Y(this,void 0,void 0,function*(){return ea(e,"POST",a,o,n,i)})}function en(e,a,i,o,n){return Y(this,void 0,void 0,function*(){return ea(e,"DELETE",a,o,n,i)})}var et=function(e,a,i,o){return new(i||(i=Promise))(function(n,t){function l(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(e){var a;e.done?n(e.value):((a=e.value)instanceof i?a:new i(function(e){e(a)})).then(l,r)}c((o=o.apply(e,a||[])).next())})};let el={limit:100,offset:0,sortBy:{column:"name",order:"asc"}},er={cacheControl:"3600",contentType:"text/plain;charset=UTF-8",upsert:!1};class ec{constructor(e,a={},i,o){this.url=e,this.headers=a,this.bucketId=i,this.fetch=z(o)}uploadOrUpdate(e,a,i,o){return et(this,void 0,void 0,function*(){try{let n;let t=Object.assign(Object.assign({},er),o),l=Object.assign(Object.assign({},this.headers),"POST"===e&&{"x-upsert":String(t.upsert)});"undefined"!=typeof Blob&&i instanceof Blob?((n=new FormData).append("cacheControl",t.cacheControl),n.append("",i)):"undefined"!=typeof FormData&&i instanceof FormData?(n=i).append("cacheControl",t.cacheControl):(n=i,l["cache-control"]=`max-age=${t.cacheControl}`,l["content-type"]=t.contentType);let r=this._removeEmptyFolders(a),c=this._getFinalPath(r),s=yield this.fetch(`${this.url}/object/${c}`,Object.assign({method:e,body:n,headers:l},(null==t?void 0:t.duplex)?{duplex:t.duplex}:{})),m=yield s.json();if(s.ok)return{data:{path:r,id:m.Id,fullPath:m.Key},error:null};return{data:null,error:m}}catch(e){if(x(e))return{data:null,error:e};throw e}})}upload(e,a,i){return et(this,void 0,void 0,function*(){return this.uploadOrUpdate("POST",e,a,i)})}uploadToSignedUrl(e,a,i,o){return et(this,void 0,void 0,function*(){let n=this._removeEmptyFolders(e),t=this._getFinalPath(n),l=new URL(this.url+`/object/upload/sign/${t}`);l.searchParams.set("token",a);try{let e;let a=Object.assign({upsert:er.upsert},o),t=Object.assign(Object.assign({},this.headers),{"x-upsert":String(a.upsert)});"undefined"!=typeof Blob&&i instanceof Blob?((e=new FormData).append("cacheControl",a.cacheControl),e.append("",i)):"undefined"!=typeof FormData&&i instanceof FormData?(e=i).append("cacheControl",a.cacheControl):(e=i,t["cache-control"]=`max-age=${a.cacheControl}`,t["content-type"]=a.contentType);let r=yield this.fetch(l.toString(),{method:"PUT",body:e,headers:t}),c=yield r.json();if(r.ok)return{data:{path:n,fullPath:c.Key},error:null};return{data:null,error:c}}catch(e){if(x(e))return{data:null,error:e};throw e}})}createSignedUploadUrl(e,a){return et(this,void 0,void 0,function*(){try{let i=this._getFinalPath(e),o=Object.assign({},this.headers);(null==a?void 0:a.upsert)&&(o["x-upsert"]="true");let n=yield eo(this.fetch,`${this.url}/object/upload/sign/${i}`,{},{headers:o}),t=new URL(this.url+n.url),l=t.searchParams.get("token");if(!l)throw new B("No token returned by API");return{data:{signedUrl:t.toString(),path:e,token:l},error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}update(e,a,i){return et(this,void 0,void 0,function*(){return this.uploadOrUpdate("PUT",e,a,i)})}move(e,a,i){return et(this,void 0,void 0,function*(){try{return{data:yield eo(this.fetch,`${this.url}/object/move`,{bucketId:this.bucketId,sourceKey:e,destinationKey:a,destinationBucket:null==i?void 0:i.destinationBucket},{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}copy(e,a,i){return et(this,void 0,void 0,function*(){try{return{data:{path:(yield eo(this.fetch,`${this.url}/object/copy`,{bucketId:this.bucketId,sourceKey:e,destinationKey:a,destinationBucket:null==i?void 0:i.destinationBucket},{headers:this.headers})).Key},error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}createSignedUrl(e,a,i){return et(this,void 0,void 0,function*(){try{let o=this._getFinalPath(e),n=yield eo(this.fetch,`${this.url}/object/sign/${o}`,Object.assign({expiresIn:a},(null==i?void 0:i.transform)?{transform:i.transform}:{}),{headers:this.headers}),t=(null==i?void 0:i.download)?`&download=${!0===i.download?"":i.download}`:"";return{data:n={signedUrl:encodeURI(`${this.url}${n.signedURL}${t}`)},error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}createSignedUrls(e,a,i){return et(this,void 0,void 0,function*(){try{let o=yield eo(this.fetch,`${this.url}/object/sign/${this.bucketId}`,{expiresIn:a,paths:e},{headers:this.headers}),n=(null==i?void 0:i.download)?`&download=${!0===i.download?"":i.download}`:"";return{data:o.map(e=>Object.assign(Object.assign({},e),{signedUrl:e.signedURL?encodeURI(`${this.url}${e.signedURL}${n}`):null})),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}download(e,a){return et(this,void 0,void 0,function*(){let i=void 0!==(null==a?void 0:a.transform),o=this.transformOptsToQueryString((null==a?void 0:a.transform)||{}),n=o?`?${o}`:"";try{let a=this._getFinalPath(e),o=yield ei(this.fetch,`${this.url}/${i?"render/image/authenticated":"object"}/${a}${n}`,{headers:this.headers,noResolveJson:!0});return{data:yield o.blob(),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}getPublicUrl(e,a){let i=this._getFinalPath(e),o=[],n=(null==a?void 0:a.download)?`download=${!0===a.download?"":a.download}`:"";""!==n&&o.push(n);let t=void 0!==(null==a?void 0:a.transform),l=this.transformOptsToQueryString((null==a?void 0:a.transform)||{});""!==l&&o.push(l);let r=o.join("&");return""!==r&&(r=`?${r}`),{data:{publicUrl:encodeURI(`${this.url}/${t?"render/image":"object"}/public/${i}${r}`)}}}remove(e){return et(this,void 0,void 0,function*(){try{return{data:yield en(this.fetch,`${this.url}/object/${this.bucketId}`,{prefixes:e},{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}list(e,a,i){return et(this,void 0,void 0,function*(){try{let o=Object.assign(Object.assign(Object.assign({},el),a),{prefix:e||""});return{data:yield eo(this.fetch,`${this.url}/object/list/${this.bucketId}`,o,{headers:this.headers},i),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}_getFinalPath(e){return`${this.bucketId}/${e}`}_removeEmptyFolders(e){return e.replace(/^\/|\/$/g,"").replace(/\/+/g,"/")}transformOptsToQueryString(e){let a=[];return e.width&&a.push(`width=${e.width}`),e.height&&a.push(`height=${e.height}`),e.resize&&a.push(`resize=${e.resize}`),e.format&&a.push(`format=${e.format}`),e.quality&&a.push(`quality=${e.quality}`),a.join("&")}}let es={"X-Client-Info":"storage-js/2.6.0"};var em=function(e,a,i,o){return new(i||(i=Promise))(function(n,t){function l(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(e){var a;e.done?n(e.value):((a=e.value)instanceof i?a:new i(function(e){e(a)})).then(l,r)}c((o=o.apply(e,a||[])).next())})};class ed{constructor(e,a={},i){this.url=e,this.headers=Object.assign(Object.assign({},es),a),this.fetch=z(i)}listBuckets(){return em(this,void 0,void 0,function*(){try{return{data:yield ei(this.fetch,`${this.url}/bucket`,{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}getBucket(e){return em(this,void 0,void 0,function*(){try{return{data:yield ei(this.fetch,`${this.url}/bucket/${e}`,{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}createBucket(e,a={public:!1}){return em(this,void 0,void 0,function*(){try{return{data:yield eo(this.fetch,`${this.url}/bucket`,{id:e,name:e,public:a.public,file_size_limit:a.fileSizeLimit,allowed_mime_types:a.allowedMimeTypes},{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}updateBucket(e,a){return em(this,void 0,void 0,function*(){try{return{data:yield function(e,a,i,o,n){return Y(this,void 0,void 0,function*(){return ea(e,"PUT",a,o,void 0,i)})}(this.fetch,`${this.url}/bucket/${e}`,{id:e,name:e,public:a.public,file_size_limit:a.fileSizeLimit,allowed_mime_types:a.allowedMimeTypes},{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}emptyBucket(e){return em(this,void 0,void 0,function*(){try{return{data:yield eo(this.fetch,`${this.url}/bucket/${e}/empty`,{},{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}deleteBucket(e){return em(this,void 0,void 0,function*(){try{return{data:yield en(this.fetch,`${this.url}/bucket/${e}`,{},{headers:this.headers}),error:null}}catch(e){if(x(e))return{data:null,error:e};throw e}})}}class ef extends ed{constructor(e,a={},i){super(e,a,i)}from(e){return new ec(this.url,this.headers,e,this.fetch)}}let ep="";"undefined"!=typeof Deno?ep="deno":"undefined"!=typeof document?ep="web":"undefined"!=typeof navigator&&"ReactNative"===navigator.product?ep="react-native":ep="node";let eu={headers:{"X-Client-Info":`supabase-js-${ep}/2.44.2`}},eh={schema:"public"},eg={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},eb={};var ev=i(63888),ey=i.n(ev);let ek=e=>{let a;return e?a=e:"undefined"==typeof fetch?a=ey():a=fetch,(...e)=>a(...e)},ew=()=>"undefined"==typeof Headers?ev.Headers:Headers,eS=(e,a,i)=>{let o=ek(i),n=ew();return(i,t)=>(function(e,a,i,o){return new(i||(i=Promise))(function(n,t){function l(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(e){var a;e.done?n(e.value):((a=e.value)instanceof i?a:new i(function(e){e(a)})).then(l,r)}c((o=o.apply(e,a||[])).next())})})(void 0,void 0,void 0,function*(){var l;let r=null!==(l=yield a())&&void 0!==l?l:e,c=new n(null==t?void 0:t.headers);return c.has("apikey")||c.set("apikey",e),c.has("Authorization")||c.set("Authorization",`Bearer ${r}`),o(i,Object.assign(Object.assign({},t),{headers:c}))})},eR="2.64.2",eM={"X-Client-Info":`gotrue-js/${eR}`},eA="X-Supabase-Api-Version",e_={"2024-01-01":{timestamp:Date.parse("2024-01-01T00:00:00.0Z"),name:"2024-01-01"}},eT=()=>"undefined"!=typeof document,eE={tested:!1,writable:!1},eN=()=>{if(!eT())return!1;try{if("object"!=typeof globalThis.localStorage)return!1}catch(e){return!1}if(eE.tested)return eE.writable;let e=`lswt-${Math.random()}${Math.random()}`;try{globalThis.localStorage.setItem(e,e),globalThis.localStorage.removeItem(e),eE.tested=!0,eE.writable=!0}catch(e){eE.tested=!0,eE.writable=!1}return eE.writable};function ej(e){let a={},i=new URL(e);if(i.hash&&"#"===i.hash[0])try{new URLSearchParams(i.hash.substring(1)).forEach((e,i)=>{a[i]=e})}catch(e){}return i.searchParams.forEach((e,i)=>{a[i]=e}),a}let eC=e=>{let a;return e?a=e:"undefined"==typeof fetch?a=(...e)=>Promise.resolve().then(i.t.bind(i,63888,23)).then(({default:a})=>a(...e)):a=fetch,(...e)=>a(...e)},eP=e=>"object"==typeof e&&null!==e&&"status"in e&&"ok"in e&&"json"in e&&"function"==typeof e.json,eD=async(e,a,i)=>{await e.setItem(a,JSON.stringify(i))},eB=async(e,a)=>{let i=await e.getItem(a);if(!i)return null;try{return JSON.parse(i)}catch(e){return i}},ex=async(e,a)=>{await e.removeItem(a)};class eI{constructor(){this.promise=new eI.promiseConstructor((e,a)=>{this.resolve=e,this.reject=a})}}function eO(e){let a=e.split(".");if(3!==a.length)throw Error("JWT is not valid: not a JWT structure");if(!/^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i.test(a[1]))throw Error("JWT is not valid: payload is not in base64url format");return JSON.parse(function(e){let a,i,o,n,t,l,r;let c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",s="",m=0;for(e=e.replace("-","+").replace("_","/");m<e.length;)n=c.indexOf(e.charAt(m++)),t=c.indexOf(e.charAt(m++)),l=c.indexOf(e.charAt(m++)),r=c.indexOf(e.charAt(m++)),a=n<<2|t>>4,i=(15&t)<<4|l>>2,o=(3&l)<<6|r,s+=String.fromCharCode(a),64!=l&&0!=i&&(s+=String.fromCharCode(i)),64!=r&&0!=o&&(s+=String.fromCharCode(o));return s}(a[1]))}async function ez(e){return await new Promise(a=>{setTimeout(()=>a(null),e)})}function eL(e){return("0"+e.toString(16)).substr(-2)}async function eK(e){let a=new TextEncoder().encode(e);return Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",a))).map(e=>String.fromCharCode(e)).join("")}async function eG(e){return"undefined"!=typeof crypto&&void 0!==crypto.subtle&&"undefined"!=typeof TextEncoder?btoa(await eK(e)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""):(console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256."),e)}async function eV(e,a,i=!1){let o=function(){let e=new Uint32Array(56);if("undefined"==typeof crypto){let e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",a=e.length,i="";for(let o=0;o<56;o++)i+=e.charAt(Math.floor(Math.random()*a));return i}return crypto.getRandomValues(e),Array.from(e,eL).join("")}(),n=o;i&&(n+="/PASSWORD_RECOVERY"),await eD(e,`${a}-code-verifier`,n);let t=await eG(o),l=o===t?"plain":"s256";return[t,l]}eI.promiseConstructor=Promise;let eF=/^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;class eU extends Error{constructor(e,a,i){super(e),this.__isAuthError=!0,this.name="AuthError",this.status=a,this.code=i}}function eH(e){return"object"==typeof e&&null!==e&&"__isAuthError"in e}class eq extends eU{constructor(e,a,i){super(e,a,i),this.name="AuthApiError",this.status=a,this.code=i}}class e$ extends eU{constructor(e,a){super(e),this.name="AuthUnknownError",this.originalError=a}}class eW extends eU{constructor(e,a,i,o){super(e,i,o),this.name=a,this.status=i}}class eJ extends eW{constructor(){super("Auth session missing!","AuthSessionMissingError",400,void 0)}}class eZ extends eW{constructor(){super("Auth session or user missing","AuthInvalidTokenResponseError",500,void 0)}}class eY extends eW{constructor(e){super(e,"AuthInvalidCredentialsError",400,void 0)}}class eX extends eW{constructor(e,a=null){super(e,"AuthImplicitGrantRedirectError",500,void 0),this.details=null,this.details=a}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class eQ extends eW{constructor(e,a=null){super(e,"AuthPKCEGrantCodeExchangeError",500,void 0),this.details=null,this.details=a}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class e1 extends eW{constructor(e,a){super(e,"AuthRetryableFetchError",a,void 0)}}function e0(e){return eH(e)&&"AuthRetryableFetchError"===e.name}class e2 extends eW{constructor(e,a,i){super(e,"AuthWeakPasswordError",a,"weak_password"),this.reasons=i}}var e6=function(e,a){var i={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&0>a.indexOf(o)&&(i[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,o=Object.getOwnPropertySymbols(e);n<o.length;n++)0>a.indexOf(o[n])&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(i[o[n]]=e[o[n]]);return i};let e4=e=>e.msg||e.message||e.error_description||e.error||JSON.stringify(e),e3=[502,503,504];async function e5(e){var a;let i,o;if(!eP(e))throw new e1(e4(e),0);if(e3.includes(e.status))throw new e1(e4(e),e.status);try{i=await e.json()}catch(e){throw new e$(e4(e),e)}let n=function(e){let a=e.headers.get(eA);if(!a||!a.match(eF))return null;try{return new Date(`${a}T00:00:00.0Z`)}catch(e){return null}}(e);if(n&&n.getTime()>=e_["2024-01-01"].timestamp&&"object"==typeof i&&i&&"string"==typeof i.code?o=i.code:"object"==typeof i&&i&&"string"==typeof i.error_code&&(o=i.error_code),o){if("weak_password"===o)throw new e2(e4(i),e.status,(null===(a=i.weak_password)||void 0===a?void 0:a.reasons)||[])}else if("object"==typeof i&&i&&"object"==typeof i.weak_password&&i.weak_password&&Array.isArray(i.weak_password.reasons)&&i.weak_password.reasons.length&&i.weak_password.reasons.reduce((e,a)=>e&&"string"==typeof a,!0))throw new e2(e4(i),e.status,i.weak_password.reasons);throw new eq(e4(i),e.status||500,o)}let e9=(e,a,i,o)=>{let n={method:e,headers:(null==a?void 0:a.headers)||{}};return"GET"===e?n:(n.headers=Object.assign({"Content-Type":"application/json;charset=UTF-8"},null==a?void 0:a.headers),n.body=JSON.stringify(o),Object.assign(Object.assign({},n),i))};async function e8(e,a,i,o){var n;let t=Object.assign({},null==o?void 0:o.headers);t[eA]||(t[eA]=e_["2024-01-01"].name),(null==o?void 0:o.jwt)&&(t.Authorization=`Bearer ${o.jwt}`);let l=null!==(n=null==o?void 0:o.query)&&void 0!==n?n:{};(null==o?void 0:o.redirectTo)&&(l.redirect_to=o.redirectTo);let r=Object.keys(l).length?"?"+new URLSearchParams(l).toString():"",c=await e7(e,a,i+r,{headers:t,noResolveJson:null==o?void 0:o.noResolveJson},{},null==o?void 0:o.body);return(null==o?void 0:o.xform)?null==o?void 0:o.xform(c):{data:Object.assign({},c),error:null}}async function e7(e,a,i,o,n,t){let l;let r=e9(a,o,n,t);try{l=await e(i,Object.assign({},r))}catch(e){throw console.error(e),new e1(e4(e),0)}if(l.ok||await e5(l),null==o?void 0:o.noResolveJson)return l;try{return await l.json()}catch(e){await e5(e)}}function ae(e){var a,i;let o=null;return e.access_token&&e.refresh_token&&e.expires_in&&(o=Object.assign({},e),!e.expires_at)&&(o.expires_at=(i=e.expires_in,Math.round(Date.now()/1e3)+i)),{data:{session:o,user:null!==(a=e.user)&&void 0!==a?a:e},error:null}}function aa(e){let a=ae(e);return!a.error&&e.weak_password&&"object"==typeof e.weak_password&&Array.isArray(e.weak_password.reasons)&&e.weak_password.reasons.length&&e.weak_password.message&&"string"==typeof e.weak_password.message&&e.weak_password.reasons.reduce((e,a)=>e&&"string"==typeof a,!0)&&(a.data.weak_password=e.weak_password),a}function ai(e){var a;return{data:{user:null!==(a=e.user)&&void 0!==a?a:e},error:null}}function ao(e){return{data:e,error:null}}function an(e){let{action_link:a,email_otp:i,hashed_token:o,redirect_to:n,verification_type:t}=e;return{data:{properties:{action_link:a,email_otp:i,hashed_token:o,redirect_to:n,verification_type:t},user:Object.assign({},e6(e,["action_link","email_otp","hashed_token","redirect_to","verification_type"]))},error:null}}function at(e){return e}var al=function(e,a){var i={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&0>a.indexOf(o)&&(i[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,o=Object.getOwnPropertySymbols(e);n<o.length;n++)0>a.indexOf(o[n])&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(i[o[n]]=e[o[n]]);return i};class ar{constructor({url:e="",headers:a={},fetch:i}){this.url=e,this.headers=a,this.fetch=eC(i),this.mfa={listFactors:this._listFactors.bind(this),deleteFactor:this._deleteFactor.bind(this)}}async signOut(e,a="global"){try{return await e8(this.fetch,"POST",`${this.url}/logout?scope=${a}`,{headers:this.headers,jwt:e,noResolveJson:!0}),{data:null,error:null}}catch(e){if(eH(e))return{data:null,error:e};throw e}}async inviteUserByEmail(e,a={}){try{return await e8(this.fetch,"POST",`${this.url}/invite`,{body:{email:e,data:a.data},headers:this.headers,redirectTo:a.redirectTo,xform:ai})}catch(e){if(eH(e))return{data:{user:null},error:e};throw e}}async generateLink(e){try{let{options:a}=e,i=al(e,["options"]),o=Object.assign(Object.assign({},i),a);return"newEmail"in i&&(o.new_email=null==i?void 0:i.newEmail,delete o.newEmail),await e8(this.fetch,"POST",`${this.url}/admin/generate_link`,{body:o,headers:this.headers,xform:an,redirectTo:null==a?void 0:a.redirectTo})}catch(e){if(eH(e))return{data:{properties:null,user:null},error:e};throw e}}async createUser(e){try{return await e8(this.fetch,"POST",`${this.url}/admin/users`,{body:e,headers:this.headers,xform:ai})}catch(e){if(eH(e))return{data:{user:null},error:e};throw e}}async listUsers(e){var a,i,o,n,t,l,r;try{let c={nextPage:null,lastPage:0,total:0},s=await e8(this.fetch,"GET",`${this.url}/admin/users`,{headers:this.headers,noResolveJson:!0,query:{page:null!==(i=null===(a=null==e?void 0:e.page)||void 0===a?void 0:a.toString())&&void 0!==i?i:"",per_page:null!==(n=null===(o=null==e?void 0:e.perPage)||void 0===o?void 0:o.toString())&&void 0!==n?n:""},xform:at});if(s.error)throw s.error;let m=await s.json(),d=null!==(t=s.headers.get("x-total-count"))&&void 0!==t?t:0,f=null!==(r=null===(l=s.headers.get("link"))||void 0===l?void 0:l.split(","))&&void 0!==r?r:[];return f.length>0&&(f.forEach(e=>{let a=parseInt(e.split(";")[0].split("=")[1].substring(0,1)),i=JSON.parse(e.split(";")[1].split("=")[1]);c[`${i}Page`]=a}),c.total=parseInt(d)),{data:Object.assign(Object.assign({},m),c),error:null}}catch(e){if(eH(e))return{data:{users:[]},error:e};throw e}}async getUserById(e){try{return await e8(this.fetch,"GET",`${this.url}/admin/users/${e}`,{headers:this.headers,xform:ai})}catch(e){if(eH(e))return{data:{user:null},error:e};throw e}}async updateUserById(e,a){try{return await e8(this.fetch,"PUT",`${this.url}/admin/users/${e}`,{body:a,headers:this.headers,xform:ai})}catch(e){if(eH(e))return{data:{user:null},error:e};throw e}}async deleteUser(e,a=!1){try{return await e8(this.fetch,"DELETE",`${this.url}/admin/users/${e}`,{headers:this.headers,body:{should_soft_delete:a},xform:ai})}catch(e){if(eH(e))return{data:{user:null},error:e};throw e}}async _listFactors(e){try{let{data:a,error:i}=await e8(this.fetch,"GET",`${this.url}/admin/users/${e.userId}/factors`,{headers:this.headers,xform:e=>({data:{factors:e},error:null})});return{data:a,error:i}}catch(e){if(eH(e))return{data:null,error:e};throw e}}async _deleteFactor(e){try{return{data:await e8(this.fetch,"DELETE",`${this.url}/admin/users/${e.userId}/factors/${e.id}`,{headers:this.headers}),error:null}}catch(e){if(eH(e))return{data:null,error:e};throw e}}}let ac={getItem:e=>eN()?globalThis.localStorage.getItem(e):null,setItem:(e,a)=>{eN()&&globalThis.localStorage.setItem(e,a)},removeItem:e=>{eN()&&globalThis.localStorage.removeItem(e)}};function as(e={}){return{getItem:a=>e[a]||null,setItem:(a,i)=>{e[a]=i},removeItem:a=>{delete e[a]}}}let am={debug:!!(globalThis&&eN()&&globalThis.localStorage&&"true"===globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug"))};class ad extends Error{constructor(e){super(e),this.isAcquireTimeout=!0}}class af extends ad{}async function ap(e,a,i){am.debug&&console.log("@supabase/gotrue-js: navigatorLock: acquire lock",e,a);let o=new globalThis.AbortController;return a>0&&setTimeout(()=>{o.abort(),am.debug&&console.log("@supabase/gotrue-js: navigatorLock acquire timed out",e)},a),await globalThis.navigator.locks.request(e,0===a?{mode:"exclusive",ifAvailable:!0}:{mode:"exclusive",signal:o.signal},async o=>{if(o){am.debug&&console.log("@supabase/gotrue-js: navigatorLock: acquired",e,o.name);try{return await i()}finally{am.debug&&console.log("@supabase/gotrue-js: navigatorLock: released",e,o.name)}}else{if(0===a)throw am.debug&&console.log("@supabase/gotrue-js: navigatorLock: not immediately available",e),new af(`Acquiring an exclusive Navigator LockManager lock "${e}" immediately failed`);if(am.debug)try{let e=await globalThis.navigator.locks.query();console.log("@supabase/gotrue-js: Navigator LockManager state",JSON.stringify(e,null,"  "))}catch(e){console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state",e)}return console.warn("@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"),await i()}})}!function(){if("object"!=typeof globalThis)try{Object.defineProperty(Object.prototype,"__magic__",{get:function(){return this},configurable:!0}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__}catch(e){"undefined"!=typeof self&&(self.globalThis=self)}}();let au={url:"http://localhost:9999",storageKey:"supabase.auth.token",autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,headers:eM,flowType:"implicit",debug:!1,hasCustomAuthorizationHeader:!1};async function ah(e,a,i){return await i()}class ag{constructor(e){var a,i;this.memoryStorage=null,this.stateChangeEmitters=new Map,this.autoRefreshTicker=null,this.visibilityChangedCallback=null,this.refreshingDeferred=null,this.initializePromise=null,this.detectSessionInUrl=!0,this.hasCustomAuthorizationHeader=!1,this.suppressGetSessionWarning=!1,this.lockAcquired=!1,this.pendingInLock=[],this.broadcastChannel=null,this.logger=console.log,this.instanceID=ag.nextInstanceID,ag.nextInstanceID+=1,this.instanceID>0&&eT()&&console.warn("Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.");let o=Object.assign(Object.assign({},au),e);if(this.logDebugMessages=!!o.debug,"function"==typeof o.debug&&(this.logger=o.debug),this.persistSession=o.persistSession,this.storageKey=o.storageKey,this.autoRefreshToken=o.autoRefreshToken,this.admin=new ar({url:o.url,headers:o.headers,fetch:o.fetch}),this.url=o.url,this.headers=o.headers,this.fetch=eC(o.fetch),this.lock=o.lock||ah,this.detectSessionInUrl=o.detectSessionInUrl,this.flowType=o.flowType,this.hasCustomAuthorizationHeader=o.hasCustomAuthorizationHeader,o.lock?this.lock=o.lock:eT()&&(null===(a=null==globalThis?void 0:globalThis.navigator)||void 0===a?void 0:a.locks)?this.lock=ap:this.lock=ah,this.mfa={verify:this._verify.bind(this),enroll:this._enroll.bind(this),unenroll:this._unenroll.bind(this),challenge:this._challenge.bind(this),listFactors:this._listFactors.bind(this),challengeAndVerify:this._challengeAndVerify.bind(this),getAuthenticatorAssuranceLevel:this._getAuthenticatorAssuranceLevel.bind(this)},this.persistSession?o.storage?this.storage=o.storage:eN()?this.storage=ac:(this.memoryStorage={},this.storage=as(this.memoryStorage)):(this.memoryStorage={},this.storage=as(this.memoryStorage)),eT()&&globalThis.BroadcastChannel&&this.persistSession&&this.storageKey){try{this.broadcastChannel=new globalThis.BroadcastChannel(this.storageKey)}catch(e){console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available",e)}null===(i=this.broadcastChannel)||void 0===i||i.addEventListener("message",async e=>{this._debug("received broadcast notification from other tab or client",e),await this._notifyAllSubscribers(e.data.event,e.data.session,!1)})}this.initialize()}_debug(...e){return this.logDebugMessages&&this.logger(`GoTrueClient@${this.instanceID} (${eR}) ${new Date().toISOString()}`,...e),this}async initialize(){return this.initializePromise||(this.initializePromise=(async()=>await this._acquireLock(-1,async()=>await this._initialize()))()),await this.initializePromise}async _initialize(){try{let e=!!eT()&&await this._isPKCEFlow();if(this._debug("#_initialize()","begin","is PKCE flow",e),e||this.detectSessionInUrl&&this._isImplicitGrantFlow()){let{data:a,error:i}=await this._getSessionFromURL(e);if(i){if(this._debug("#_initialize()","error detecting session from URL",i),(null==i?void 0:i.message)==="Identity is already linked"||(null==i?void 0:i.message)==="Identity is already linked to another user")return{error:i};return await this._removeSession(),{error:i}}let{session:o,redirectType:n}=a;return this._debug("#_initialize()","detected session in URL",o,"redirect type",n),await this._saveSession(o),setTimeout(async()=>{"recovery"===n?await this._notifyAllSubscribers("PASSWORD_RECOVERY",o):await this._notifyAllSubscribers("SIGNED_IN",o)},0),{error:null}}return await this._recoverAndRefresh(),{error:null}}catch(e){if(eH(e))return{error:e};return{error:new e$("Unexpected error during initialization",e)}}finally{await this._handleVisibilityChange(),this._debug("#_initialize()","end")}}async signInAnonymously(e){var a,i,o;try{await this._removeSession();let{data:n,error:t}=await e8(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{data:null!==(i=null===(a=null==e?void 0:e.options)||void 0===a?void 0:a.data)&&void 0!==i?i:{},gotrue_meta_security:{captcha_token:null===(o=null==e?void 0:e.options)||void 0===o?void 0:o.captchaToken}},xform:ae});if(t||!n)return{data:{user:null,session:null},error:t};let l=n.session,r=n.user;return n.session&&(await this._saveSession(n.session),await this._notifyAllSubscribers("SIGNED_IN",l)),{data:{user:r,session:l},error:null}}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async signUp(e){var a,i,o;try{let n;if(await this._removeSession(),"email"in e){let{email:i,password:o,options:t}=e,l=null,r=null;"pkce"===this.flowType&&([l,r]=await eV(this.storage,this.storageKey)),n=await e8(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,redirectTo:null==t?void 0:t.emailRedirectTo,body:{email:i,password:o,data:null!==(a=null==t?void 0:t.data)&&void 0!==a?a:{},gotrue_meta_security:{captcha_token:null==t?void 0:t.captchaToken},code_challenge:l,code_challenge_method:r},xform:ae})}else if("phone"in e){let{phone:a,password:t,options:l}=e;n=await e8(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{phone:a,password:t,data:null!==(i=null==l?void 0:l.data)&&void 0!==i?i:{},channel:null!==(o=null==l?void 0:l.channel)&&void 0!==o?o:"sms",gotrue_meta_security:{captcha_token:null==l?void 0:l.captchaToken}},xform:ae})}else throw new eY("You must provide either an email or phone number and a password");let{data:t,error:l}=n;if(l||!t)return{data:{user:null,session:null},error:l};let r=t.session,c=t.user;return t.session&&(await this._saveSession(t.session),await this._notifyAllSubscribers("SIGNED_IN",r)),{data:{user:c,session:r},error:null}}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithPassword(e){try{let a;if(await this._removeSession(),"email"in e){let{email:i,password:o,options:n}=e;a=await e8(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{email:i,password:o,gotrue_meta_security:{captcha_token:null==n?void 0:n.captchaToken}},xform:aa})}else if("phone"in e){let{phone:i,password:o,options:n}=e;a=await e8(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{phone:i,password:o,gotrue_meta_security:{captcha_token:null==n?void 0:n.captchaToken}},xform:aa})}else throw new eY("You must provide either an email or phone number and a password");let{data:i,error:o}=a;if(o)return{data:{user:null,session:null},error:o};if(!i||!i.session||!i.user)return{data:{user:null,session:null},error:new eZ};return i.session&&(await this._saveSession(i.session),await this._notifyAllSubscribers("SIGNED_IN",i.session)),{data:Object.assign({user:i.user,session:i.session},i.weak_password?{weakPassword:i.weak_password}:null),error:o}}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithOAuth(e){var a,i,o,n;return await this._removeSession(),await this._handleProviderSignIn(e.provider,{redirectTo:null===(a=e.options)||void 0===a?void 0:a.redirectTo,scopes:null===(i=e.options)||void 0===i?void 0:i.scopes,queryParams:null===(o=e.options)||void 0===o?void 0:o.queryParams,skipBrowserRedirect:null===(n=e.options)||void 0===n?void 0:n.skipBrowserRedirect})}async exchangeCodeForSession(e){return await this.initializePromise,this._acquireLock(-1,async()=>this._exchangeCodeForSession(e))}async _exchangeCodeForSession(e){let a=await eB(this.storage,`${this.storageKey}-code-verifier`),[i,o]=(null!=a?a:"").split("/"),{data:n,error:t}=await e8(this.fetch,"POST",`${this.url}/token?grant_type=pkce`,{headers:this.headers,body:{auth_code:e,code_verifier:i},xform:ae});return(await ex(this.storage,`${this.storageKey}-code-verifier`),t)?{data:{user:null,session:null,redirectType:null},error:t}:n&&n.session&&n.user?(n.session&&(await this._saveSession(n.session),await this._notifyAllSubscribers("SIGNED_IN",n.session)),{data:Object.assign(Object.assign({},n),{redirectType:null!=o?o:null}),error:t}):{data:{user:null,session:null,redirectType:null},error:new eZ}}async signInWithIdToken(e){await this._removeSession();try{let{options:a,provider:i,token:o,access_token:n,nonce:t}=e,{data:l,error:r}=await e8(this.fetch,"POST",`${this.url}/token?grant_type=id_token`,{headers:this.headers,body:{provider:i,id_token:o,access_token:n,nonce:t,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:ae});if(r)return{data:{user:null,session:null},error:r};if(!l||!l.session||!l.user)return{data:{user:null,session:null},error:new eZ};return l.session&&(await this._saveSession(l.session),await this._notifyAllSubscribers("SIGNED_IN",l.session)),{data:l,error:r}}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithOtp(e){var a,i,o,n,t;try{if(await this._removeSession(),"email"in e){let{email:o,options:n}=e,t=null,l=null;"pkce"===this.flowType&&([t,l]=await eV(this.storage,this.storageKey));let{error:r}=await e8(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{email:o,data:null!==(a=null==n?void 0:n.data)&&void 0!==a?a:{},create_user:null===(i=null==n?void 0:n.shouldCreateUser)||void 0===i||i,gotrue_meta_security:{captcha_token:null==n?void 0:n.captchaToken},code_challenge:t,code_challenge_method:l},redirectTo:null==n?void 0:n.emailRedirectTo});return{data:{user:null,session:null},error:r}}if("phone"in e){let{phone:a,options:i}=e,{data:l,error:r}=await e8(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{phone:a,data:null!==(o=null==i?void 0:i.data)&&void 0!==o?o:{},create_user:null===(n=null==i?void 0:i.shouldCreateUser)||void 0===n||n,gotrue_meta_security:{captcha_token:null==i?void 0:i.captchaToken},channel:null!==(t=null==i?void 0:i.channel)&&void 0!==t?t:"sms"}});return{data:{user:null,session:null,messageId:null==l?void 0:l.message_id},error:r}}throw new eY("You must provide either an email or phone number.")}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async verifyOtp(e){var a,i;try{let o,n;"email_change"!==e.type&&"phone_change"!==e.type&&await this._removeSession(),"options"in e&&(o=null===(a=e.options)||void 0===a?void 0:a.redirectTo,n=null===(i=e.options)||void 0===i?void 0:i.captchaToken);let{data:t,error:l}=await e8(this.fetch,"POST",`${this.url}/verify`,{headers:this.headers,body:Object.assign(Object.assign({},e),{gotrue_meta_security:{captcha_token:n}}),redirectTo:o,xform:ae});if(l)throw l;if(!t)throw Error("An error occurred on token verification.");let r=t.session,c=t.user;return(null==r?void 0:r.access_token)&&(await this._saveSession(r),await this._notifyAllSubscribers("recovery"==e.type?"PASSWORD_RECOVERY":"SIGNED_IN",r)),{data:{user:c,session:r},error:null}}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithSSO(e){var a,i,o;try{await this._removeSession();let n=null,t=null;return"pkce"===this.flowType&&([n,t]=await eV(this.storage,this.storageKey)),await e8(this.fetch,"POST",`${this.url}/sso`,{body:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},"providerId"in e?{provider_id:e.providerId}:null),"domain"in e?{domain:e.domain}:null),{redirect_to:null!==(i=null===(a=e.options)||void 0===a?void 0:a.redirectTo)&&void 0!==i?i:void 0}),(null===(o=null==e?void 0:e.options)||void 0===o?void 0:o.captchaToken)?{gotrue_meta_security:{captcha_token:e.options.captchaToken}}:null),{skip_http_redirect:!0,code_challenge:n,code_challenge_method:t}),headers:this.headers,xform:ao})}catch(e){if(eH(e))return{data:null,error:e};throw e}}async reauthenticate(){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._reauthenticate())}async _reauthenticate(){try{return await this._useSession(async e=>{let{data:{session:a},error:i}=e;if(i)throw i;if(!a)throw new eJ;let{error:o}=await e8(this.fetch,"GET",`${this.url}/reauthenticate`,{headers:this.headers,jwt:a.access_token});return{data:{user:null,session:null},error:o}})}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async resend(e){try{"email_change"!=e.type&&"phone_change"!=e.type&&await this._removeSession();let a=`${this.url}/resend`;if("email"in e){let{email:i,type:o,options:n}=e,{error:t}=await e8(this.fetch,"POST",a,{headers:this.headers,body:{email:i,type:o,gotrue_meta_security:{captcha_token:null==n?void 0:n.captchaToken}},redirectTo:null==n?void 0:n.emailRedirectTo});return{data:{user:null,session:null},error:t}}if("phone"in e){let{phone:i,type:o,options:n}=e,{data:t,error:l}=await e8(this.fetch,"POST",a,{headers:this.headers,body:{phone:i,type:o,gotrue_meta_security:{captcha_token:null==n?void 0:n.captchaToken}}});return{data:{user:null,session:null,messageId:null==t?void 0:t.message_id},error:l}}throw new eY("You must provide either an email or phone number and a type")}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async getSession(){return await this.initializePromise,await this._acquireLock(-1,async()=>this._useSession(async e=>e))}async _acquireLock(e,a){this._debug("#_acquireLock","begin",e);try{if(this.lockAcquired){let e=this.pendingInLock.length?this.pendingInLock[this.pendingInLock.length-1]:Promise.resolve(),i=(async()=>(await e,await a()))();return this.pendingInLock.push((async()=>{try{await i}catch(e){}})()),i}return await this.lock(`lock:${this.storageKey}`,e,async()=>{this._debug("#_acquireLock","lock acquired for storage key",this.storageKey);try{this.lockAcquired=!0;let e=a();for(this.pendingInLock.push((async()=>{try{await e}catch(e){}})()),await e;this.pendingInLock.length;){let e=[...this.pendingInLock];await Promise.all(e),this.pendingInLock.splice(0,e.length)}return await e}finally{this._debug("#_acquireLock","lock released for storage key",this.storageKey),this.lockAcquired=!1}})}finally{this._debug("#_acquireLock","end")}}async _useSession(e){this._debug("#_useSession","begin");try{let a=await this.__loadSession();return await e(a)}finally{this._debug("#_useSession","end")}}async __loadSession(){this._debug("#__loadSession()","begin"),this.lockAcquired||this._debug("#__loadSession()","used outside of an acquired lock!",Error().stack);try{let e=null,a=await eB(this.storage,this.storageKey);if(this._debug("#getSession()","session from storage",a),null!==a&&(this._isValidSession(a)?e=a:(this._debug("#getSession()","session from storage is not valid"),await this._removeSession())),!e)return{data:{session:null},error:null};let i=!!e.expires_at&&e.expires_at<=Date.now()/1e3;if(this._debug("#__loadSession()",`session has${i?"":" not"} expired`,"expires_at",e.expires_at),!i){if(this.storage.isServer){let a=this.suppressGetSessionWarning;e=new Proxy(e,{get:(e,i,o)=>(a||"user"!==i||console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."),Reflect.get(e,i,o))})}return{data:{session:e},error:null}}let{session:o,error:n}=await this._callRefreshToken(e.refresh_token);if(n)return{data:{session:null},error:n};return{data:{session:o},error:null}}finally{this._debug("#__loadSession()","end")}}async getUser(e){return e?await this._getUser(e):(await this.initializePromise,await this._acquireLock(-1,async()=>await this._getUser()))}async _getUser(e){try{if(e)return await e8(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:e,xform:ai});return await this._useSession(async e=>{var a,i,o;let{data:n,error:t}=e;if(t)throw t;return(null===(a=n.session)||void 0===a?void 0:a.access_token)||this.hasCustomAuthorizationHeader?await e8(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:null!==(o=null===(i=n.session)||void 0===i?void 0:i.access_token)&&void 0!==o?o:void 0,xform:ai}):{data:{user:null},error:new eJ}})}catch(e){if(eH(e))return{data:{user:null},error:e};throw e}}async updateUser(e,a={}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._updateUser(e,a))}async _updateUser(e,a={}){try{return await this._useSession(async i=>{let{data:o,error:n}=i;if(n)throw n;if(!o.session)throw new eJ;let t=o.session,l=null,r=null;"pkce"===this.flowType&&null!=e.email&&([l,r]=await eV(this.storage,this.storageKey));let{data:c,error:s}=await e8(this.fetch,"PUT",`${this.url}/user`,{headers:this.headers,redirectTo:null==a?void 0:a.emailRedirectTo,body:Object.assign(Object.assign({},e),{code_challenge:l,code_challenge_method:r}),jwt:t.access_token,xform:ai});if(s)throw s;return t.user=c.user,await this._saveSession(t),await this._notifyAllSubscribers("USER_UPDATED",t),{data:{user:t.user},error:null}})}catch(e){if(eH(e))return{data:{user:null},error:e};throw e}}_decodeJWT(e){return eO(e)}async setSession(e){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._setSession(e))}async _setSession(e){try{if(!e.access_token||!e.refresh_token)throw new eJ;let a=Date.now()/1e3,i=a,o=!0,n=null,t=eO(e.access_token);if(t.exp&&(o=(i=t.exp)<=a),o){let{session:a,error:i}=await this._callRefreshToken(e.refresh_token);if(i)return{data:{user:null,session:null},error:i};if(!a)return{data:{user:null,session:null},error:null};n=a}else{let{data:o,error:t}=await this._getUser(e.access_token);if(t)throw t;n={access_token:e.access_token,refresh_token:e.refresh_token,user:o.user,token_type:"bearer",expires_in:i-a,expires_at:i},await this._saveSession(n),await this._notifyAllSubscribers("SIGNED_IN",n)}return{data:{user:n.user,session:n},error:null}}catch(e){if(eH(e))return{data:{session:null,user:null},error:e};throw e}}async refreshSession(e){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._refreshSession(e))}async _refreshSession(e){try{return await this._useSession(async a=>{var i;if(!e){let{data:o,error:n}=a;if(n)throw n;e=null!==(i=o.session)&&void 0!==i?i:void 0}if(!(null==e?void 0:e.refresh_token))throw new eJ;let{session:o,error:n}=await this._callRefreshToken(e.refresh_token);return n?{data:{user:null,session:null},error:n}:o?{data:{user:o.user,session:o},error:null}:{data:{user:null,session:null},error:null}})}catch(e){if(eH(e))return{data:{user:null,session:null},error:e};throw e}}async _getSessionFromURL(e){try{if(!eT())throw new eX("No browser detected.");if("implicit"!==this.flowType||this._isImplicitGrantFlow()){if("pkce"==this.flowType&&!e)throw new eQ("Not a valid PKCE flow url.")}else throw new eX("Not a valid implicit grant flow url.");let a=ej(window.location.href);if(e){if(!a.code)throw new eQ("No code detected.");let{data:e,error:i}=await this._exchangeCodeForSession(a.code);if(i)throw i;let o=new URL(window.location.href);return o.searchParams.delete("code"),window.history.replaceState(window.history.state,"",o.toString()),{data:{session:e.session,redirectType:null},error:null}}if(a.error||a.error_description||a.error_code)throw new eX(a.error_description||"Error in URL with unspecified error_description",{error:a.error||"unspecified_error",code:a.error_code||"unspecified_code"});let{provider_token:i,provider_refresh_token:o,access_token:n,refresh_token:t,expires_in:l,expires_at:r,token_type:c}=a;if(!n||!l||!t||!c)throw new eX("No session defined in URL");let s=Math.round(Date.now()/1e3),m=parseInt(l),d=s+m;r&&(d=parseInt(r));let f=d-s;1e3*f<=3e4&&console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${f}s, should have been closer to ${m}s`);let p=d-m;s-p>=120?console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale",p,d,s):s-p<0&&console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clok for skew",p,d,s);let{data:u,error:h}=await this._getUser(n);if(h)throw h;let g={provider_token:i,provider_refresh_token:o,access_token:n,expires_in:m,expires_at:d,refresh_token:t,token_type:c,user:u.user};return window.location.hash="",this._debug("#_getSessionFromURL()","clearing window.location.hash"),{data:{session:g,redirectType:a.type},error:null}}catch(e){if(eH(e))return{data:{session:null,redirectType:null},error:e};throw e}}_isImplicitGrantFlow(){let e=ej(window.location.href);return!!(eT()&&(e.access_token||e.error_description))}async _isPKCEFlow(){let e=ej(window.location.href),a=await eB(this.storage,`${this.storageKey}-code-verifier`);return!!(e.code&&a)}async signOut(e={scope:"global"}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._signOut(e))}async _signOut({scope:e}={scope:"global"}){return await this._useSession(async a=>{var i;let{data:o,error:n}=a;if(n)return{error:n};let t=null===(i=o.session)||void 0===i?void 0:i.access_token;if(t){let{error:a}=await this.admin.signOut(t,e);if(a&&!(eH(a)&&"AuthApiError"===a.name&&(404===a.status||401===a.status||403===a.status)))return{error:a}}return"others"!==e&&(await this._removeSession(),await ex(this.storage,`${this.storageKey}-code-verifier`),await this._notifyAllSubscribers("SIGNED_OUT",null)),{error:null}})}onAuthStateChange(e){let a="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){let a=16*Math.random()|0;return("x"==e?a:3&a|8).toString(16)}),i={id:a,callback:e,unsubscribe:()=>{this._debug("#unsubscribe()","state change callback with id removed",a),this.stateChangeEmitters.delete(a)}};return this._debug("#onAuthStateChange()","registered callback with id",a),this.stateChangeEmitters.set(a,i),(async()=>{await this.initializePromise,await this._acquireLock(-1,async()=>{this._emitInitialSession(a)})})(),{data:{subscription:i}}}async _emitInitialSession(e){return await this._useSession(async a=>{var i,o;try{let{data:{session:o},error:n}=a;if(n)throw n;await (null===(i=this.stateChangeEmitters.get(e))||void 0===i?void 0:i.callback("INITIAL_SESSION",o)),this._debug("INITIAL_SESSION","callback id",e,"session",o)}catch(a){await (null===(o=this.stateChangeEmitters.get(e))||void 0===o?void 0:o.callback("INITIAL_SESSION",null)),this._debug("INITIAL_SESSION","callback id",e,"error",a),console.error(a)}})}async resetPasswordForEmail(e,a={}){let i=null,o=null;"pkce"===this.flowType&&([i,o]=await eV(this.storage,this.storageKey,!0));try{return await e8(this.fetch,"POST",`${this.url}/recover`,{body:{email:e,code_challenge:i,code_challenge_method:o,gotrue_meta_security:{captcha_token:a.captchaToken}},headers:this.headers,redirectTo:a.redirectTo})}catch(e){if(eH(e))return{data:null,error:e};throw e}}async getUserIdentities(){var e;try{let{data:a,error:i}=await this.getUser();if(i)throw i;return{data:{identities:null!==(e=a.user.identities)&&void 0!==e?e:[]},error:null}}catch(e){if(eH(e))return{data:null,error:e};throw e}}async linkIdentity(e){var a;try{let{data:i,error:o}=await this._useSession(async a=>{var i,o,n,t,l;let{data:r,error:c}=a;if(c)throw c;let s=await this._getUrlForProvider(`${this.url}/user/identities/authorize`,e.provider,{redirectTo:null===(i=e.options)||void 0===i?void 0:i.redirectTo,scopes:null===(o=e.options)||void 0===o?void 0:o.scopes,queryParams:null===(n=e.options)||void 0===n?void 0:n.queryParams,skipBrowserRedirect:!0});return await e8(this.fetch,"GET",s,{headers:this.headers,jwt:null!==(l=null===(t=r.session)||void 0===t?void 0:t.access_token)&&void 0!==l?l:void 0})});if(o)throw o;return!eT()||(null===(a=e.options)||void 0===a?void 0:a.skipBrowserRedirect)||window.location.assign(null==i?void 0:i.url),{data:{provider:e.provider,url:null==i?void 0:i.url},error:null}}catch(a){if(eH(a))return{data:{provider:e.provider,url:null},error:a};throw a}}async unlinkIdentity(e){try{return await this._useSession(async a=>{var i,o;let{data:n,error:t}=a;if(t)throw t;return await e8(this.fetch,"DELETE",`${this.url}/user/identities/${e.identity_id}`,{headers:this.headers,jwt:null!==(o=null===(i=n.session)||void 0===i?void 0:i.access_token)&&void 0!==o?o:void 0})})}catch(e){if(eH(e))return{data:null,error:e};throw e}}async _refreshAccessToken(e){let a=`#_refreshAccessToken(${e.substring(0,5)}...)`;this._debug(a,"begin");try{var i,o;let n=Date.now();return await (i=async i=>(i>0&&await ez(200*Math.pow(2,i-1)),this._debug(a,"refreshing attempt",i),await e8(this.fetch,"POST",`${this.url}/token?grant_type=refresh_token`,{body:{refresh_token:e},headers:this.headers,xform:ae})),o=(e,a)=>a&&e0(a)&&Date.now()+200*Math.pow(2,e)-n<3e4,new Promise((e,a)=>{(async()=>{for(let n=0;n<1/0;n++)try{let a=await i(n);if(!o(n,null,a)){e(a);return}}catch(e){if(!o(n,e)){a(e);return}}})()}))}catch(e){if(this._debug(a,"error",e),eH(e))return{data:{session:null,user:null},error:e};throw e}finally{this._debug(a,"end")}}_isValidSession(e){return"object"==typeof e&&null!==e&&"access_token"in e&&"refresh_token"in e&&"expires_at"in e}async _handleProviderSignIn(e,a){let i=await this._getUrlForProvider(`${this.url}/authorize`,e,{redirectTo:a.redirectTo,scopes:a.scopes,queryParams:a.queryParams});return this._debug("#_handleProviderSignIn()","provider",e,"options",a,"url",i),eT()&&!a.skipBrowserRedirect&&window.location.assign(i),{data:{provider:e,url:i},error:null}}async _recoverAndRefresh(){var e;let a="#_recoverAndRefresh()";this._debug(a,"begin");try{let i=await eB(this.storage,this.storageKey);if(this._debug(a,"session from storage",i),!this._isValidSession(i)){this._debug(a,"session is not valid"),null!==i&&await this._removeSession();return}let o=Math.round(Date.now()/1e3),n=(null!==(e=i.expires_at)&&void 0!==e?e:1/0)<o+10;if(this._debug(a,`session has${n?"":" not"} expired with margin of 10s`),n){if(this.autoRefreshToken&&i.refresh_token){let{error:e}=await this._callRefreshToken(i.refresh_token);e&&(console.error(e),e0(e)||(this._debug(a,"refresh failed with a non-retryable error, removing the session",e),await this._removeSession()))}}else await this._notifyAllSubscribers("SIGNED_IN",i)}catch(e){this._debug(a,"error",e),console.error(e);return}finally{this._debug(a,"end")}}async _callRefreshToken(e){var a,i;if(!e)throw new eJ;if(this.refreshingDeferred)return this.refreshingDeferred.promise;let o=`#_callRefreshToken(${e.substring(0,5)}...)`;this._debug(o,"begin");try{this.refreshingDeferred=new eI;let{data:a,error:i}=await this._refreshAccessToken(e);if(i)throw i;if(!a.session)throw new eJ;await this._saveSession(a.session),await this._notifyAllSubscribers("TOKEN_REFRESHED",a.session);let o={session:a.session,error:null};return this.refreshingDeferred.resolve(o),o}catch(e){if(this._debug(o,"error",e),eH(e)){let i={session:null,error:e};return e0(e)||(await this._removeSession(),await this._notifyAllSubscribers("SIGNED_OUT",null)),null===(a=this.refreshingDeferred)||void 0===a||a.resolve(i),i}throw null===(i=this.refreshingDeferred)||void 0===i||i.reject(e),e}finally{this.refreshingDeferred=null,this._debug(o,"end")}}async _notifyAllSubscribers(e,a,i=!0){let o=`#_notifyAllSubscribers(${e})`;this._debug(o,"begin",a,`broadcast = ${i}`);try{this.broadcastChannel&&i&&this.broadcastChannel.postMessage({event:e,session:a});let o=[],n=Array.from(this.stateChangeEmitters.values()).map(async i=>{try{await i.callback(e,a)}catch(e){o.push(e)}});if(await Promise.all(n),o.length>0){for(let e=0;e<o.length;e+=1)console.error(o[e]);throw o[0]}}finally{this._debug(o,"end")}}async _saveSession(e){this._debug("#_saveSession()",e),this.suppressGetSessionWarning=!0,await eD(this.storage,this.storageKey,e)}async _removeSession(){this._debug("#_removeSession()"),await ex(this.storage,this.storageKey)}_removeVisibilityChangedCallback(){this._debug("#_removeVisibilityChangedCallback()");let e=this.visibilityChangedCallback;this.visibilityChangedCallback=null;try{e&&eT()&&(null==window?void 0:window.removeEventListener)&&window.removeEventListener("visibilitychange",e)}catch(e){console.error("removing visibilitychange callback failed",e)}}async _startAutoRefresh(){await this._stopAutoRefresh(),this._debug("#_startAutoRefresh()");let e=setInterval(()=>this._autoRefreshTokenTick(),3e4);this.autoRefreshTicker=e,e&&"object"==typeof e&&"function"==typeof e.unref?e.unref():"undefined"!=typeof Deno&&"function"==typeof Deno.unrefTimer&&Deno.unrefTimer(e),setTimeout(async()=>{await this.initializePromise,await this._autoRefreshTokenTick()},0)}async _stopAutoRefresh(){this._debug("#_stopAutoRefresh()");let e=this.autoRefreshTicker;this.autoRefreshTicker=null,e&&clearInterval(e)}async startAutoRefresh(){this._removeVisibilityChangedCallback(),await this._startAutoRefresh()}async stopAutoRefresh(){this._removeVisibilityChangedCallback(),await this._stopAutoRefresh()}async _autoRefreshTokenTick(){this._debug("#_autoRefreshTokenTick()","begin");try{await this._acquireLock(0,async()=>{try{let e=Date.now();try{return await this._useSession(async a=>{let{data:{session:i}}=a;if(!i||!i.refresh_token||!i.expires_at){this._debug("#_autoRefreshTokenTick()","no session");return}let o=Math.floor((1e3*i.expires_at-e)/3e4);this._debug("#_autoRefreshTokenTick()",`access token expires in ${o} ticks, a tick lasts 30000ms, refresh threshold is 3 ticks`),o<=3&&await this._callRefreshToken(i.refresh_token)})}catch(e){console.error("Auto refresh tick failed with error. This is likely a transient error.",e)}}finally{this._debug("#_autoRefreshTokenTick()","end")}})}catch(e){if(e.isAcquireTimeout||e instanceof ad)this._debug("auto refresh token tick lock not available");else throw e}}async _handleVisibilityChange(){if(this._debug("#_handleVisibilityChange()"),!eT()||!(null==window?void 0:window.addEventListener))return this.autoRefreshToken&&this.startAutoRefresh(),!1;try{this.visibilityChangedCallback=async()=>await this._onVisibilityChanged(!1),null==window||window.addEventListener("visibilitychange",this.visibilityChangedCallback),await this._onVisibilityChanged(!0)}catch(e){console.error("_handleVisibilityChange",e)}}async _onVisibilityChanged(e){let a=`#_onVisibilityChanged(${e})`;this._debug(a,"visibilityState",document.visibilityState),"visible"===document.visibilityState?(this.autoRefreshToken&&this._startAutoRefresh(),e||(await this.initializePromise,await this._acquireLock(-1,async()=>{if("visible"!==document.visibilityState){this._debug(a,"acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting");return}await this._recoverAndRefresh()}))):"hidden"===document.visibilityState&&this.autoRefreshToken&&this._stopAutoRefresh()}async _getUrlForProvider(e,a,i){let o=[`provider=${encodeURIComponent(a)}`];if((null==i?void 0:i.redirectTo)&&o.push(`redirect_to=${encodeURIComponent(i.redirectTo)}`),(null==i?void 0:i.scopes)&&o.push(`scopes=${encodeURIComponent(i.scopes)}`),"pkce"===this.flowType){let[e,a]=await eV(this.storage,this.storageKey),i=new URLSearchParams({code_challenge:`${encodeURIComponent(e)}`,code_challenge_method:`${encodeURIComponent(a)}`});o.push(i.toString())}if(null==i?void 0:i.queryParams){let e=new URLSearchParams(i.queryParams);o.push(e.toString())}return(null==i?void 0:i.skipBrowserRedirect)&&o.push(`skip_http_redirect=${i.skipBrowserRedirect}`),`${e}?${o.join("&")}`}async _unenroll(e){try{return await this._useSession(async a=>{var i;let{data:o,error:n}=a;return n?{data:null,error:n}:await e8(this.fetch,"DELETE",`${this.url}/factors/${e.factorId}`,{headers:this.headers,jwt:null===(i=null==o?void 0:o.session)||void 0===i?void 0:i.access_token})})}catch(e){if(eH(e))return{data:null,error:e};throw e}}async _enroll(e){try{return await this._useSession(async a=>{var i,o;let{data:n,error:t}=a;if(t)return{data:null,error:t};let{data:l,error:r}=await e8(this.fetch,"POST",`${this.url}/factors`,{body:{friendly_name:e.friendlyName,factor_type:e.factorType,issuer:e.issuer},headers:this.headers,jwt:null===(i=null==n?void 0:n.session)||void 0===i?void 0:i.access_token});return r?{data:null,error:r}:((null===(o=null==l?void 0:l.totp)||void 0===o?void 0:o.qr_code)&&(l.totp.qr_code=`data:image/svg+xml;utf-8,${l.totp.qr_code}`),{data:l,error:null})})}catch(e){if(eH(e))return{data:null,error:e};throw e}}async _verify(e){return this._acquireLock(-1,async()=>{try{return await this._useSession(async a=>{var i;let{data:o,error:n}=a;if(n)return{data:null,error:n};let{data:t,error:l}=await e8(this.fetch,"POST",`${this.url}/factors/${e.factorId}/verify`,{body:{code:e.code,challenge_id:e.challengeId},headers:this.headers,jwt:null===(i=null==o?void 0:o.session)||void 0===i?void 0:i.access_token});return l?{data:null,error:l}:(await this._saveSession(Object.assign({expires_at:Math.round(Date.now()/1e3)+t.expires_in},t)),await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED",t),{data:t,error:l})})}catch(e){if(eH(e))return{data:null,error:e};throw e}})}async _challenge(e){return this._acquireLock(-1,async()=>{try{return await this._useSession(async a=>{var i;let{data:o,error:n}=a;return n?{data:null,error:n}:await e8(this.fetch,"POST",`${this.url}/factors/${e.factorId}/challenge`,{headers:this.headers,jwt:null===(i=null==o?void 0:o.session)||void 0===i?void 0:i.access_token})})}catch(e){if(eH(e))return{data:null,error:e};throw e}})}async _challengeAndVerify(e){let{data:a,error:i}=await this._challenge({factorId:e.factorId});return i?{data:null,error:i}:await this._verify({factorId:e.factorId,challengeId:a.id,code:e.code})}async _listFactors(){let{data:{user:e},error:a}=await this.getUser();if(a)return{data:null,error:a};let i=(null==e?void 0:e.factors)||[],o=i.filter(e=>"totp"===e.factor_type&&"verified"===e.status);return{data:{all:i,totp:o},error:null}}async _getAuthenticatorAssuranceLevel(){return this._acquireLock(-1,async()=>await this._useSession(async e=>{var a,i;let{data:{session:o},error:n}=e;if(n)return{data:null,error:n};if(!o)return{data:{currentLevel:null,nextLevel:null,currentAuthenticationMethods:[]},error:null};let t=this._decodeJWT(o.access_token),l=null;t.aal&&(l=t.aal);let r=l;return(null!==(i=null===(a=o.user.factors)||void 0===a?void 0:a.filter(e=>"verified"===e.status))&&void 0!==i?i:[]).length>0&&(r="aal2"),{data:{currentLevel:l,nextLevel:r,currentAuthenticationMethods:t.amr||[]},error:null}}))}}ag.nextInstanceID=0;let ab=ag;class av extends ab{constructor(e){super(e)}}class ay{constructor(e,a,i){var o,n,t;if(this.supabaseUrl=e,this.supabaseKey=a,!e)throw Error("supabaseUrl is required.");if(!a)throw Error("supabaseKey is required.");let l=e.replace(/\/$/,"");this.realtimeUrl=`${l}/realtime/v1`.replace(/^http/i,"ws"),this.authUrl=`${l}/auth/v1`,this.storageUrl=`${l}/storage/v1`,this.functionsUrl=`${l}/functions/v1`;let r=`sb-${new URL(this.authUrl).hostname.split(".")[0]}-auth-token`,c=function(e,a){let{db:i,auth:o,realtime:n,global:t}=e,{db:l,auth:r,realtime:c,global:s}=a;return{db:Object.assign(Object.assign({},l),i),auth:Object.assign(Object.assign({},r),o),realtime:Object.assign(Object.assign({},c),n),global:Object.assign(Object.assign({},s),t)}}(null!=i?i:{},{db:eh,realtime:eb,auth:Object.assign(Object.assign({},eg),{storageKey:r}),global:eu});this.storageKey=null!==(o=c.auth.storageKey)&&void 0!==o?o:"",this.headers=null!==(n=c.global.headers)&&void 0!==n?n:{},this.auth=this._initSupabaseAuthClient(null!==(t=c.auth)&&void 0!==t?t:{},this.headers,c.global.fetch),this.fetch=eS(a,this._getAccessToken.bind(this),c.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers},c.realtime)),this.rest=new s(`${l}/rest/v1`,{headers:this.headers,schema:c.db.schema,fetch:this.fetch}),this._listenForAuthEvents()}get functions(){return new c(this.functionsUrl,{headers:this.headers,customFetch:this.fetch})}get storage(){return new ef(this.storageUrl,this.headers,this.fetch)}from(e){return this.rest.from(e)}schema(e){return this.rest.schema(e)}rpc(e,a={},i={}){return this.rest.rpc(e,a,i)}channel(e,a={config:{}}){return this.realtime.channel(e,a)}getChannels(){return this.realtime.getChannels()}removeChannel(e){return this.realtime.removeChannel(e)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var e,a,i,o,n,t;return i=this,o=void 0,n=void 0,t=function*(){let{data:i}=yield this.auth.getSession();return null!==(a=null===(e=i.session)||void 0===e?void 0:e.access_token)&&void 0!==a?a:null},new(n||(n=Promise))(function(e,a){function l(e){try{c(t.next(e))}catch(e){a(e)}}function r(e){try{c(t.throw(e))}catch(e){a(e)}}function c(a){var i;a.done?e(a.value):((i=a.value)instanceof n?i:new n(function(e){e(i)})).then(l,r)}c((t=t.apply(i,o||[])).next())})}_initSupabaseAuthClient({autoRefreshToken:e,persistSession:a,detectSessionInUrl:i,storage:o,storageKey:n,flowType:t,debug:l},r,c){var s;let m={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new av({url:this.authUrl,headers:Object.assign(Object.assign({},m),r),storageKey:n,autoRefreshToken:e,persistSession:a,detectSessionInUrl:i,storage:o,flowType:t,debug:l,fetch:c,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(e){return new P(this.realtimeUrl,Object.assign(Object.assign({},e),{params:Object.assign({apikey:this.supabaseKey},null==e?void 0:e.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((e,a)=>{this._handleTokenChanged(e,"CLIENT",null==a?void 0:a.access_token)})}_handleTokenChanged(e,a,i){("TOKEN_REFRESHED"===e||"SIGNED_IN"===e)&&this.changedAccessToken!==i?(this.realtime.setAuth(null!=i?i:null),this.changedAccessToken=i):"SIGNED_OUT"===e&&(this.realtime.setAuth(this.supabaseKey),"STORAGE"==a&&this.auth.signOut(),this.changedAccessToken=void 0)}}let ak=(e,a,i)=>new ay(e,a,i)},27162:(e,a,i)=>{"use strict";i.d(a,{Z:()=>c});var o=i(71159);/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let n=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),t=(...e)=>e.filter((e,a,i)=>!!e&&i.indexOf(e)===a).join(" ");/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var l={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let r=(0,o.forwardRef)(({color:e="currentColor",size:a=24,strokeWidth:i=2,absoluteStrokeWidth:n,className:r="",children:c,iconNode:s,...m},d)=>(0,o.createElement)("svg",{ref:d,...l,width:a,height:a,stroke:e,strokeWidth:n?24*Number(i)/Number(a):i,className:t("lucide",r),...m},[...s.map(([e,a])=>(0,o.createElement)(e,a)),...Array.isArray(c)?c:[c]])),c=(e,a)=>{let i=(0,o.forwardRef)(({className:i,...l},c)=>(0,o.createElement)(r,{ref:c,iconNode:a,className:t(`lucide-${n(e)}`,i),...l}));return i.displayName=`${e}`,i}},84294:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});/**
 * @license lucide-react v0.399.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let o=(0,i(27162).Z)("Menu",[["line",{x1:"4",x2:"20",y1:"12",y2:"12",key:"1e0a9i"}],["line",{x1:"4",x2:"20",y1:"6",y2:"6",key:"1owob3"}],["line",{x1:"4",x2:"20",y1:"18",y2:"18",key:"yk5zj1"}]])},17710:(e,a,i)=>{"use strict";i.d(a,{default:()=>n.a});var o=i(66794),n=i.n(o)},57371:(e,a,i)=>{"use strict";i.d(a,{default:()=>n.a});var o=i(670),n=i.n(o)},40618:(e,a)=>{"use strict";function i(e){for(let a=0;a<e.length;a++){let i=e[a];if("function"!=typeof i)throw Error(`A "use server" file can only export async functions, found ${typeof i}.
Read more: https://nextjs.org/docs/messages/invalid-use-server-value`)}}Object.defineProperty(a,"h",{enumerable:!0,get:function(){return i}})},68570:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"createProxy",{enumerable:!0,get:function(){return o}});let o=i(51749).createClientModuleProxy},24330:(e,a,i)=>{"use strict";Object.defineProperty(a,"j",{enumerable:!0,get:function(){return n}});let o=i(51749);function n(e,a){return(0,o.registerServerReference)(a,e,null)}},59943:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/components/app-router.js")},53144:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/components/client-page.js")},37922:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/components/error-boundary.js")},95106:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/components/layout-router.js")},60525:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/components/not-found-boundary.js")},35866:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return t}}),i(53370);let o=i(19510);i(71159);let n={error:{fontFamily:'system-ui,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji"',height:"100vh",textAlign:"center",display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center"},desc:{display:"inline-block"},h1:{display:"inline-block",margin:"0 20px 0 0",padding:"0 23px 0 0",fontSize:24,fontWeight:500,verticalAlign:"top",lineHeight:"49px"},h2:{fontSize:14,fontWeight:400,lineHeight:"49px",margin:0}};function t(){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("title",{children:"404: This page could not be found."}),(0,o.jsx)("div",{style:n.error,children:(0,o.jsxs)("div",{children:[(0,o.jsx)("style",{dangerouslySetInnerHTML:{__html:"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}),(0,o.jsx)("h1",{className:"next-error-h1",style:n.h1,children:"404"}),(0,o.jsx)("div",{style:n.desc,children:(0,o.jsx)("h2",{style:n.h2,children:"This page could not be found."})})]})})]})}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},84892:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/components/render-from-template-context.js")},79181:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{createDynamicallyTrackedSearchParams:function(){return r},createUntrackedSearchParams:function(){return l}});let o=i(45869),n=i(6278),t=i(38238);function l(e){let a=o.staticGenerationAsyncStorage.getStore();return a&&a.forceStatic?{}:e}function r(e){let a=o.staticGenerationAsyncStorage.getStore();return a?a.forceStatic?{}:a.isStaticGeneration||a.dynamicShouldError?new Proxy({},{get:(e,i,o)=>("string"==typeof i&&(0,n.trackDynamicDataAccessed)(a,"searchParams."+i),t.ReflectAdapter.get(e,i,o)),has:(e,i)=>("string"==typeof i&&(0,n.trackDynamicDataAccessed)(a,"searchParams."+i),Reflect.has(e,i)),ownKeys:e=>((0,n.trackDynamicDataAccessed)(a,"searchParams"),Reflect.ownKeys(e))}):e:e}("function"==typeof a.default||"object"==typeof a.default&&null!==a.default)&&void 0===a.default.__esModule&&(Object.defineProperty(a.default,"__esModule",{value:!0}),Object.assign(a.default,a),e.exports=a.default)},10221:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/image-component.js")},670:(e,a,i)=>{"use strict";let{createProxy:o}=i(68570);e.exports=o("/Users/trathanl/next-airbnb/webapp/node_modules/next/dist/client/link.js")},37971:(e,a,i)=>{"use strict";var o=i(97049),n={stream:!0},t=new Map;function l(e){var a=globalThis.__next_require__(e);return"function"!=typeof a.then||"fulfilled"===a.status?null:(a.then(function(e){a.status="fulfilled",a.value=e},function(e){a.status="rejected",a.reason=e}),a)}function r(){}var c=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Dispatcher,s=Symbol.for("react.element"),m=Symbol.for("react.lazy"),d=Symbol.iterator,f=Array.isArray,p=Object.getPrototypeOf,u=Object.prototype,h=new WeakMap;function g(e,a,i,o){var n=1,t=0,l=null;e=JSON.stringify(e,function e(r,c){if(null===c)return null;if("object"==typeof c){if("function"==typeof c.then){null===l&&(l=new FormData),t++;var s,m,g=n++;return c.then(function(o){o=JSON.stringify(o,e);var n=l;n.append(a+g,o),0==--t&&i(n)},function(e){o(e)}),"$@"+g.toString(16)}if(f(c))return c;if(c instanceof FormData){null===l&&(l=new FormData);var b=l,v=a+(r=n++)+"_";return c.forEach(function(e,a){b.append(v+a,e)}),"$K"+r.toString(16)}if(c instanceof Map)return c=JSON.stringify(Array.from(c),e),null===l&&(l=new FormData),r=n++,l.append(a+r,c),"$Q"+r.toString(16);if(c instanceof Set)return c=JSON.stringify(Array.from(c),e),null===l&&(l=new FormData),r=n++,l.append(a+r,c),"$W"+r.toString(16);if(null===(m=c)||"object"!=typeof m?null:"function"==typeof(m=d&&m[d]||m["@@iterator"])?m:null)return Array.from(c);if((r=p(c))!==u&&(null===r||null!==p(r)))throw Error("Only plain objects, and a few built-ins, can be passed to Server Actions. Classes or null prototypes are not supported.");return c}if("string"==typeof c)return"Z"===c[c.length-1]&&this[r]instanceof Date?"$D"+c:c="$"===c[0]?"$"+c:c;if("boolean"==typeof c)return c;if("number"==typeof c)return Number.isFinite(s=c)?0===s&&-1/0==1/s?"$-0":s:1/0===s?"$Infinity":-1/0===s?"$-Infinity":"$NaN";if(void 0===c)return"$undefined";if("function"==typeof c){if(void 0!==(c=h.get(c)))return c=JSON.stringify(c,e),null===l&&(l=new FormData),r=n++,l.set(a+r,c),"$F"+r.toString(16);throw Error("Client Functions cannot be passed directly to Server Functions. Only Functions passed from the Server can be passed back again.")}if("symbol"==typeof c){if(Symbol.for(r=c.description)!==c)throw Error("Only global symbols received from Symbol.for(...) can be passed to Server Functions. The symbol Symbol.for("+c.description+") cannot be found among global symbols.");return"$S"+r}if("bigint"==typeof c)return"$n"+c.toString(10);throw Error("Type "+typeof c+" is not supported as an argument to a Server Function.")}),null===l?i(e):(l.set(a+"0",e),0===t&&i(l))}var b=new WeakMap;function v(e){var a=h.get(this);if(!a)throw Error("Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.");var i=null;if(null!==a.bound){if((i=b.get(a))||(o=a,l=new Promise(function(e,a){n=e,t=a}),g(o,"",function(e){if("string"==typeof e){var a=new FormData;a.append("0",e),e=a}l.status="fulfilled",l.value=e,n(e)},function(e){l.status="rejected",l.reason=e,t(e)}),i=l,b.set(a,i)),"rejected"===i.status)throw i.reason;if("fulfilled"!==i.status)throw i;a=i.value;var o,n,t,l,r=new FormData;a.forEach(function(a,i){r.append("$ACTION_"+e+":"+i,a)}),i=r,a="$ACTION_REF_"+e}else a="$ACTION_ID_"+a.id;return{name:a,method:"POST",encType:"multipart/form-data",data:i}}function y(e,a){var i=h.get(this);if(!i)throw Error("Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.");if(i.id!==e)return!1;var o=i.bound;if(null===o)return 0===a;switch(o.status){case"fulfilled":return o.value.length===a;case"pending":throw o;case"rejected":throw o.reason;default:throw"string"!=typeof o.status&&(o.status="pending",o.then(function(e){o.status="fulfilled",o.value=e},function(e){o.status="rejected",o.reason=e})),o}}function k(e,a,i){Object.defineProperties(e,{$$FORM_ACTION:{value:void 0===i?v:function(){var e=h.get(this);if(!e)throw Error("Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.");var a=e.bound;return null===a&&(a=Promise.resolve([])),i(e.id,a)}},$$IS_SIGNATURE_EQUAL:{value:y},bind:{value:R}}),h.set(e,a)}var w=Function.prototype.bind,S=Array.prototype.slice;function R(){var e=w.apply(this,arguments),a=h.get(this);if(a){var i=S.call(arguments,1),o=null;o=null!==a.bound?Promise.resolve(a.bound).then(function(e){return e.concat(i)}):Promise.resolve(i),Object.defineProperties(e,{$$FORM_ACTION:{value:this.$$FORM_ACTION},$$IS_SIGNATURE_EQUAL:{value:y},bind:{value:R}}),h.set(e,{id:a.id,bound:o})}return e}function M(e,a,i,o){this.status=e,this.value=a,this.reason=i,this._response=o}function A(e){switch(e.status){case"resolved_model":P(e);break;case"resolved_module":D(e)}switch(e.status){case"fulfilled":return e.value;case"pending":case"blocked":case"cyclic":throw e;default:throw e.reason}}function _(e,a){for(var i=0;i<e.length;i++)(0,e[i])(a)}function T(e,a,i){switch(e.status){case"fulfilled":_(a,e.value);break;case"pending":case"blocked":case"cyclic":e.value=a,e.reason=i;break;case"rejected":i&&_(i,e.reason)}}function E(e,a){if("pending"===e.status||"blocked"===e.status){var i=e.reason;e.status="rejected",e.reason=a,null!==i&&_(i,a)}}function N(e,a){if("pending"===e.status||"blocked"===e.status){var i=e.value,o=e.reason;e.status="resolved_module",e.value=a,null!==i&&(D(e),T(e,i,o))}}M.prototype=Object.create(Promise.prototype),M.prototype.then=function(e,a){switch(this.status){case"resolved_model":P(this);break;case"resolved_module":D(this)}switch(this.status){case"fulfilled":e(this.value);break;case"pending":case"blocked":case"cyclic":e&&(null===this.value&&(this.value=[]),this.value.push(e)),a&&(null===this.reason&&(this.reason=[]),this.reason.push(a));break;default:a(this.reason)}};var j=null,C=null;function P(e){var a=j,i=C;j=e,C=null;var o=e.value;e.status="cyclic",e.value=null,e.reason=null;try{var n=JSON.parse(o,e._response._fromJSON);if(null!==C&&0<C.deps)C.value=n,e.status="blocked",e.value=null,e.reason=null;else{var t=e.value;e.status="fulfilled",e.value=n,null!==t&&_(t,n)}}catch(a){e.status="rejected",e.reason=a}finally{j=a,C=i}}function D(e){try{var a=e.value,i=globalThis.__next_require__(a[0]);if(4===a.length&&"function"==typeof i.then){if("fulfilled"===i.status)i=i.value;else throw i.reason}var o="*"===a[2]?i:""===a[2]?i.__esModule?i.default:i:i[a[2]];e.status="fulfilled",e.value=o}catch(a){e.status="rejected",e.reason=a}}function B(e,a){e._chunks.forEach(function(e){"pending"===e.status&&E(e,a)})}function x(e,a){var i=e._chunks,o=i.get(a);return o||(o=new M("pending",null,null,e),i.set(a,o)),o}function I(e,a){if("resolved_model"===(e=x(e,a)).status&&P(e),"fulfilled"===e.status)return e.value;throw e.reason}function O(){throw Error('Trying to call a function from "use server" but the callServer option was not implemented in your router runtime.')}function z(){throw Error("Server Functions cannot be called during initial render. This would create a fetch waterfall. Try to use a Server Component to pass data to Client Components instead.")}function L(e){var a,i=e.ssrManifest.moduleMap;return(i={_bundlerConfig:i,_moduleLoading:e.ssrManifest.moduleLoading,_callServer:void 0!==z?z:O,_encodeFormAction:e.encodeFormAction,_nonce:e="string"==typeof e.nonce?e.nonce:void 0,_chunks:new Map,_stringDecoder:new TextDecoder,_fromJSON:null,_rowState:0,_rowID:0,_rowTag:0,_rowLength:0,_buffer:[]})._fromJSON=(a=i,function(e,i){return"string"==typeof i?function(e,a,i,o){if("$"===o[0]){if("$"===o)return s;switch(o[1]){case"$":return o.slice(1);case"L":return{$$typeof:m,_payload:e=x(e,a=parseInt(o.slice(2),16)),_init:A};case"@":if(2===o.length)return new Promise(function(){});return x(e,a=parseInt(o.slice(2),16));case"S":return Symbol.for(o.slice(2));case"F":return a=I(e,a=parseInt(o.slice(2),16)),function(e,a){function i(){var e=Array.prototype.slice.call(arguments),i=a.bound;return i?"fulfilled"===i.status?o(a.id,i.value.concat(e)):Promise.resolve(i).then(function(i){return o(a.id,i.concat(e))}):o(a.id,e)}var o=e._callServer;return k(i,a,e._encodeFormAction),i}(e,a);case"Q":return new Map(e=I(e,a=parseInt(o.slice(2),16)));case"W":return new Set(e=I(e,a=parseInt(o.slice(2),16)));case"I":return 1/0;case"-":return"$-0"===o?-0:-1/0;case"N":return NaN;case"u":return;case"D":return new Date(Date.parse(o.slice(2)));case"n":return BigInt(o.slice(2));default:switch((e=x(e,o=parseInt(o.slice(1),16))).status){case"resolved_model":P(e);break;case"resolved_module":D(e)}switch(e.status){case"fulfilled":return e.value;case"pending":case"blocked":case"cyclic":var n;return o=j,e.then(function(e,a,i,o){if(C){var n=C;o||n.deps++}else n=C={deps:o?0:1,value:null};return function(o){a[i]=o,n.deps--,0===n.deps&&"blocked"===e.status&&(o=e.value,e.status="fulfilled",e.value=n.value,null!==o&&_(o,n.value))}}(o,a,i,"cyclic"===e.status),(n=o,function(e){return E(n,e)})),null;default:throw e.reason}}}return o}(a,this,e,i):"object"==typeof i&&null!==i?e=i[0]===s?{$$typeof:s,type:i[1],key:i[2],ref:null,props:i[3],_owner:null}:i:i}),i}function K(e,a){function o(a){B(e,a)}var s=a.getReader();s.read().then(function a(m){var d=m.value;if(m.done)B(e,Error("Connection closed."));else{var f=0,p=e._rowState,u=e._rowID,h=e._rowTag,g=e._rowLength;m=e._buffer;for(var b=d.length;f<b;){var v=-1;switch(p){case 0:58===(v=d[f++])?p=1:u=u<<4|(96<v?v-87:v-48);continue;case 1:84===(p=d[f])?(h=p,p=2,f++):64<p&&91>p?(h=p,p=3,f++):(h=0,p=3);continue;case 2:44===(v=d[f++])?p=4:g=g<<4|(96<v?v-87:v-48);continue;case 3:v=d.indexOf(10,f);break;case 4:(v=f+g)>d.length&&(v=-1)}var y=d.byteOffset+f;if(-1<v){f=new Uint8Array(d.buffer,y,v-f),g=e,y=h;var k=g._stringDecoder;h="";for(var w=0;w<m.length;w++)h+=k.decode(m[w],n);switch(h+=k.decode(f),y){case 73:!function(e,a,o){var n=e._chunks,s=n.get(a);o=JSON.parse(o,e._fromJSON);var m=function(e,a){if(e){var i=e[a[0]];if(e=i[a[2]])i=e.name;else{if(!(e=i["*"]))throw Error('Could not find the module "'+a[0]+'" in the React SSR Manifest. This is probably a bug in the React Server Components bundler.');i=a[2]}return 4===a.length?[e.id,e.chunks,i,1]:[e.id,e.chunks,i]}return a}(e._bundlerConfig,o);if(function(e,a,i){if(null!==e)for(var o=1;o<a.length;o+=2){var n=c.current;if(n){var t=n.preinitScript,l=e.prefix+a[o],r=e.crossOrigin;r="string"==typeof r?"use-credentials"===r?r:"":void 0,t.call(n,l,{crossOrigin:r,nonce:i})}}}(e._moduleLoading,o[1],e._nonce),o=function(e){for(var a=e[1],o=[],n=0;n<a.length;){var c=a[n++];a[n++];var s=t.get(c);if(void 0===s){s=i.e(c),o.push(s);var m=t.set.bind(t,c,null);s.then(m,r),t.set(c,s)}else null!==s&&o.push(s)}return 4===e.length?0===o.length?l(e[0]):Promise.all(o).then(function(){return l(e[0])}):0<o.length?Promise.all(o):null}(m)){if(s){var d=s;d.status="blocked"}else d=new M("blocked",null,null,e),n.set(a,d);o.then(function(){return N(d,m)},function(e){return E(d,e)})}else s?N(s,m):n.set(a,new M("resolved_module",m,null,e))}(g,u,h);break;case 72:if(u=h[0],g=JSON.parse(h=h.slice(1),g._fromJSON),h=c.current)switch(u){case"D":h.prefetchDNS(g);break;case"C":"string"==typeof g?h.preconnect(g):h.preconnect(g[0],g[1]);break;case"L":u=g[0],f=g[1],3===g.length?h.preload(u,f,g[2]):h.preload(u,f);break;case"m":"string"==typeof g?h.preloadModule(g):h.preloadModule(g[0],g[1]);break;case"S":"string"==typeof g?h.preinitStyle(g):h.preinitStyle(g[0],0===g[1]?void 0:g[1],3===g.length?g[2]:void 0);break;case"X":"string"==typeof g?h.preinitScript(g):h.preinitScript(g[0],g[1]);break;case"M":"string"==typeof g?h.preinitModuleScript(g):h.preinitModuleScript(g[0],g[1])}break;case 69:f=(h=JSON.parse(h)).digest,(h=Error("An error occurred in the Server Components render. The specific message is omitted in production builds to avoid leaking sensitive details. A digest property is included on this error instance which may provide additional details about the nature of the error.")).stack="Error: "+h.message,h.digest=f,(y=(f=g._chunks).get(u))?E(y,h):f.set(u,new M("rejected",null,h,g));break;case 84:g._chunks.set(u,new M("fulfilled",h,null,g));break;case 68:case 87:throw Error("Failed to read a RSC payload created by a development version of React on the server while using a production version on the client. Always use matching versions on the server and the client.");default:(y=(f=g._chunks).get(u))?(g=y,u=h,"pending"===g.status&&(h=g.value,f=g.reason,g.status="resolved_model",g.value=u,null!==h&&(P(g),T(g,h,f)))):f.set(u,new M("resolved_model",h,null,g))}f=v,3===p&&f++,g=u=h=p=0,m.length=0}else{d=new Uint8Array(d.buffer,y,d.byteLength-f),m.push(d),g-=d.byteLength;break}}return e._rowState=p,e._rowID=u,e._rowTag=h,e._rowLength=g,s.read().then(a).catch(o)}}).catch(o)}a.createFromFetch=function(e,a){var i=L(a);return e.then(function(e){K(i,e.body)},function(e){B(i,e)}),x(i,0)},a.createFromReadableStream=function(e,a){return K(a=L(a),e),x(a,0)},a.createServerReference=function(e){return function(e,a,i){function o(){var i=Array.prototype.slice.call(arguments);return a(e,i)}return k(o,{id:e,bound:null},i),o}(e,z)},a.encodeReply=function(e){return new Promise(function(a,i){g(e,"",a,i)})}},30561:(e,a,i)=>{"use strict";e.exports=i(37971)},88769:()=>{},24672:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"DetachedPromise",{enumerable:!0,get:function(){return i}});class i{constructor(){let e,a;this.promise=new Promise((i,o)=>{e=i,a=o}),this.resolve=e,this.reject=a}}},21890:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{atLeastOneTask:function(){return n},scheduleImmediate:function(){return o},scheduleOnNextTick:function(){return i}});let i=e=>{Promise.resolve().then(()=>{process.nextTick(e)})},o=e=>{setImmediate(e)};function n(){return new Promise(e=>o(e))}},9702:(e,a)=>{"use strict";let i,o;Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{arrayBufferToString:function(){return t},decrypt:function(){return c},encrypt:function(){return r},generateEncryptionKeyBase64:function(){return s},getActionEncryptionKey:function(){return u},getClientReferenceManifestSingleton:function(){return p},getServerModuleMap:function(){return f},setReferenceManifestsSingleton:function(){return d},stringToUint8Array:function(){return l}});let n=null;function t(e){let a=new Uint8Array(e),i=a.byteLength;if(i<65535)return String.fromCharCode.apply(null,a);let o="";for(let e=0;e<i;e++)o+=String.fromCharCode(a[e]);return o}function l(e){let a=e.length,i=new Uint8Array(a);for(let o=0;o<a;o++)i[o]=e.charCodeAt(o);return i}function r(e,a,i){return crypto.subtle.encrypt({name:"AES-GCM",iv:a},e,i)}function c(e,a,i){return crypto.subtle.decrypt({name:"AES-GCM",iv:a},e,i)}async function s(e){if(e&&void 0!==o)return o;n||(n=new Promise(async(e,a)=>{try{let a=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),i=await crypto.subtle.exportKey("raw",a),o=btoa(t(i));e([a,o])}catch(e){a(e)}}));let[a,l]=await n;return i=a,e&&(o=l),l}let m=Symbol.for("next.server.action-manifests");function d({clientReferenceManifest:e,serverActionsManifest:a,serverModuleMap:i}){globalThis[m]={clientReferenceManifest:e,serverActionsManifest:a,serverModuleMap:i}}function f(){let e=globalThis[m];if(!e)throw Error("Missing manifest for Server Actions. This is a bug in Next.js");return e.serverModuleMap}function p(){let e=globalThis[m];if(!e)throw Error("Missing manifest for Server Actions. This is a bug in Next.js");return e.clientReferenceManifest}async function u(){if(i)return i;let e=globalThis[m];if(!e)throw Error("Missing manifest for Server Actions. This is a bug in Next.js");let a=process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY||e.serverActionsManifest.encryptionKey;if(void 0===a)throw Error("Missing encryption key for Server Actions");return i=await crypto.subtle.importKey("raw",l(atob(a)),"AES-GCM",!0,["encrypt","decrypt"])}},60166:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{decryptActionBoundArgs:function(){return f},encryptActionBoundArgs:function(){return d}}),i(88769);let o=i(51749),n=i(30561),t=i(18175),l=i(9702),r=new TextEncoder,c=new TextDecoder;async function s(e,a){let i=await (0,l.getActionEncryptionKey)();if(void 0===i)throw Error("Missing encryption key for Server Action. This is a bug in Next.js");let o=atob(a),n=o.slice(0,16),t=o.slice(16),r=c.decode(await (0,l.decrypt)(i,(0,l.stringToUint8Array)(n),(0,l.stringToUint8Array)(t)));if(!r.startsWith(e))throw Error("Invalid Server Action payload: failed to decrypt.");return r.slice(e.length)}async function m(e,a){let i=await (0,l.getActionEncryptionKey)();if(void 0===i)throw Error("Missing encryption key for Server Action. This is a bug in Next.js");let o=new Uint8Array(16);crypto.getRandomValues(o);let n=(0,l.arrayBufferToString)(o.buffer),t=await (0,l.encrypt)(i,o,r.encode(e+a));return btoa(n+(0,l.arrayBufferToString)(t))}async function d(e,a){let i=(0,l.getClientReferenceManifestSingleton)(),n=await (0,t.streamToString)((0,o.renderToReadableStream)(a,i.clientModules));return await m(e,n)}async function f(e,a){let i=await s(e,await a),t=await (0,n.createFromReadableStream)(new ReadableStream({start(e){e.enqueue(r.encode(i)),e.close()}}),{ssrManifest:{moduleLoading:{},moduleMap:{}}}),c=(0,l.getServerModuleMap)();return await (0,o.decodeReply)(await (0,n.encodeReply)(t),c)}},95231:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{AppRouter:function(){return n.default},ClientPageRoot:function(){return m.ClientPageRoot},LayoutRouter:function(){return t.default},NotFoundBoundary:function(){return p.NotFoundBoundary},Postpone:function(){return g.Postpone},RenderFromTemplateContext:function(){return l.default},actionAsyncStorage:function(){return s.actionAsyncStorage},createDynamicallyTrackedSearchParams:function(){return d.createDynamicallyTrackedSearchParams},createUntrackedSearchParams:function(){return d.createUntrackedSearchParams},decodeAction:function(){return o.decodeAction},decodeFormState:function(){return o.decodeFormState},decodeReply:function(){return o.decodeReply},patchFetch:function(){return k},preconnect:function(){return h.preconnect},preloadFont:function(){return h.preloadFont},preloadStyle:function(){return h.preloadStyle},renderToReadableStream:function(){return o.renderToReadableStream},requestAsyncStorage:function(){return c.requestAsyncStorage},serverHooks:function(){return f},staticGenerationAsyncStorage:function(){return r.staticGenerationAsyncStorage},taintObjectReference:function(){return b.taintObjectReference}});let o=i(51749),n=v(i(59943)),t=v(i(95106)),l=v(i(84892)),r=i(45869),c=i(54580),s=i(72934),m=i(53144),d=i(79181),f=function(e,a){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var i=y(void 0);if(i&&i.has(e))return i.get(e);var o={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var t in e)if("default"!==t&&Object.prototype.hasOwnProperty.call(e,t)){var l=n?Object.getOwnPropertyDescriptor(e,t):null;l&&(l.get||l.set)?Object.defineProperty(o,t,l):o[t]=e[t]}return o.default=e,i&&i.set(e,o),o}(i(44789)),p=i(60525),u=i(60670);i(37922);let h=i(20135),g=i(49257),b=i(526);function v(e){return e&&e.__esModule?e:{default:e}}function y(e){if("function"!=typeof WeakMap)return null;var a=new WeakMap,i=new WeakMap;return(y=function(e){return e?i:a})(e)}function k(){return(0,u.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:r.staticGenerationAsyncStorage})}},49257:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"Postpone",{enumerable:!0,get:function(){return o.Postpone}});let o=i(6278)},20135:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{preconnect:function(){return l},preloadFont:function(){return t},preloadStyle:function(){return n}});let o=function(e){return e&&e.__esModule?e:{default:e}}(i(97049));function n(e,a){let i={as:"style"};"string"==typeof a&&(i.crossOrigin=a),o.default.preload(e,i)}function t(e,a,i){let n={as:"font",type:a};"string"==typeof i&&(n.crossOrigin=i),o.default.preload(e,n)}function l(e,a){o.default.preconnect(e,"string"==typeof a?{crossOrigin:a}:void 0)}},526:(e,a,i)=>{"use strict";function o(){throw Error("Taint can only be used with the taint flag.")}Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{taintObjectReference:function(){return n},taintUniqueValue:function(){return t}}),i(71159);let n=o,t=o},97049:(e,a,i)=>{"use strict";e.exports=i(23191).vendored["react-rsc"].ReactDOM},19510:(e,a,i)=>{"use strict";e.exports=i(23191).vendored["react-rsc"].ReactJsxRuntime},51749:(e,a,i)=>{"use strict";e.exports=i(23191).vendored["react-rsc"].ReactServerDOMWebpackServerEdge},63502:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"ENCODED_TAGS",{enumerable:!0,get:function(){return i}});let i={OPENING:{HTML:new Uint8Array([60,104,116,109,108]),BODY:new Uint8Array([60,98,111,100,121])},CLOSED:{HEAD:new Uint8Array([60,47,104,101,97,100,62]),BODY:new Uint8Array([60,47,98,111,100,121,62]),HTML:new Uint8Array([60,47,104,116,109,108,62]),BODY_AND_HTML:new Uint8Array([60,47,98,111,100,121,62,60,47,104,116,109,108,62])}}},18175:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{chainStreams:function(){return d},continueDynamicDataResume:function(){return M},continueDynamicHTMLResume:function(){return R},continueDynamicPrerender:function(){return w},continueFizzStream:function(){return k},continueStaticPrerender:function(){return S},createBufferedTransformStream:function(){return u},createRootLayoutValidatorStream:function(){return y},renderToInitialFizzStream:function(){return h},streamFromString:function(){return f},streamToString:function(){return p}});let o=i(64994),n=i(71376),t=i(24672),l=i(21890),r=i(63502),c=i(5893);function s(){}let m=new TextEncoder;function d(...e){if(0===e.length)throw Error("Invariant: chainStreams requires at least one stream");if(1===e.length)return e[0];let{readable:a,writable:i}=new TransformStream,o=e[0].pipeTo(i,{preventClose:!0}),n=1;for(;n<e.length-1;n++){let a=e[n];o=o.then(()=>a.pipeTo(i,{preventClose:!0}))}let t=e[n];return(o=o.then(()=>t.pipeTo(i))).catch(s),a}function f(e){return new ReadableStream({start(a){a.enqueue(m.encode(e)),a.close()}})}async function p(e){let a=new TextDecoder("utf-8",{fatal:!0}),i="";for await(let o of e)i+=a.decode(o,{stream:!0});return i+a.decode()}function u(){let e,a=[],i=0,o=o=>{if(e)return;let n=new t.DetachedPromise;e=n,(0,l.scheduleImmediate)(()=>{try{let e=new Uint8Array(i),n=0;for(let i=0;i<a.length;i++){let o=a[i];e.set(o,n),n+=o.byteLength}a.length=0,i=0,o.enqueue(e)}catch{}finally{e=void 0,n.resolve()}})};return new TransformStream({transform(e,n){a.push(e),i+=e.byteLength,o(n)},flush(){if(e)return e.promise}})}function h({ReactDOMServer:e,element:a,streamOptions:i}){return(0,o.getTracer)().trace(n.AppRenderSpan.renderToReadableStream,async()=>e.renderToReadableStream(a,i))}function g(e){let a=!1,i=!1,o=!1;return new TransformStream({async transform(n,t){if(o=!0,i){t.enqueue(n);return}let s=await e();if(a){if(s){let e=m.encode(s);t.enqueue(e)}t.enqueue(n),i=!0}else{let e=(0,c.indexOfUint8Array)(n,r.ENCODED_TAGS.CLOSED.HEAD);if(-1!==e){if(s){let a=m.encode(s),i=new Uint8Array(n.length+a.length);i.set(n.slice(0,e)),i.set(a,e),i.set(n.slice(e),e+a.length),t.enqueue(i)}else t.enqueue(n);i=!0,a=!0}}a?(0,l.scheduleImmediate)(()=>{i=!1}):t.enqueue(n)},async flush(a){if(o){let i=await e();i&&a.enqueue(m.encode(i))}}})}function b(e){let a=null,i=!1;async function o(o){if(a)return;let n=e.getReader();await (0,l.atLeastOneTask)();try{for(;;){let{done:e,value:a}=await n.read();if(e){i=!0;return}o.enqueue(a)}}catch(e){o.error(e)}}return new TransformStream({transform(e,i){i.enqueue(e),a||(a=o(i))},flush(e){if(!i)return a||o(e)}})}function v(e){let a=!1,i=m.encode(e);return new TransformStream({transform(o,n){if(a)return n.enqueue(o);let t=(0,c.indexOfUint8Array)(o,i);if(t>-1){if(a=!0,o.length===e.length)return;let i=o.slice(0,t);if(n.enqueue(i),o.length>e.length+t){let a=o.slice(t+e.length);n.enqueue(a)}}else n.enqueue(o)},flush(e){e.enqueue(i)}})}function y(){let e=!1,a=!1;return new TransformStream({async transform(i,o){!e&&(0,c.indexOfUint8Array)(i,r.ENCODED_TAGS.OPENING.HTML)>-1&&(e=!0),!a&&(0,c.indexOfUint8Array)(i,r.ENCODED_TAGS.OPENING.BODY)>-1&&(a=!0),o.enqueue(i)},flush(i){let o=[];e||o.push("html"),a||o.push("body"),o.length&&i.enqueue(m.encode(`<script>self.__next_root_layout_missing_tags=${JSON.stringify(o)}</script>`))}})}async function k(e,{suffix:a,inlinedDataStream:i,isStaticGeneration:o,getServerInsertedHTML:n,serverInsertedHTMLToHead:r,validateRootLayout:c}){let s="</body></html>",d=a?a.split(s,1)[0]:null;return o&&"allReady"in e&&await e.allReady,function(e,a){let i=e;for(let e of a)e&&(i=i.pipeThrough(e));return i}(e,[u(),n&&!r?new TransformStream({transform:async(e,a)=>{let i=await n();i&&a.enqueue(m.encode(i)),a.enqueue(e)}}):null,null!=d&&d.length>0?function(e){let a,i=!1,o=i=>{let o=new t.DetachedPromise;a=o,(0,l.scheduleImmediate)(()=>{try{i.enqueue(m.encode(e))}catch{}finally{a=void 0,o.resolve()}})};return new TransformStream({transform(e,a){a.enqueue(e),i||(i=!0,o(a))},flush(o){if(a)return a.promise;i||o.enqueue(m.encode(e))}})}(d):null,i?b(i):null,c?y():null,v(s),n&&r?g(n):null])}async function w(e,{getServerInsertedHTML:a}){return e.pipeThrough(u()).pipeThrough(new TransformStream({transform(e,a){(0,c.isEquivalentUint8Arrays)(e,r.ENCODED_TAGS.CLOSED.BODY_AND_HTML)||(0,c.isEquivalentUint8Arrays)(e,r.ENCODED_TAGS.CLOSED.BODY)||(0,c.isEquivalentUint8Arrays)(e,r.ENCODED_TAGS.CLOSED.HTML)||(e=(0,c.removeFromUint8Array)(e,r.ENCODED_TAGS.CLOSED.BODY),e=(0,c.removeFromUint8Array)(e,r.ENCODED_TAGS.CLOSED.HTML),a.enqueue(e))}})).pipeThrough(g(a))}async function S(e,{inlinedDataStream:a,getServerInsertedHTML:i}){return e.pipeThrough(u()).pipeThrough(g(i)).pipeThrough(b(a)).pipeThrough(v("</body></html>"))}async function R(e,{inlinedDataStream:a,getServerInsertedHTML:i}){return e.pipeThrough(u()).pipeThrough(g(i)).pipeThrough(b(a)).pipeThrough(v("</body></html>"))}async function M(e,{inlinedDataStream:a}){return e.pipeThrough(b(a)).pipeThrough(v("</body></html>"))}},5893:(e,a)=>{"use strict";function i(e,a){if(0===a.length)return 0;if(0===e.length||a.length>e.length)return -1;for(let i=0;i<=e.length-a.length;i++){let o=!0;for(let n=0;n<a.length;n++)if(e[i+n]!==a[n]){o=!1;break}if(o)return i}return -1}function o(e,a){if(e.length!==a.length)return!1;for(let i=0;i<e.length;i++)if(e[i]!==a[i])return!1;return!0}function n(e,a){let o=i(e,a);if(0===o)return e.subarray(a.length);if(!(o>-1))return e;{let i=new Uint8Array(e.length-a.length);return i.set(e.slice(0,o)),i.set(e.slice(o+a.length),o),i}}Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{indexOfUint8Array:function(){return i},isEquivalentUint8Arrays:function(){return o},removeFromUint8Array:function(){return n}})},79241:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getImgProps",{enumerable:!0,get:function(){return r}}),i(96501);let o=i(95728),n=i(29472);function t(e){return void 0!==e.default}function l(e){return void 0===e?e:"number"==typeof e?Number.isFinite(e)?e:NaN:"string"==typeof e&&/^[0-9]+$/.test(e)?parseInt(e,10):NaN}function r(e,a){var i;let r,c,s,{src:m,sizes:d,unoptimized:f=!1,priority:p=!1,loading:u,className:h,quality:g,width:b,height:v,fill:y=!1,style:k,overrideSrc:w,onLoad:S,onLoadingComplete:R,placeholder:M="empty",blurDataURL:A,fetchPriority:_,layout:T,objectFit:E,objectPosition:N,lazyBoundary:j,lazyRoot:C,...P}=e,{imgConf:D,showAltText:B,blurComplete:x,defaultLoader:I}=a,O=D||n.imageConfigDefault;if("allSizes"in O)r=O;else{let e=[...O.deviceSizes,...O.imageSizes].sort((e,a)=>e-a),a=O.deviceSizes.sort((e,a)=>e-a);r={...O,allSizes:e,deviceSizes:a}}if(void 0===I)throw Error("images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config");let z=P.loader||I;delete P.loader,delete P.srcSet;let L="__next_img_default"in z;if(L){if("custom"===r.loader)throw Error('Image with src "'+m+'" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader')}else{let e=z;z=a=>{let{config:i,...o}=a;return e(o)}}if(T){"fill"===T&&(y=!0);let e={intrinsic:{maxWidth:"100%",height:"auto"},responsive:{width:"100%",height:"auto"}}[T];e&&(k={...k,...e});let a={responsive:"100vw",fill:"100vw"}[T];a&&!d&&(d=a)}let K="",G=l(b),V=l(v);if("object"==typeof(i=m)&&(t(i)||void 0!==i.src)){let e=t(m)?m.default:m;if(!e.src)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received "+JSON.stringify(e));if(!e.height||!e.width)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received "+JSON.stringify(e));if(c=e.blurWidth,s=e.blurHeight,A=A||e.blurDataURL,K=e.src,!y){if(G||V){if(G&&!V){let a=G/e.width;V=Math.round(e.height*a)}else if(!G&&V){let a=V/e.height;G=Math.round(e.width*a)}}else G=e.width,V=e.height}}let F=!p&&("lazy"===u||void 0===u);(!(m="string"==typeof m?m:K)||m.startsWith("data:")||m.startsWith("blob:"))&&(f=!0,F=!1),r.unoptimized&&(f=!0),L&&m.endsWith(".svg")&&!r.dangerouslyAllowSVG&&(f=!0),p&&(_="high");let U=l(g),H=Object.assign(y?{position:"absolute",height:"100%",width:"100%",left:0,top:0,right:0,bottom:0,objectFit:E,objectPosition:N}:{},B?{}:{color:"transparent"},k),q=x||"empty"===M?null:"blur"===M?'url("data:image/svg+xml;charset=utf-8,'+(0,o.getImageBlurSvg)({widthInt:G,heightInt:V,blurWidth:c,blurHeight:s,blurDataURL:A||"",objectFit:H.objectFit})+'")':'url("'+M+'")',$=q?{backgroundSize:H.objectFit||"cover",backgroundPosition:H.objectPosition||"50% 50%",backgroundRepeat:"no-repeat",backgroundImage:q}:{},W=function(e){let{config:a,src:i,unoptimized:o,width:n,quality:t,sizes:l,loader:r}=e;if(o)return{src:i,srcSet:void 0,sizes:void 0};let{widths:c,kind:s}=function(e,a,i){let{deviceSizes:o,allSizes:n}=e;if(i){let e=/(^|\s)(1?\d?\d)vw/g,a=[];for(let o;o=e.exec(i);o)a.push(parseInt(o[2]));if(a.length){let e=.01*Math.min(...a);return{widths:n.filter(a=>a>=o[0]*e),kind:"w"}}return{widths:n,kind:"w"}}return"number"!=typeof a?{widths:o,kind:"w"}:{widths:[...new Set([a,2*a].map(e=>n.find(a=>a>=e)||n[n.length-1]))],kind:"x"}}(a,n,l),m=c.length-1;return{sizes:l||"w"!==s?l:"100vw",srcSet:c.map((e,o)=>r({config:a,src:i,quality:t,width:e})+" "+("w"===s?e:o+1)+s).join(", "),src:r({config:a,src:i,quality:t,width:c[m]})}}({config:r,src:m,unoptimized:f,width:G,quality:U,sizes:d,loader:z});return{props:{...P,loading:F?"lazy":u,fetchPriority:_,width:G,height:V,decoding:"async",className:h,style:{...H,...$},sizes:W.sizes,srcSet:W.srcSet,src:w||W.src},meta:{unoptimized:f,priority:p,placeholder:M,fill:y}}}},95728:(e,a)=>{"use strict";function i(e){let{widthInt:a,heightInt:i,blurWidth:o,blurHeight:n,blurDataURL:t,objectFit:l}=e,r=o?40*o:a,c=n?40*n:i,s=r&&c?"viewBox='0 0 "+r+" "+c+"'":"";return"%3Csvg xmlns='http://www.w3.org/2000/svg' "+s+"%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='"+(s?"none":"contain"===l?"xMidYMid":"cover"===l?"xMidYMid slice":"none")+"' style='filter: url(%23b);' href='"+t+"'/%3E%3C/svg%3E"}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getImageBlurSvg",{enumerable:!0,get:function(){return i}})},29472:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{VALID_LOADERS:function(){return i},imageConfigDefault:function(){return o}});let i=["default","imgix","cloudinary","akamai","custom"],o={deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],path:"/_next/image",loader:"default",loaderFile:"",domains:[],disableStaticImages:!1,minimumCacheTTL:60,formats:["image/webp"],dangerouslyAllowSVG:!1,contentSecurityPolicy:"script-src 'none'; frame-src 'none'; sandbox;",contentDispositionType:"inline",remotePatterns:[],unoptimized:!1}},66794:(e,a,i)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),function(e,a){for(var i in a)Object.defineProperty(e,i,{enumerable:!0,get:a[i]})}(a,{default:function(){return c},getImageProps:function(){return r}});let o=i(53370),n=i(79241),t=i(10221),l=o._(i(52049));function r(e){let{props:a}=(0,n.getImgProps)(e,{defaultLoader:l.default,imgConf:{deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],path:"/_next/image",loader:"default",dangerouslyAllowSVG:!1,unoptimized:!1}});for(let[e,i]of Object.entries(a))void 0===i&&delete a[e];return{props:a}}let c=t.Image},52049:(e,a)=>{"use strict";function i(e){let{config:a,src:i,width:o,quality:n}=e;return a.path+"?url="+encodeURIComponent(i)+"&w="+o+"&q="+(n||75)}Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return o}}),i.__next_img_default=!0;let o=i},96501:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"warnOnce",{enumerable:!0,get:function(){return i}});let i=e=>{}},30236:(e,a,i)=>{"use strict";var o=i(85477),n=i(50542),t={TRANSITIONAL:0,NONTRANSITIONAL:1};function l(e){return e.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function r(e){for(var a=0,i=n.length-1;a<=i;){var o=Math.floor((a+i)/2),t=n[o];if(t[0][0]<=e&&t[0][1]>=e)return t;t[0][0]>e?i=o-1:a=o+1}return null}var c=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function s(e){return e.replace(c,"_").length}var m=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function d(e,a,i){var n=function(e,a,i){for(var o=!1,n="",l=s(e),c=0;c<l;++c){var m=e.codePointAt(c),d=r(m);switch(d[1]){case"disallowed":o=!0,n+=String.fromCodePoint(m);break;case"ignored":break;case"mapped":n+=String.fromCodePoint.apply(String,d[2]);break;case"deviation":i===t.TRANSITIONAL?n+=String.fromCodePoint.apply(String,d[2]):n+=String.fromCodePoint(m);break;case"valid":n+=String.fromCodePoint(m);break;case"disallowed_STD3_mapped":a?(o=!0,n+=String.fromCodePoint(m)):n+=String.fromCodePoint.apply(String,d[2]);break;case"disallowed_STD3_valid":a&&(o=!0),n+=String.fromCodePoint(m)}}return{string:n,error:o}}(e,a,i);n.string=l(n.string);for(var c=n.string.split("."),f=0;f<c.length;++f)try{var p=function(e,a){"xn--"===e.substr(0,4)&&(e=o.toUnicode(e),t.NONTRANSITIONAL);var i=!1;(l(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(m))&&(i=!0);for(var n=s(e),c=0;c<n;++c){var f=r(e.codePointAt(c));if(d===t.TRANSITIONAL&&"valid"!==f[1]||d===t.NONTRANSITIONAL&&"valid"!==f[1]&&"deviation"!==f[1]){i=!0;break}}return{label:e,error:i}}(c[f]);c[f]=p.label,n.error=n.error||p.error}catch(e){n.error=!0}return{string:c.join("."),error:n.error}}e.exports.toASCII=function(e,a,i,n){var t=d(e,a,i),l=t.string.split(".");if(l=l.map(function(e){try{return o.toASCII(e)}catch(a){return t.error=!0,e}}),n){var r=l.slice(0,l.length-1).join(".").length;(r.length>253||0===r.length)&&(t.error=!0);for(var c=0;c<l.length;++c)if(l.length>63||0===l.length){t.error=!0;break}}return t.error?null:l.join(".")},e.exports.toUnicode=function(e,a){var i=d(e,a,t.NONTRANSITIONAL);return{domain:i.string,error:i.error}},e.exports.PROCESSING_OPTIONS=t},45469:e=>{"use strict";var a={};function i(e,a){!a.unsigned&&--e;let i=a.unsigned?0:-Math.pow(2,e),o=Math.pow(2,e)-1,n=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),t=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,l){l||(l={});let r=+e;if(l.enforceRange){if(!Number.isFinite(r))throw TypeError("Argument is not a finite number");if((r=(r<0?-1:1)*Math.floor(Math.abs(r)))<i||r>o)throw TypeError("Argument is not in byte range");return r}if(!isNaN(r)&&l.clamp){var c;return(r=(c=r)%1==.5&&(1&c)==0?Math.floor(c):Math.round(c))<i&&(r=i),r>o&&(r=o),r}if(!Number.isFinite(r)||0===r)return 0;if(r=(r<0?-1:1)*Math.floor(Math.abs(r))%n,!a.unsigned&&r>=t)return r-n;if(a.unsigned){if(r<0)r+=n;else if(-0===r)return 0}return r}}e.exports=a,a.void=function(){},a.boolean=function(e){return!!e},a.byte=i(8,{unsigned:!1}),a.octet=i(8,{unsigned:!0}),a.short=i(16,{unsigned:!1}),a["unsigned short"]=i(16,{unsigned:!0}),a.long=i(32,{unsigned:!1}),a["unsigned long"]=i(32,{unsigned:!0}),a["long long"]=i(32,{unsigned:!1,moduloBitLength:64}),a["unsigned long long"]=i(32,{unsigned:!0,moduloBitLength:64}),a.double=function(e){let a=+e;if(!Number.isFinite(a))throw TypeError("Argument is not a finite floating-point value");return a},a["unrestricted double"]=function(e){let a=+e;if(isNaN(a))throw TypeError("Argument is NaN");return a},a.float=a.double,a["unrestricted float"]=a["unrestricted double"],a.DOMString=function(e,a){return(a||(a={}),a.treatNullAsEmptyString&&null===e)?"":String(e)},a.ByteString=function(e,a){let i;let o=String(e);for(let e=0;void 0!==(i=o.codePointAt(e));++e)if(i>255)throw TypeError("Argument is not a valid bytestring");return o},a.USVString=function(e){let a=String(e),i=a.length,o=[];for(let e=0;e<i;++e){let n=a.charCodeAt(e);if(n<55296||n>57343)o.push(String.fromCodePoint(n));else if(56320<=n&&n<=57343)o.push(String.fromCodePoint(65533));else if(e===i-1)o.push(String.fromCodePoint(65533));else{let i=a.charCodeAt(e+1);if(56320<=i&&i<=57343){let a=1023&n,t=1023&i;o.push(String.fromCodePoint(65536+1024*a+t)),++e}else o.push(String.fromCodePoint(65533))}}return o.join("")},a.Date=function(e,a){if(!(e instanceof Date))throw TypeError("Argument is not a Date object");if(!isNaN(e))return e},a.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e}},55244:(e,a,i)=>{"use strict";let o=i(59913);a.implementation=class{constructor(e){let a=e[0],i=e[1],n=null;if(void 0!==i&&"failure"===(n=o.basicURLParse(i)))throw TypeError("Invalid base URL");let t=o.basicURLParse(a,{baseURL:n});if("failure"===t)throw TypeError("Invalid URL");this._url=t}get href(){return o.serializeURL(this._url)}set href(e){let a=o.basicURLParse(e);if("failure"===a)throw TypeError("Invalid URL");this._url=a}get origin(){return o.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){o.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){o.cannotHaveAUsernamePasswordPort(this._url)||o.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){o.cannotHaveAUsernamePasswordPort(this._url)||o.setThePassword(this._url,e)}get host(){let e=this._url;return null===e.host?"":null===e.port?o.serializeHost(e.host):o.serializeHost(e.host)+":"+o.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||o.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":o.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||o.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":o.serializeInteger(this._url.port)}set port(e){o.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:o.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],o.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){let a=this._url;if(""===e){a.query=null;return}let i="?"===e[0]?e.substring(1):e;a.query="",o.basicURLParse(i,{url:a,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e){this._url.fragment=null;return}let a="#"===e[0]?e.substring(1):e;this._url.fragment="",o.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},6798:(e,a,i)=>{"use strict";let o=i(45469),n=i(42757),t=i(55244),l=n.implSymbol;function r(a){if(!this||this[l]||!(this instanceof r))throw TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let i=[];for(let e=0;e<arguments.length&&e<2;++e)i[e]=arguments[e];i[0]=o.USVString(i[0]),void 0!==i[1]&&(i[1]=o.USVString(i[1])),e.exports.setup(this,i)}r.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");let a=[];for(let e=0;e<arguments.length&&e<0;++e)a[e]=arguments[e];return this[l].toJSON.apply(this[l],a)},Object.defineProperty(r.prototype,"href",{get(){return this[l].href},set(e){e=o.USVString(e),this[l].href=e},enumerable:!0,configurable:!0}),r.prototype.toString=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");return this.href},Object.defineProperty(r.prototype,"origin",{get(){return this[l].origin},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"protocol",{get(){return this[l].protocol},set(e){e=o.USVString(e),this[l].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"username",{get(){return this[l].username},set(e){e=o.USVString(e),this[l].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"password",{get(){return this[l].password},set(e){e=o.USVString(e),this[l].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"host",{get(){return this[l].host},set(e){e=o.USVString(e),this[l].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"hostname",{get(){return this[l].hostname},set(e){e=o.USVString(e),this[l].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"port",{get(){return this[l].port},set(e){e=o.USVString(e),this[l].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"pathname",{get(){return this[l].pathname},set(e){e=o.USVString(e),this[l].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"search",{get(){return this[l].search},set(e){e=o.USVString(e),this[l].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"hash",{get(){return this[l].hash},set(e){e=o.USVString(e),this[l].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[l]instanceof t.implementation,create(e,a){let i=Object.create(r.prototype);return this.setup(i,e,a),i},setup(e,a,i){i||(i={}),i.wrapper=e,e[l]=new t.implementation(a,i),e[l][n.wrapperSymbol]=e},interface:r,expose:{Window:{URL:r},Worker:{URL:r}}}},64326:(e,a,i)=>{"use strict";a.URL=i(6798).interface,a.serializeURL=i(59913).serializeURL,a.serializeURLOrigin=i(59913).serializeURLOrigin,a.basicURLParse=i(59913).basicURLParse,a.setTheUsername=i(59913).setTheUsername,a.setThePassword=i(59913).setThePassword,a.serializeHost=i(59913).serializeHost,a.serializeInteger=i(59913).serializeInteger,a.parseURL=i(59913).parseURL},59913:(e,a,i)=>{"use strict";let o=i(85477),n=i(30236),t={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},l=Symbol("failure");function r(e){return o.ucs2.decode(e).length}function c(e,a){let i=e[a];return isNaN(i)?void 0:String.fromCodePoint(i)}function s(e){return e>=48&&e<=57}function m(e){return e>=65&&e<=90||e>=97&&e<=122}function d(e){return s(e)||e>=65&&e<=70||e>=97&&e<=102}function f(e){return"."===e||"%2e"===e.toLowerCase()}function p(e){return 2===e.length&&m(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function u(e){return void 0!==t[e]}function h(e){return u(e.scheme)}function g(e){let a=e.toString(16).toUpperCase();return 1===a.length&&(a="0"+a),"%"+a}function b(e){return e<=31||e>126}let v=new Set([32,34,35,60,62,63,96,123,125]);function y(e){return b(e)||v.has(e)}let k=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return y(e)||k.has(e)}function S(e,a){let i=String.fromCodePoint(e);return a(e)?function(e){let a=new Buffer(e),i="";for(let e=0;e<a.length;++e)i+=g(a[e]);return i}(i):i}function R(e,a){if("["===e[0])return"]"!==e[e.length-1]?l:function(e){let a=[0,0,0,0,0,0,0,0],i=0,n=null,t=0;if(58===(e=o.ucs2.decode(e))[t]){if(58!==e[t+1])return l;t+=2,n=++i}for(;t<e.length;){if(8===i)return l;if(58===e[t]){if(null!==n)return l;++t,n=++i;continue}let o=0,r=0;for(;r<4&&d(e[t]);)o=16*o+parseInt(c(e,t),16),++t,++r;if(46===e[t]){if(0===r||(t-=r,i>6))return l;let o=0;for(;void 0!==e[t];){let n=null;if(o>0){if(46!==e[t]||!(o<4))return l;++t}if(!s(e[t]))return l;for(;s(e[t]);){let a=parseInt(c(e,t));if(null===n)n=a;else{if(0===n)return l;n=10*n+a}if(n>255)return l;++t}a[i]=256*a[i]+n,(2==++o||4===o)&&++i}if(4!==o)return l;break}if(58===e[t]){if(void 0===e[++t])return l}else if(void 0!==e[t])return l;a[i]=o,++i}if(null!==n){let e=i-n;for(i=7;0!==i&&e>0;){let o=a[n+e-1];a[n+e-1]=a[i],a[i]=o,--i,--e}}else if(null===n&&8!==i)return l;return a}(e.substring(1,e.length-1));if(!a)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return l;let a="",i=o.ucs2.decode(e);for(let e=0;e<i.length;++e)a+=S(i[e],b);return a}(e);let i=function(e){let a=new Buffer(e),i=[];for(let e=0;e<a.length;++e)37!==a[e]?i.push(a[e]):37===a[e]&&d(a[e+1])&&d(a[e+2])?(i.push(parseInt(a.slice(e+1,e+3).toString(),16)),e+=2):i.push(a[e]);return new Buffer(i).toString()}(e),t=n.toASCII(i,!1,n.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===t||-1!==t.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return l;let r=function(e){let a=e.split(".");if(""===a[a.length-1]&&a.length>1&&a.pop(),a.length>4)return e;let i=[];for(let o of a){if(""===o)return e;let a=function(e){let a=10;return(e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),a=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),a=8),""===e)?0:(10===a?/[^0-9]/:16===a?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?l:parseInt(e,a)}(o);if(a===l)return e;i.push(a)}for(let e=0;e<i.length-1;++e)if(i[e]>255)return l;if(i[i.length-1]>=Math.pow(256,5-i.length))return l;let o=i.pop(),n=0;for(let e of i)o+=e*Math.pow(256,3-n),++n;return o}(t);return"number"==typeof r||r===l?r:t}function M(e){return"number"==typeof e?function(e){let a="",i=e;for(let e=1;e<=4;++e)a=String(i%256)+a,4!==e&&(a="."+a),i=Math.floor(i/256);return a}(e):e instanceof Array?"["+function(e){let a="",i=function(e){let a=null,i=1,o=null,n=0;for(let t=0;t<e.length;++t)0!==e[t]?(n>i&&(a=o,i=n),o=null,n=0):(null===o&&(o=t),++n);return n>i&&(a=o,i=n),{idx:a,len:i}}(e).idx,o=!1;for(let n=0;n<=7;++n)if(!o||0!==e[n]){if(o&&(o=!1),i===n){a+=0===n?"::":":",o=!0;continue}a+=e[n].toString(16),7!==n&&(a+=":")}return a}(e)+"]":e}function A(e){var a;let i=e.path;!(0===i.length||"file"===e.scheme&&1===i.length&&(a=i[0],/^[A-Za-z]:$/.test(a)))&&i.pop()}function _(e){return""!==e.username||""!==e.password}function T(e,a,i,n,t){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=i||"utf-8",this.stateOverride=t,this.url=n,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let e=this.input.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"");e!==this.input&&(this.parseError=!0),this.input=e}let r=this.input.replace(/\u0009|\u000A|\u000D/g,"");for(r!==this.input&&(this.parseError=!0),this.input=r,this.state=t||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=o.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let e=this.input[this.pointer],a=isNaN(e)?void 0:String.fromCodePoint(e),i=this["parse "+this.state](e,a);if(i){if(i===l){this.failure=!0;break}}else break}}T.prototype["parse scheme start"]=function(e,a){if(m(e))this.buffer+=a.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,l;this.state="no scheme",--this.pointer}return!0},T.prototype["parse scheme"]=function(e,a){if(m(e)||s(e)||43===e||45===e||46===e)this.buffer+=a.toLowerCase();else if(58===e){if(this.stateOverride&&(h(this.url)&&!u(this.buffer)||!h(this.url)&&u(this.buffer)||(_(this.url)||null!==this.url.port)&&"file"===this.buffer||"file"===this.url.scheme&&(""===this.url.host||null===this.url.host))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;"file"===this.url.scheme?((47!==this.input[this.pointer+1]||47!==this.input[this.pointer+2])&&(this.parseError=!0),this.state="file"):h(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":h(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,l;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},T.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?l:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):("file"===this.base.scheme?this.state="file":this.state="relative",--this.pointer),!0)},T.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},T.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},T.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):h(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},T.prototype["parse relative slash"]=function(e){return h(this.url)&&(47===e||92===e)?(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"):47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0},T.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},T.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},T.prototype["parse authority"]=function(e,a){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let e=r(this.buffer);for(let a=0;a<e;++a){let e=this.buffer.codePointAt(a);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let i=S(e,w);this.passwordTokenSeenFlag?this.url.password+=i:this.url.username+=i}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,l;this.pointer-=r(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0},T.prototype["parse hostname"]=T.prototype["parse host"]=function(e,a){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag){if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(--this.pointer,h(this.url)&&""===this.buffer)return this.parseError=!0,l;if(this.stateOverride&&""===this.buffer&&(_(this.url)||null!==this.url.port))return this.parseError=!0,!1;let e=R(this.buffer,h(this.url));if(e===l)return l;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=a}else{if(""===this.buffer)return this.parseError=!0,l;let e=R(this.buffer,h(this.url));if(e===l)return l;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},T.prototype["parse port"]=function(e,a){if(s(e))this.buffer+=a;else{if(!(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e)&&!this.stateOverride)return this.parseError=!0,l;if(""!==this.buffer){let e=parseInt(this.buffer);if(e>65535)return this.parseError=!0,l;this.url.port=e===t[this.url.scheme]?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}return!0};let E=new Set([47,92,63,35]);T.prototype["parse file"]=function(e){if(this.url.scheme="file",47===e||92===e)92===e&&(this.parseError=!0),this.state="file slash";else if(null!==this.base&&"file"===this.base.scheme){if(isNaN(e))this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query;else if(63===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query";else if(35===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment";else{var a;this.input.length-this.pointer-1!=0&&(a=this.input[this.pointer+1],m(e)&&(58===a||124===a))&&(!(this.input.length-this.pointer-1>=2)||E.has(this.input[this.pointer+2]))?this.parseError=!0:(this.url.host=this.base.host,this.url.path=this.base.path.slice(),A(this.url)),this.state="path",--this.pointer}}else this.state="path",--this.pointer;return!0},T.prototype["parse file slash"]=function(e){if(47===e||92===e)92===e&&(this.parseError=!0),this.state="file host";else{if(null!==this.base&&"file"===this.base.scheme){var a;2===(a=this.base.path[0]).length&&m(a.codePointAt(0))&&":"===a[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host}this.state="path",--this.pointer}return!0},T.prototype["parse file host"]=function(e,a){if(isNaN(e)||47===e||92===e||63===e||35===e){if(--this.pointer,!this.stateOverride&&p(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=R(this.buffer,h(this.url));if(e===l)return l;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}}else this.buffer+=a;return!0},T.prototype["parse path start"]=function(e){return h(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},T.prototype["parse path"]=function(e){if(isNaN(e)||47===e||h(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){var a;if((h(this.url)&&92===e&&(this.parseError=!0),".."===(a=(a=this.buffer).toLowerCase())||"%2e."===a||".%2e"===a||"%2e%2e"===a)?(A(this.url),47===e||h(this.url)&&92===e||this.url.path.push("")):f(this.buffer)&&47!==e&&!(h(this.url)&&92===e)?this.url.path.push(""):f(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&p(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=S(e,y);return!0},T.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+S(e,b))),!0},T.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&35===e){h(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");let a=new Buffer(this.buffer);for(let e=0;e<a.length;++e)a[e]<33||a[e]>126||34===a[e]||35===a[e]||60===a[e]||62===a[e]?this.url.query+=g(a[e]):this.url.query+=String.fromCodePoint(a[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=a;return!0},T.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||d(this.input[this.pointer+1])&&d(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=S(e,b))),!0},e.exports.serializeURL=function(e,a){let i=e.scheme+":";if(null!==e.host?(i+="//",(""!==e.username||""!==e.password)&&(i+=e.username,""!==e.password&&(i+=":"+e.password),i+="@"),i+=M(e.host),null!==e.port&&(i+=":"+e.port)):null===e.host&&"file"===e.scheme&&(i+="//"),e.cannotBeABaseURL)i+=e.path[0];else for(let a of e.path)i+="/"+a;return null!==e.query&&(i+="?"+e.query),a||null===e.fragment||(i+="#"+e.fragment),i},e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":var i;let o;return o=(i={scheme:a.scheme,host:a.host,port:a.port}).scheme+"://"+M(i.host),null!==i.port&&(o+=":"+i.port),o;case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,a){void 0===a&&(a={});let i=new T(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return i.failure?"failure":i.url},e.exports.setTheUsername=function(e,a){e.username="";let i=o.ucs2.decode(a);for(let a=0;a<i.length;++a)e.username+=S(i[a],w)},e.exports.setThePassword=function(e,a){e.password="";let i=o.ucs2.decode(a);for(let a=0;a<i.length;++a)e.password+=S(i[a],w)},e.exports.serializeHost=M,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(a,i){return void 0===i&&(i={}),e.exports.basicURLParse(a,{baseURL:i.baseURL,encodingOverride:i.encodingOverride})}},42757:e=>{"use strict";e.exports.mixin=function(e,a){let i=Object.getOwnPropertyNames(a);for(let o=0;o<i.length;++o)Object.defineProperty(e,i[o],Object.getOwnPropertyDescriptor(a,i[o]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}},82561:(e,a,i)=>{"use strict";function o(e,a,{checkForDefaultPrevented:i=!0}={}){return function(o){if(e?.(o),!1===i||!o.defaultPrevented)return a?.(o)}}i.d(a,{M:()=>o})},70545:(e,a,i)=>{"use strict";i.d(a,{B:()=>c});var o=i(17577),n=i(93095),t=i(48051),l=i(34214),r=i(10326);function c(e){let a=e+"CollectionProvider",[i,c]=(0,n.b)(a),[s,m]=i(a,{collectionRef:{current:null},itemMap:new Map}),d=e=>{let{scope:a,children:i}=e,n=o.useRef(null),t=o.useRef(new Map).current;return(0,r.jsx)(s,{scope:a,itemMap:t,collectionRef:n,children:i})};d.displayName=a;let f=e+"CollectionSlot",p=o.forwardRef((e,a)=>{let{scope:i,children:o}=e,n=m(f,i),c=(0,t.e)(a,n.collectionRef);return(0,r.jsx)(l.g7,{ref:c,children:o})});p.displayName=f;let u=e+"CollectionItemSlot",h="data-radix-collection-item",g=o.forwardRef((e,a)=>{let{scope:i,children:n,...c}=e,s=o.useRef(null),d=(0,t.e)(a,s),f=m(u,i);return o.useEffect(()=>(f.itemMap.set(s,{ref:s,...c}),()=>void f.itemMap.delete(s))),(0,r.jsx)(l.g7,{[h]:"",ref:d,children:n})});return g.displayName=u,[{Provider:d,Slot:p,ItemSlot:g},function(a){let i=m(e+"CollectionConsumer",a);return o.useCallback(()=>{let e=i.collectionRef.current;if(!e)return[];let a=Array.from(e.querySelectorAll(`[${h}]`));return Array.from(i.itemMap.values()).sort((e,i)=>a.indexOf(e.ref.current)-a.indexOf(i.ref.current))},[i.collectionRef,i.itemMap])},c]}},48051:(e,a,i)=>{"use strict";i.d(a,{F:()=>n,e:()=>t});var o=i(17577);function n(...e){return a=>e.forEach(e=>{"function"==typeof e?e(a):null!=e&&(e.current=a)})}function t(...e){return o.useCallback(n(...e),e)}},93095:(e,a,i)=>{"use strict";i.d(a,{b:()=>l,k:()=>t});var o=i(17577),n=i(10326);function t(e,a){let i=o.createContext(a);function t(e){let{children:a,...t}=e,l=o.useMemo(()=>t,Object.values(t));return(0,n.jsx)(i.Provider,{value:l,children:a})}return t.displayName=e+"Provider",[t,function(n){let t=o.useContext(i);if(t)return t;if(void 0!==a)return a;throw Error(`\`${n}\` must be used within \`${e}\``)}]}function l(e,a=[]){let i=[],t=()=>{let a=i.map(e=>o.createContext(e));return function(i){let n=i?.[e]||a;return o.useMemo(()=>({[`__scope${e}`]:{...i,[e]:n}}),[i,n])}};return t.scopeName=e,[function(a,t){let l=o.createContext(t),r=i.length;function c(a){let{scope:i,children:t,...c}=a,s=i?.[e][r]||l,m=o.useMemo(()=>c,Object.values(c));return(0,n.jsx)(s.Provider,{value:m,children:t})}return i=[...i,t],c.displayName=a+"Provider",[c,function(i,n){let c=n?.[e][r]||l,s=o.useContext(c);if(s)return s;if(void 0!==t)return t;throw Error(`\`${i}\` must be used within \`${a}\``)}]},function(...e){let a=e[0];if(1===e.length)return a;let i=()=>{let i=e.map(e=>({useScope:e(),scopeName:e.scopeName}));return function(e){let n=i.reduce((a,{useScope:i,scopeName:o})=>{let n=i(e)[`__scope${o}`];return{...a,...n}},{});return o.useMemo(()=>({[`__scope${a.scopeName}`]:n}),[n])}};return i.scopeName=a.scopeName,i}(t,...a)]}},98958:(e,a,i)=>{"use strict";i.d(a,{Dx:()=>ei,VY:()=>ea,aV:()=>ee,dk:()=>eo,fC:()=>Y,h_:()=>Q,x8:()=>en,xz:()=>X});var o=i(17577),n=i(82561),t=i(48051),l=i(93095),r=i(88957),c=i(52067),s=i(825),m=i(10441),d=i(83078),f=i(9815),p=i(45226),u=i(80699),h=i(58260),g=i(35664),b=i(34214),v=i(10326),y="Dialog",[k,w]=(0,l.b)(y),[S,R]=k(y),M=e=>{let{__scopeDialog:a,children:i,open:n,defaultOpen:t,onOpenChange:l,modal:s=!0}=e,m=o.useRef(null),d=o.useRef(null),[f=!1,p]=(0,c.T)({prop:n,defaultProp:t,onChange:l});return(0,v.jsx)(S,{scope:a,triggerRef:m,contentRef:d,contentId:(0,r.M)(),titleId:(0,r.M)(),descriptionId:(0,r.M)(),open:f,onOpenChange:p,onOpenToggle:o.useCallback(()=>p(e=>!e),[p]),modal:s,children:i})};M.displayName=y;var A="DialogTrigger",_=o.forwardRef((e,a)=>{let{__scopeDialog:i,...o}=e,l=R(A,i),r=(0,t.e)(a,l.triggerRef);return(0,v.jsx)(p.WV.button,{type:"button","aria-haspopup":"dialog","aria-expanded":l.open,"aria-controls":l.contentId,"data-state":H(l.open),...o,ref:r,onClick:(0,n.M)(e.onClick,l.onOpenToggle)})});_.displayName=A;var T="DialogPortal",[E,N]=k(T,{forceMount:void 0}),j=e=>{let{__scopeDialog:a,forceMount:i,children:n,container:t}=e,l=R(T,a);return(0,v.jsx)(E,{scope:a,forceMount:i,children:o.Children.map(n,e=>(0,v.jsx)(f.z,{present:i||l.open,children:(0,v.jsx)(d.h,{asChild:!0,container:t,children:e})}))})};j.displayName=T;var C="DialogOverlay",P=o.forwardRef((e,a)=>{let i=N(C,e.__scopeDialog),{forceMount:o=i.forceMount,...n}=e,t=R(C,e.__scopeDialog);return t.modal?(0,v.jsx)(f.z,{present:o||t.open,children:(0,v.jsx)(D,{...n,ref:a})}):null});P.displayName=C;var D=o.forwardRef((e,a)=>{let{__scopeDialog:i,...o}=e,n=R(C,i);return(0,v.jsx)(h.Z,{as:b.g7,allowPinchZoom:!0,shards:[n.contentRef],children:(0,v.jsx)(p.WV.div,{"data-state":H(n.open),...o,ref:a,style:{pointerEvents:"auto",...o.style}})})}),B="DialogContent",x=o.forwardRef((e,a)=>{let i=N(B,e.__scopeDialog),{forceMount:o=i.forceMount,...n}=e,t=R(B,e.__scopeDialog);return(0,v.jsx)(f.z,{present:o||t.open,children:t.modal?(0,v.jsx)(I,{...n,ref:a}):(0,v.jsx)(O,{...n,ref:a})})});x.displayName=B;var I=o.forwardRef((e,a)=>{let i=R(B,e.__scopeDialog),l=o.useRef(null),r=(0,t.e)(a,i.contentRef,l);return o.useEffect(()=>{let e=l.current;if(e)return(0,g.Ry)(e)},[]),(0,v.jsx)(z,{...e,ref:r,trapFocus:i.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:(0,n.M)(e.onCloseAutoFocus,e=>{e.preventDefault(),i.triggerRef.current?.focus()}),onPointerDownOutside:(0,n.M)(e.onPointerDownOutside,e=>{let a=e.detail.originalEvent,i=0===a.button&&!0===a.ctrlKey;(2===a.button||i)&&e.preventDefault()}),onFocusOutside:(0,n.M)(e.onFocusOutside,e=>e.preventDefault())})}),O=o.forwardRef((e,a)=>{let i=R(B,e.__scopeDialog),n=o.useRef(!1),t=o.useRef(!1);return(0,v.jsx)(z,{...e,ref:a,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:a=>{e.onCloseAutoFocus?.(a),a.defaultPrevented||(n.current||i.triggerRef.current?.focus(),a.preventDefault()),n.current=!1,t.current=!1},onInteractOutside:a=>{e.onInteractOutside?.(a),a.defaultPrevented||(n.current=!0,"pointerdown"!==a.detail.originalEvent.type||(t.current=!0));let o=a.target;i.triggerRef.current?.contains(o)&&a.preventDefault(),"focusin"===a.detail.originalEvent.type&&t.current&&a.preventDefault()}})}),z=o.forwardRef((e,a)=>{let{__scopeDialog:i,trapFocus:n,onOpenAutoFocus:l,onCloseAutoFocus:r,...c}=e,d=R(B,i),f=o.useRef(null),p=(0,t.e)(a,f);return(0,u.EW)(),(0,v.jsxs)(v.Fragment,{children:[(0,v.jsx)(m.M,{asChild:!0,loop:!0,trapped:n,onMountAutoFocus:l,onUnmountAutoFocus:r,children:(0,v.jsx)(s.XB,{role:"dialog",id:d.contentId,"aria-describedby":d.descriptionId,"aria-labelledby":d.titleId,"data-state":H(d.open),...c,ref:p,onDismiss:()=>d.onOpenChange(!1)})}),(0,v.jsxs)(v.Fragment,{children:[(0,v.jsx)(J,{titleId:d.titleId}),(0,v.jsx)(Z,{contentRef:f,descriptionId:d.descriptionId})]})]})}),L="DialogTitle",K=o.forwardRef((e,a)=>{let{__scopeDialog:i,...o}=e,n=R(L,i);return(0,v.jsx)(p.WV.h2,{id:n.titleId,...o,ref:a})});K.displayName=L;var G="DialogDescription",V=o.forwardRef((e,a)=>{let{__scopeDialog:i,...o}=e,n=R(G,i);return(0,v.jsx)(p.WV.p,{id:n.descriptionId,...o,ref:a})});V.displayName=G;var F="DialogClose",U=o.forwardRef((e,a)=>{let{__scopeDialog:i,...o}=e,t=R(F,i);return(0,v.jsx)(p.WV.button,{type:"button",...o,ref:a,onClick:(0,n.M)(e.onClick,()=>t.onOpenChange(!1))})});function H(e){return e?"open":"closed"}U.displayName=F;var q="DialogTitleWarning",[$,W]=(0,l.k)(q,{contentName:B,titleName:L,docsSlug:"dialog"}),J=({titleId:e})=>{let a=W(q),i=`\`${a.contentName}\` requires a \`${a.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${a.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${a.docsSlug}`;return o.useEffect(()=>{e&&!document.getElementById(e)&&console.error(i)},[i,e]),null},Z=({contentRef:e,descriptionId:a})=>{let i=W("DialogDescriptionWarning"),n=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${i.contentName}}.`;return o.useEffect(()=>{let i=e.current?.getAttribute("aria-describedby");a&&i&&!document.getElementById(a)&&console.warn(n)},[n,e,a]),null},Y=M,X=_,Q=j,ee=P,ea=x,ei=K,eo=V,en=U},17124:(e,a,i)=>{"use strict";i.d(a,{gm:()=>t});var o=i(17577);i(10326);var n=o.createContext(void 0);function t(e){let a=o.useContext(n);return e||a||"ltr"}},825:(e,a,i)=>{"use strict";i.d(a,{XB:()=>f});var o,n=i(17577),t=i(82561),l=i(45226),r=i(48051),c=i(55049),s=i(10326),m="dismissableLayer.update",d=n.createContext({layers:new Set,layersWithOutsidePointerEventsDisabled:new Set,branches:new Set}),f=n.forwardRef((e,a)=>{let{disableOutsidePointerEvents:i=!1,onEscapeKeyDown:f,onPointerDownOutside:h,onFocusOutside:g,onInteractOutside:b,onDismiss:v,...y}=e,k=n.useContext(d),[w,S]=n.useState(null),R=w?.ownerDocument??globalThis?.document,[,M]=n.useState({}),A=(0,r.e)(a,e=>S(e)),_=Array.from(k.layers),[T]=[...k.layersWithOutsidePointerEventsDisabled].slice(-1),E=_.indexOf(T),N=w?_.indexOf(w):-1,j=k.layersWithOutsidePointerEventsDisabled.size>0,C=N>=E,P=function(e,a=globalThis?.document){let i=(0,c.W)(e),o=n.useRef(!1),t=n.useRef(()=>{});return n.useEffect(()=>{let e=e=>{if(e.target&&!o.current){let o=function(){u("dismissableLayer.pointerDownOutside",i,n,{discrete:!0})},n={originalEvent:e};"touch"===e.pointerType?(a.removeEventListener("click",t.current),t.current=o,a.addEventListener("click",t.current,{once:!0})):o()}else a.removeEventListener("click",t.current);o.current=!1},n=window.setTimeout(()=>{a.addEventListener("pointerdown",e)},0);return()=>{window.clearTimeout(n),a.removeEventListener("pointerdown",e),a.removeEventListener("click",t.current)}},[a,i]),{onPointerDownCapture:()=>o.current=!0}}(e=>{let a=e.target,i=[...k.branches].some(e=>e.contains(a));!C||i||(h?.(e),b?.(e),e.defaultPrevented||v?.())},R),D=function(e,a=globalThis?.document){let i=(0,c.W)(e),o=n.useRef(!1);return n.useEffect(()=>{let e=e=>{e.target&&!o.current&&u("dismissableLayer.focusOutside",i,{originalEvent:e},{discrete:!1})};return a.addEventListener("focusin",e),()=>a.removeEventListener("focusin",e)},[a,i]),{onFocusCapture:()=>o.current=!0,onBlurCapture:()=>o.current=!1}}(e=>{let a=e.target;[...k.branches].some(e=>e.contains(a))||(g?.(e),b?.(e),e.defaultPrevented||v?.())},R);return function(e,a=globalThis?.document){let i=(0,c.W)(e);n.useEffect(()=>{let e=e=>{"Escape"===e.key&&i(e)};return a.addEventListener("keydown",e,{capture:!0}),()=>a.removeEventListener("keydown",e,{capture:!0})},[i,a])}(e=>{N!==k.layers.size-1||(f?.(e),!e.defaultPrevented&&v&&(e.preventDefault(),v()))},R),n.useEffect(()=>{if(w)return i&&(0===k.layersWithOutsidePointerEventsDisabled.size&&(o=R.body.style.pointerEvents,R.body.style.pointerEvents="none"),k.layersWithOutsidePointerEventsDisabled.add(w)),k.layers.add(w),p(),()=>{i&&1===k.layersWithOutsidePointerEventsDisabled.size&&(R.body.style.pointerEvents=o)}},[w,R,i,k]),n.useEffect(()=>()=>{w&&(k.layers.delete(w),k.layersWithOutsidePointerEventsDisabled.delete(w),p())},[w,k]),n.useEffect(()=>{let e=()=>M({});return document.addEventListener(m,e),()=>document.removeEventListener(m,e)},[]),(0,s.jsx)(l.WV.div,{...y,ref:A,style:{pointerEvents:j?C?"auto":"none":void 0,...e.style},onFocusCapture:(0,t.M)(e.onFocusCapture,D.onFocusCapture),onBlurCapture:(0,t.M)(e.onBlurCapture,D.onBlurCapture),onPointerDownCapture:(0,t.M)(e.onPointerDownCapture,P.onPointerDownCapture)})});function p(){let e=new CustomEvent(m);document.dispatchEvent(e)}function u(e,a,i,{discrete:o}){let n=i.originalEvent.target,t=new CustomEvent(e,{bubbles:!1,cancelable:!0,detail:i});a&&n.addEventListener(e,a,{once:!0}),o?(0,l.jH)(n,t):n.dispatchEvent(t)}f.displayName="DismissableLayer",n.forwardRef((e,a)=>{let i=n.useContext(d),o=n.useRef(null),t=(0,r.e)(a,o);return n.useEffect(()=>{let e=o.current;if(e)return i.branches.add(e),()=>{i.branches.delete(e)}},[i.branches]),(0,s.jsx)(l.WV.div,{...e,ref:t})}).displayName="DismissableLayerBranch"},50269:(e,a,i)=>{"use strict";i.d(a,{oC:()=>ad,VY:()=>ar,ZA:()=>ac,ck:()=>am,wU:()=>au,__:()=>as,Uv:()=>al,Ee:()=>af,Rk:()=>ap,fC:()=>an,Z0:()=>ah,Tr:()=>ag,tu:()=>av,fF:()=>ab,xz:()=>at});var o=i(17577),n=i(82561),t=i(48051),l=i(93095),r=i(52067),c=i(45226),s=i(70545),m=i(17124),d=i(825),f=i(80699),p=i(10441),u=i(88957),h=i(9625),g=i(83078),b=i(9815),v=i(55049),y=i(10326),k="rovingFocusGroup.onEntryFocus",w={bubbles:!1,cancelable:!0},S="RovingFocusGroup",[R,M,A]=(0,s.B)(S),[_,T]=(0,l.b)(S,[A]),[E,N]=_(S),j=o.forwardRef((e,a)=>(0,y.jsx)(R.Provider,{scope:e.__scopeRovingFocusGroup,children:(0,y.jsx)(R.Slot,{scope:e.__scopeRovingFocusGroup,children:(0,y.jsx)(C,{...e,ref:a})})}));j.displayName=S;var C=o.forwardRef((e,a)=>{let{__scopeRovingFocusGroup:i,orientation:l,loop:s=!1,dir:d,currentTabStopId:f,defaultCurrentTabStopId:p,onCurrentTabStopIdChange:u,onEntryFocus:h,preventScrollOnEntryFocus:g=!1,...b}=e,S=o.useRef(null),R=(0,t.e)(a,S),A=(0,m.gm)(d),[_=null,T]=(0,r.T)({prop:f,defaultProp:p,onChange:u}),[N,j]=o.useState(!1),C=(0,v.W)(h),P=M(i),D=o.useRef(!1),[B,I]=o.useState(0);return o.useEffect(()=>{let e=S.current;if(e)return e.addEventListener(k,C),()=>e.removeEventListener(k,C)},[C]),(0,y.jsx)(E,{scope:i,orientation:l,dir:A,loop:s,currentTabStopId:_,onItemFocus:o.useCallback(e=>T(e),[T]),onItemShiftTab:o.useCallback(()=>j(!0),[]),onFocusableItemAdd:o.useCallback(()=>I(e=>e+1),[]),onFocusableItemRemove:o.useCallback(()=>I(e=>e-1),[]),children:(0,y.jsx)(c.WV.div,{tabIndex:N||0===B?-1:0,"data-orientation":l,...b,ref:R,style:{outline:"none",...e.style},onMouseDown:(0,n.M)(e.onMouseDown,()=>{D.current=!0}),onFocus:(0,n.M)(e.onFocus,e=>{let a=!D.current;if(e.target===e.currentTarget&&a&&!N){let a=new CustomEvent(k,w);if(e.currentTarget.dispatchEvent(a),!a.defaultPrevented){let e=P().filter(e=>e.focusable);x([e.find(e=>e.active),e.find(e=>e.id===_),...e].filter(Boolean).map(e=>e.ref.current),g)}}D.current=!1}),onBlur:(0,n.M)(e.onBlur,()=>j(!1))})})}),P="RovingFocusGroupItem",D=o.forwardRef((e,a)=>{let{__scopeRovingFocusGroup:i,focusable:t=!0,active:l=!1,tabStopId:r,...s}=e,m=(0,u.M)(),d=r||m,f=N(P,i),p=f.currentTabStopId===d,h=M(i),{onFocusableItemAdd:g,onFocusableItemRemove:b}=f;return o.useEffect(()=>{if(t)return g(),()=>b()},[t,g,b]),(0,y.jsx)(R.ItemSlot,{scope:i,id:d,focusable:t,active:l,children:(0,y.jsx)(c.WV.span,{tabIndex:p?0:-1,"data-orientation":f.orientation,...s,ref:a,onMouseDown:(0,n.M)(e.onMouseDown,e=>{t?f.onItemFocus(d):e.preventDefault()}),onFocus:(0,n.M)(e.onFocus,()=>f.onItemFocus(d)),onKeyDown:(0,n.M)(e.onKeyDown,e=>{if("Tab"===e.key&&e.shiftKey){f.onItemShiftTab();return}if(e.target!==e.currentTarget)return;let a=function(e,a,i){var o;let n=(o=e.key,"rtl"!==i?o:"ArrowLeft"===o?"ArrowRight":"ArrowRight"===o?"ArrowLeft":o);if(!("vertical"===a&&["ArrowLeft","ArrowRight"].includes(n))&&!("horizontal"===a&&["ArrowUp","ArrowDown"].includes(n)))return B[n]}(e,f.orientation,f.dir);if(void 0!==a){if(e.metaKey||e.ctrlKey||e.altKey||e.shiftKey)return;e.preventDefault();let i=h().filter(e=>e.focusable).map(e=>e.ref.current);if("last"===a)i.reverse();else if("prev"===a||"next"===a){"prev"===a&&i.reverse();let o=i.indexOf(e.currentTarget);i=f.loop?function(e,a){return e.map((i,o)=>e[(a+o)%e.length])}(i,o+1):i.slice(o+1)}setTimeout(()=>x(i))}})})})});D.displayName=P;var B={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"};function x(e,a=!1){let i=document.activeElement;for(let o of e)if(o===i||(o.focus({preventScroll:a}),document.activeElement!==i))return}var I=i(34214),O=i(35664),z=i(58260),L=["Enter"," "],K=["ArrowUp","PageDown","End"],G=["ArrowDown","PageUp","Home",...K],V={ltr:[...L,"ArrowRight"],rtl:[...L,"ArrowLeft"]},F={ltr:["ArrowLeft"],rtl:["ArrowRight"]},U="Menu",[H,q,$]=(0,s.B)(U),[W,J]=(0,l.b)(U,[$,h.D7,T]),Z=(0,h.D7)(),Y=T(),[X,Q]=W(U),[ee,ea]=W(U),ei=e=>{let{__scopeMenu:a,open:i=!1,children:n,dir:t,onOpenChange:l,modal:r=!0}=e,c=Z(a),[s,d]=o.useState(null),f=o.useRef(!1),p=(0,v.W)(l),u=(0,m.gm)(t);return o.useEffect(()=>{let e=()=>{f.current=!0,document.addEventListener("pointerdown",a,{capture:!0,once:!0}),document.addEventListener("pointermove",a,{capture:!0,once:!0})},a=()=>f.current=!1;return document.addEventListener("keydown",e,{capture:!0}),()=>{document.removeEventListener("keydown",e,{capture:!0}),document.removeEventListener("pointerdown",a,{capture:!0}),document.removeEventListener("pointermove",a,{capture:!0})}},[]),(0,y.jsx)(h.fC,{...c,children:(0,y.jsx)(X,{scope:a,open:i,onOpenChange:p,content:s,onContentChange:d,children:(0,y.jsx)(ee,{scope:a,onClose:o.useCallback(()=>p(!1),[p]),isUsingKeyboardRef:f,dir:u,modal:r,children:n})})})};ei.displayName=U;var eo=o.forwardRef((e,a)=>{let{__scopeMenu:i,...o}=e,n=Z(i);return(0,y.jsx)(h.ee,{...n,...o,ref:a})});eo.displayName="MenuAnchor";var en="MenuPortal",[et,el]=W(en,{forceMount:void 0}),er=e=>{let{__scopeMenu:a,forceMount:i,children:o,container:n}=e,t=Q(en,a);return(0,y.jsx)(et,{scope:a,forceMount:i,children:(0,y.jsx)(b.z,{present:i||t.open,children:(0,y.jsx)(g.h,{asChild:!0,container:n,children:o})})})};er.displayName=en;var ec="MenuContent",[es,em]=W(ec),ed=o.forwardRef((e,a)=>{let i=el(ec,e.__scopeMenu),{forceMount:o=i.forceMount,...n}=e,t=Q(ec,e.__scopeMenu),l=ea(ec,e.__scopeMenu);return(0,y.jsx)(H.Provider,{scope:e.__scopeMenu,children:(0,y.jsx)(b.z,{present:o||t.open,children:(0,y.jsx)(H.Slot,{scope:e.__scopeMenu,children:l.modal?(0,y.jsx)(ef,{...n,ref:a}):(0,y.jsx)(ep,{...n,ref:a})})})})}),ef=o.forwardRef((e,a)=>{let i=Q(ec,e.__scopeMenu),l=o.useRef(null),r=(0,t.e)(a,l);return o.useEffect(()=>{let e=l.current;if(e)return(0,O.Ry)(e)},[]),(0,y.jsx)(eu,{...e,ref:r,trapFocus:i.open,disableOutsidePointerEvents:i.open,disableOutsideScroll:!0,onFocusOutside:(0,n.M)(e.onFocusOutside,e=>e.preventDefault(),{checkForDefaultPrevented:!1}),onDismiss:()=>i.onOpenChange(!1)})}),ep=o.forwardRef((e,a)=>{let i=Q(ec,e.__scopeMenu);return(0,y.jsx)(eu,{...e,ref:a,trapFocus:!1,disableOutsidePointerEvents:!1,disableOutsideScroll:!1,onDismiss:()=>i.onOpenChange(!1)})}),eu=o.forwardRef((e,a)=>{let{__scopeMenu:i,loop:l=!1,trapFocus:r,onOpenAutoFocus:c,onCloseAutoFocus:s,disableOutsidePointerEvents:m,onEntryFocus:u,onEscapeKeyDown:g,onPointerDownOutside:b,onFocusOutside:v,onInteractOutside:k,onDismiss:w,disableOutsideScroll:S,...R}=e,M=Q(ec,i),A=ea(ec,i),_=Z(i),T=Y(i),E=q(i),[N,C]=o.useState(null),P=o.useRef(null),D=(0,t.e)(a,P,M.onContentChange),B=o.useRef(0),x=o.useRef(""),O=o.useRef(0),L=o.useRef(null),V=o.useRef("right"),F=o.useRef(0),U=S?z.Z:o.Fragment,H=S?{as:I.g7,allowPinchZoom:!0}:void 0,$=e=>{let a=x.current+e,i=E().filter(e=>!e.disabled),o=document.activeElement,n=i.find(e=>e.ref.current===o)?.textValue,t=function(e,a,i){var o;let n=a.length>1&&Array.from(a).every(e=>e===a[0])?a[0]:a,t=(o=Math.max(i?e.indexOf(i):-1,0),e.map((a,i)=>e[(o+i)%e.length]));1===n.length&&(t=t.filter(e=>e!==i));let l=t.find(e=>e.toLowerCase().startsWith(n.toLowerCase()));return l!==i?l:void 0}(i.map(e=>e.textValue),a,n),l=i.find(e=>e.textValue===t)?.ref.current;(function e(a){x.current=a,window.clearTimeout(B.current),""!==a&&(B.current=window.setTimeout(()=>e(""),1e3))})(a),l&&setTimeout(()=>l.focus())};o.useEffect(()=>()=>window.clearTimeout(B.current),[]),(0,f.EW)();let W=o.useCallback(e=>V.current===L.current?.side&&function(e,a){return!!a&&function(e,a){let{x:i,y:o}=e,n=!1;for(let e=0,t=a.length-1;e<a.length;t=e++){let l=a[e].x,r=a[e].y,c=a[t].x,s=a[t].y;r>o!=s>o&&i<(c-l)*(o-r)/(s-r)+l&&(n=!n)}return n}({x:e.clientX,y:e.clientY},a)}(e,L.current?.area),[]);return(0,y.jsx)(es,{scope:i,searchRef:x,onItemEnter:o.useCallback(e=>{W(e)&&e.preventDefault()},[W]),onItemLeave:o.useCallback(e=>{W(e)||(P.current?.focus(),C(null))},[W]),onTriggerLeave:o.useCallback(e=>{W(e)&&e.preventDefault()},[W]),pointerGraceTimerRef:O,onPointerGraceIntentChange:o.useCallback(e=>{L.current=e},[]),children:(0,y.jsx)(U,{...H,children:(0,y.jsx)(p.M,{asChild:!0,trapped:r,onMountAutoFocus:(0,n.M)(c,e=>{e.preventDefault(),P.current?.focus({preventScroll:!0})}),onUnmountAutoFocus:s,children:(0,y.jsx)(d.XB,{asChild:!0,disableOutsidePointerEvents:m,onEscapeKeyDown:g,onPointerDownOutside:b,onFocusOutside:v,onInteractOutside:k,onDismiss:w,children:(0,y.jsx)(j,{asChild:!0,...T,dir:A.dir,orientation:"vertical",loop:l,currentTabStopId:N,onCurrentTabStopIdChange:C,onEntryFocus:(0,n.M)(u,e=>{A.isUsingKeyboardRef.current||e.preventDefault()}),preventScrollOnEntryFocus:!0,children:(0,y.jsx)(h.VY,{role:"menu","aria-orientation":"vertical","data-state":eV(M.open),"data-radix-menu-content":"",dir:A.dir,..._,...R,ref:D,style:{outline:"none",...R.style},onKeyDown:(0,n.M)(R.onKeyDown,e=>{let a=e.target.closest("[data-radix-menu-content]")===e.currentTarget,i=e.ctrlKey||e.altKey||e.metaKey,o=1===e.key.length;a&&("Tab"===e.key&&e.preventDefault(),!i&&o&&$(e.key));let n=P.current;if(e.target!==n||!G.includes(e.key))return;e.preventDefault();let t=E().filter(e=>!e.disabled).map(e=>e.ref.current);K.includes(e.key)&&t.reverse(),function(e){let a=document.activeElement;for(let i of e)if(i===a||(i.focus(),document.activeElement!==a))return}(t)}),onBlur:(0,n.M)(e.onBlur,e=>{e.currentTarget.contains(e.target)||(window.clearTimeout(B.current),x.current="")}),onPointerMove:(0,n.M)(e.onPointerMove,eH(e=>{let a=e.target,i=F.current!==e.clientX;if(e.currentTarget.contains(a)&&i){let a=e.clientX>F.current?"right":"left";V.current=a,F.current=e.clientX}}))})})})})})})});ed.displayName=ec;var eh=o.forwardRef((e,a)=>{let{__scopeMenu:i,...o}=e;return(0,y.jsx)(c.WV.div,{role:"group",...o,ref:a})});eh.displayName="MenuGroup";var eg=o.forwardRef((e,a)=>{let{__scopeMenu:i,...o}=e;return(0,y.jsx)(c.WV.div,{...o,ref:a})});eg.displayName="MenuLabel";var eb="MenuItem",ev="menu.itemSelect",ey=o.forwardRef((e,a)=>{let{disabled:i=!1,onSelect:l,...r}=e,s=o.useRef(null),m=ea(eb,e.__scopeMenu),d=em(eb,e.__scopeMenu),f=(0,t.e)(a,s),p=o.useRef(!1);return(0,y.jsx)(ek,{...r,ref:f,disabled:i,onClick:(0,n.M)(e.onClick,()=>{let e=s.current;if(!i&&e){let a=new CustomEvent(ev,{bubbles:!0,cancelable:!0});e.addEventListener(ev,e=>l?.(e),{once:!0}),(0,c.jH)(e,a),a.defaultPrevented?p.current=!1:m.onClose()}}),onPointerDown:a=>{e.onPointerDown?.(a),p.current=!0},onPointerUp:(0,n.M)(e.onPointerUp,e=>{p.current||e.currentTarget?.click()}),onKeyDown:(0,n.M)(e.onKeyDown,e=>{let a=""!==d.searchRef.current;!i&&(!a||" "!==e.key)&&L.includes(e.key)&&(e.currentTarget.click(),e.preventDefault())})})});ey.displayName=eb;var ek=o.forwardRef((e,a)=>{let{__scopeMenu:i,disabled:l=!1,textValue:r,...s}=e,m=em(eb,i),d=Y(i),f=o.useRef(null),p=(0,t.e)(a,f),[u,h]=o.useState(!1),[g,b]=o.useState("");return o.useEffect(()=>{let e=f.current;e&&b((e.textContent??"").trim())},[s.children]),(0,y.jsx)(H.ItemSlot,{scope:i,disabled:l,textValue:r??g,children:(0,y.jsx)(D,{asChild:!0,...d,focusable:!l,children:(0,y.jsx)(c.WV.div,{role:"menuitem","data-highlighted":u?"":void 0,"aria-disabled":l||void 0,"data-disabled":l?"":void 0,...s,ref:p,onPointerMove:(0,n.M)(e.onPointerMove,eH(e=>{l?m.onItemLeave(e):(m.onItemEnter(e),e.defaultPrevented||e.currentTarget.focus({preventScroll:!0}))})),onPointerLeave:(0,n.M)(e.onPointerLeave,eH(e=>m.onItemLeave(e))),onFocus:(0,n.M)(e.onFocus,()=>h(!0)),onBlur:(0,n.M)(e.onBlur,()=>h(!1))})})})}),ew=o.forwardRef((e,a)=>{let{checked:i=!1,onCheckedChange:o,...t}=e;return(0,y.jsx)(eN,{scope:e.__scopeMenu,checked:i,children:(0,y.jsx)(ey,{role:"menuitemcheckbox","aria-checked":eF(i)?"mixed":i,...t,ref:a,"data-state":eU(i),onSelect:(0,n.M)(t.onSelect,()=>o?.(!!eF(i)||!i),{checkForDefaultPrevented:!1})})})});ew.displayName="MenuCheckboxItem";var eS="MenuRadioGroup",[eR,eM]=W(eS,{value:void 0,onValueChange:()=>{}}),eA=o.forwardRef((e,a)=>{let{value:i,onValueChange:o,...n}=e,t=(0,v.W)(o);return(0,y.jsx)(eR,{scope:e.__scopeMenu,value:i,onValueChange:t,children:(0,y.jsx)(eh,{...n,ref:a})})});eA.displayName=eS;var e_="MenuRadioItem",eT=o.forwardRef((e,a)=>{let{value:i,...o}=e,t=eM(e_,e.__scopeMenu),l=i===t.value;return(0,y.jsx)(eN,{scope:e.__scopeMenu,checked:l,children:(0,y.jsx)(ey,{role:"menuitemradio","aria-checked":l,...o,ref:a,"data-state":eU(l),onSelect:(0,n.M)(o.onSelect,()=>t.onValueChange?.(i),{checkForDefaultPrevented:!1})})})});eT.displayName=e_;var eE="MenuItemIndicator",[eN,ej]=W(eE,{checked:!1}),eC=o.forwardRef((e,a)=>{let{__scopeMenu:i,forceMount:o,...n}=e,t=ej(eE,i);return(0,y.jsx)(b.z,{present:o||eF(t.checked)||!0===t.checked,children:(0,y.jsx)(c.WV.span,{...n,ref:a,"data-state":eU(t.checked)})})});eC.displayName=eE;var eP=o.forwardRef((e,a)=>{let{__scopeMenu:i,...o}=e;return(0,y.jsx)(c.WV.div,{role:"separator","aria-orientation":"horizontal",...o,ref:a})});eP.displayName="MenuSeparator";var eD=o.forwardRef((e,a)=>{let{__scopeMenu:i,...o}=e,n=Z(i);return(0,y.jsx)(h.Eh,{...n,...o,ref:a})});eD.displayName="MenuArrow";var eB="MenuSub",[ex,eI]=W(eB),eO=e=>{let{__scopeMenu:a,children:i,open:n=!1,onOpenChange:t}=e,l=Q(eB,a),r=Z(a),[c,s]=o.useState(null),[m,d]=o.useState(null),f=(0,v.W)(t);return o.useEffect(()=>(!1===l.open&&f(!1),()=>f(!1)),[l.open,f]),(0,y.jsx)(h.fC,{...r,children:(0,y.jsx)(X,{scope:a,open:n,onOpenChange:f,content:m,onContentChange:d,children:(0,y.jsx)(ex,{scope:a,contentId:(0,u.M)(),triggerId:(0,u.M)(),trigger:c,onTriggerChange:s,children:i})})})};eO.displayName=eB;var ez="MenuSubTrigger",eL=o.forwardRef((e,a)=>{let i=Q(ez,e.__scopeMenu),l=ea(ez,e.__scopeMenu),r=eI(ez,e.__scopeMenu),c=em(ez,e.__scopeMenu),s=o.useRef(null),{pointerGraceTimerRef:m,onPointerGraceIntentChange:d}=c,f={__scopeMenu:e.__scopeMenu},p=o.useCallback(()=>{s.current&&window.clearTimeout(s.current),s.current=null},[]);return o.useEffect(()=>p,[p]),o.useEffect(()=>{let e=m.current;return()=>{window.clearTimeout(e),d(null)}},[m,d]),(0,y.jsx)(eo,{asChild:!0,...f,children:(0,y.jsx)(ek,{id:r.triggerId,"aria-haspopup":"menu","aria-expanded":i.open,"aria-controls":r.contentId,"data-state":eV(i.open),...e,ref:(0,t.F)(a,r.onTriggerChange),onClick:a=>{e.onClick?.(a),e.disabled||a.defaultPrevented||(a.currentTarget.focus(),i.open||i.onOpenChange(!0))},onPointerMove:(0,n.M)(e.onPointerMove,eH(a=>{c.onItemEnter(a),a.defaultPrevented||e.disabled||i.open||s.current||(c.onPointerGraceIntentChange(null),s.current=window.setTimeout(()=>{i.onOpenChange(!0),p()},100))})),onPointerLeave:(0,n.M)(e.onPointerLeave,eH(e=>{p();let a=i.content?.getBoundingClientRect();if(a){let o=i.content?.dataset.side,n="right"===o,t=a[n?"left":"right"],l=a[n?"right":"left"];c.onPointerGraceIntentChange({area:[{x:e.clientX+(n?-5:5),y:e.clientY},{x:t,y:a.top},{x:l,y:a.top},{x:l,y:a.bottom},{x:t,y:a.bottom}],side:o}),window.clearTimeout(m.current),m.current=window.setTimeout(()=>c.onPointerGraceIntentChange(null),300)}else{if(c.onTriggerLeave(e),e.defaultPrevented)return;c.onPointerGraceIntentChange(null)}})),onKeyDown:(0,n.M)(e.onKeyDown,a=>{let o=""!==c.searchRef.current;!e.disabled&&(!o||" "!==a.key)&&V[l.dir].includes(a.key)&&(i.onOpenChange(!0),i.content?.focus(),a.preventDefault())})})})});eL.displayName=ez;var eK="MenuSubContent",eG=o.forwardRef((e,a)=>{let i=el(ec,e.__scopeMenu),{forceMount:l=i.forceMount,...r}=e,c=Q(ec,e.__scopeMenu),s=ea(ec,e.__scopeMenu),m=eI(eK,e.__scopeMenu),d=o.useRef(null),f=(0,t.e)(a,d);return(0,y.jsx)(H.Provider,{scope:e.__scopeMenu,children:(0,y.jsx)(b.z,{present:l||c.open,children:(0,y.jsx)(H.Slot,{scope:e.__scopeMenu,children:(0,y.jsx)(eu,{id:m.contentId,"aria-labelledby":m.triggerId,...r,ref:f,align:"start",side:"rtl"===s.dir?"left":"right",disableOutsidePointerEvents:!1,disableOutsideScroll:!1,trapFocus:!1,onOpenAutoFocus:e=>{s.isUsingKeyboardRef.current&&d.current?.focus(),e.preventDefault()},onCloseAutoFocus:e=>e.preventDefault(),onFocusOutside:(0,n.M)(e.onFocusOutside,e=>{e.target!==m.trigger&&c.onOpenChange(!1)}),onEscapeKeyDown:(0,n.M)(e.onEscapeKeyDown,e=>{s.onClose(),e.preventDefault()}),onKeyDown:(0,n.M)(e.onKeyDown,e=>{let a=e.currentTarget.contains(e.target),i=F[s.dir].includes(e.key);a&&i&&(c.onOpenChange(!1),m.trigger?.focus(),e.preventDefault())})})})})})});function eV(e){return e?"open":"closed"}function eF(e){return"indeterminate"===e}function eU(e){return eF(e)?"indeterminate":e?"checked":"unchecked"}function eH(e){return a=>"mouse"===a.pointerType?e(a):void 0}eG.displayName=eK;var eq="DropdownMenu",[e$,eW]=(0,l.b)(eq,[J]),eJ=J(),[eZ,eY]=e$(eq),eX=e=>{let{__scopeDropdownMenu:a,children:i,dir:n,open:t,defaultOpen:l,onOpenChange:c,modal:s=!0}=e,m=eJ(a),d=o.useRef(null),[f=!1,p]=(0,r.T)({prop:t,defaultProp:l,onChange:c});return(0,y.jsx)(eZ,{scope:a,triggerId:(0,u.M)(),triggerRef:d,contentId:(0,u.M)(),open:f,onOpenChange:p,onOpenToggle:o.useCallback(()=>p(e=>!e),[p]),modal:s,children:(0,y.jsx)(ei,{...m,open:f,onOpenChange:p,dir:n,modal:s,children:i})})};eX.displayName=eq;var eQ="DropdownMenuTrigger",e1=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,disabled:o=!1,...l}=e,r=eY(eQ,i),s=eJ(i);return(0,y.jsx)(eo,{asChild:!0,...s,children:(0,y.jsx)(c.WV.button,{type:"button",id:r.triggerId,"aria-haspopup":"menu","aria-expanded":r.open,"aria-controls":r.open?r.contentId:void 0,"data-state":r.open?"open":"closed","data-disabled":o?"":void 0,disabled:o,...l,ref:(0,t.F)(a,r.triggerRef),onPointerDown:(0,n.M)(e.onPointerDown,e=>{o||0!==e.button||!1!==e.ctrlKey||(r.onOpenToggle(),r.open||e.preventDefault())}),onKeyDown:(0,n.M)(e.onKeyDown,e=>{!o&&(["Enter"," "].includes(e.key)&&r.onOpenToggle(),"ArrowDown"===e.key&&r.onOpenChange(!0),["Enter"," ","ArrowDown"].includes(e.key)&&e.preventDefault())})})})});e1.displayName=eQ;var e0=e=>{let{__scopeDropdownMenu:a,...i}=e,o=eJ(a);return(0,y.jsx)(er,{...o,...i})};e0.displayName="DropdownMenuPortal";var e2="DropdownMenuContent",e6=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...t}=e,l=eY(e2,i),r=eJ(i),c=o.useRef(!1);return(0,y.jsx)(ed,{id:l.contentId,"aria-labelledby":l.triggerId,...r,...t,ref:a,onCloseAutoFocus:(0,n.M)(e.onCloseAutoFocus,e=>{c.current||l.triggerRef.current?.focus(),c.current=!1,e.preventDefault()}),onInteractOutside:(0,n.M)(e.onInteractOutside,e=>{let a=e.detail.originalEvent,i=0===a.button&&!0===a.ctrlKey,o=2===a.button||i;(!l.modal||o)&&(c.current=!0)}),style:{...e.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});e6.displayName=e2;var e4=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eh,{...n,...o,ref:a})});e4.displayName="DropdownMenuGroup";var e3=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eg,{...n,...o,ref:a})});e3.displayName="DropdownMenuLabel";var e5=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(ey,{...n,...o,ref:a})});e5.displayName="DropdownMenuItem";var e9=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(ew,{...n,...o,ref:a})});e9.displayName="DropdownMenuCheckboxItem";var e8=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eA,{...n,...o,ref:a})});e8.displayName="DropdownMenuRadioGroup";var e7=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eT,{...n,...o,ref:a})});e7.displayName="DropdownMenuRadioItem";var ae=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eC,{...n,...o,ref:a})});ae.displayName="DropdownMenuItemIndicator";var aa=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eP,{...n,...o,ref:a})});aa.displayName="DropdownMenuSeparator",o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eD,{...n,...o,ref:a})}).displayName="DropdownMenuArrow";var ai=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eL,{...n,...o,ref:a})});ai.displayName="DropdownMenuSubTrigger";var ao=o.forwardRef((e,a)=>{let{__scopeDropdownMenu:i,...o}=e,n=eJ(i);return(0,y.jsx)(eG,{...n,...o,ref:a,style:{...e.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});ao.displayName="DropdownMenuSubContent";var an=eX,at=e1,al=e0,ar=e6,ac=e4,as=e3,am=e5,ad=e9,af=e8,ap=e7,au=ae,ah=aa,ag=e=>{let{__scopeDropdownMenu:a,children:i,open:o,onOpenChange:n,defaultOpen:t}=e,l=eJ(a),[c=!1,s]=(0,r.T)({prop:o,defaultProp:t,onChange:n});return(0,y.jsx)(eO,{...l,open:c,onOpenChange:s,children:i})},ab=ai,av=ao},80699:(e,a,i)=>{"use strict";i.d(a,{EW:()=>t});var o=i(17577),n=0;function t(){o.useEffect(()=>{let e=document.querySelectorAll("[data-radix-focus-guard]");return document.body.insertAdjacentElement("afterbegin",e[0]??l()),document.body.insertAdjacentElement("beforeend",e[1]??l()),n++,()=>{1===n&&document.querySelectorAll("[data-radix-focus-guard]").forEach(e=>e.remove()),n--}},[])}function l(){let e=document.createElement("span");return e.setAttribute("data-radix-focus-guard",""),e.tabIndex=0,e.style.cssText="outline: none; opacity: 0; position: fixed; pointer-events: none",e}},10441:(e,a,i)=>{"use strict";i.d(a,{M:()=>d});var o=i(17577),n=i(48051),t=i(45226),l=i(55049),r=i(10326),c="focusScope.autoFocusOnMount",s="focusScope.autoFocusOnUnmount",m={bubbles:!1,cancelable:!0},d=o.forwardRef((e,a)=>{let{loop:i=!1,trapped:d=!1,onMountAutoFocus:g,onUnmountAutoFocus:b,...v}=e,[y,k]=o.useState(null),w=(0,l.W)(g),S=(0,l.W)(b),R=o.useRef(null),M=(0,n.e)(a,e=>k(e)),A=o.useRef({paused:!1,pause(){this.paused=!0},resume(){this.paused=!1}}).current;o.useEffect(()=>{if(d){let e=function(e){if(A.paused||!y)return;let a=e.target;y.contains(a)?R.current=a:u(R.current,{select:!0})},a=function(e){if(A.paused||!y)return;let a=e.relatedTarget;null===a||y.contains(a)||u(R.current,{select:!0})};document.addEventListener("focusin",e),document.addEventListener("focusout",a);let i=new MutationObserver(function(e){if(document.activeElement===document.body)for(let a of e)a.removedNodes.length>0&&u(y)});return y&&i.observe(y,{childList:!0,subtree:!0}),()=>{document.removeEventListener("focusin",e),document.removeEventListener("focusout",a),i.disconnect()}}},[d,y,A.paused]),o.useEffect(()=>{if(y){h.add(A);let e=document.activeElement;if(!y.contains(e)){let a=new CustomEvent(c,m);y.addEventListener(c,w),y.dispatchEvent(a),a.defaultPrevented||(function(e,{select:a=!1}={}){let i=document.activeElement;for(let o of e)if(u(o,{select:a}),document.activeElement!==i)return}(f(y).filter(e=>"A"!==e.tagName),{select:!0}),document.activeElement===e&&u(y))}return()=>{y.removeEventListener(c,w),setTimeout(()=>{let a=new CustomEvent(s,m);y.addEventListener(s,S),y.dispatchEvent(a),a.defaultPrevented||u(e??document.body,{select:!0}),y.removeEventListener(s,S),h.remove(A)},0)}}},[y,w,S,A]);let _=o.useCallback(e=>{if(!i&&!d||A.paused)return;let a="Tab"===e.key&&!e.altKey&&!e.ctrlKey&&!e.metaKey,o=document.activeElement;if(a&&o){let a=e.currentTarget,[n,t]=function(e){let a=f(e);return[p(a,e),p(a.reverse(),e)]}(a);n&&t?e.shiftKey||o!==t?e.shiftKey&&o===n&&(e.preventDefault(),i&&u(t,{select:!0})):(e.preventDefault(),i&&u(n,{select:!0})):o===a&&e.preventDefault()}},[i,d,A.paused]);return(0,r.jsx)(t.WV.div,{tabIndex:-1,...v,ref:M,onKeyDown:_})});function f(e){let a=[],i=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,{acceptNode:e=>{let a="INPUT"===e.tagName&&"hidden"===e.type;return e.disabled||e.hidden||a?NodeFilter.FILTER_SKIP:e.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;i.nextNode();)a.push(i.currentNode);return a}function p(e,a){for(let i of e)if(!function(e,{upTo:a}){if("hidden"===getComputedStyle(e).visibility)return!0;for(;e&&(void 0===a||e!==a);){if("none"===getComputedStyle(e).display)return!0;e=e.parentElement}return!1}(i,{upTo:a}))return i}function u(e,{select:a=!1}={}){if(e&&e.focus){var i;let o=document.activeElement;e.focus({preventScroll:!0}),e!==o&&(i=e)instanceof HTMLInputElement&&"select"in i&&a&&e.select()}}d.displayName="FocusScope";var h=function(){let e=[];return{add(a){let i=e[0];a!==i&&i?.pause(),(e=g(e,a)).unshift(a)},remove(a){e=g(e,a),e[0]?.resume()}}}();function g(e,a){let i=[...e],o=i.indexOf(a);return -1!==o&&i.splice(o,1),i}},88957:(e,a,i)=>{"use strict";i.d(a,{M:()=>c});var o,n=i(17577),t=i(65819),l=(o||(o=i.t(n,2)))["useId".toString()]||(()=>void 0),r=0;function c(e){let[a,i]=n.useState(l());return(0,t.b)(()=>{e||i(e=>e??String(r++))},[e]),e||(a?`radix-${a}`:"")}},9625:(e,a,i)=>{"use strict";i.d(a,{ee:()=>eq,Eh:()=>eW,VY:()=>e$,fC:()=>eH,D7:()=>eN});var o=i(17577);let n=["top","right","bottom","left"],t=Math.min,l=Math.max,r=Math.round,c=Math.floor,s=e=>({x:e,y:e}),m={left:"right",right:"left",bottom:"top",top:"bottom"},d={start:"end",end:"start"};function f(e,a){return"function"==typeof e?e(a):e}function p(e){return e.split("-")[0]}function u(e){return e.split("-")[1]}function h(e){return"x"===e?"y":"x"}function g(e){return"y"===e?"height":"width"}function b(e){return["top","bottom"].includes(p(e))?"y":"x"}function v(e){return e.replace(/start|end/g,e=>d[e])}function y(e){return e.replace(/left|right|bottom|top/g,e=>m[e])}function k(e){return"number"!=typeof e?{top:0,right:0,bottom:0,left:0,...e}:{top:e,right:e,bottom:e,left:e}}function w(e){let{x:a,y:i,width:o,height:n}=e;return{width:o,height:n,top:i,left:a,right:a+o,bottom:i+n,x:a,y:i}}function S(e,a,i){let o,{reference:n,floating:t}=e,l=b(a),r=h(b(a)),c=g(r),s=p(a),m="y"===l,d=n.x+n.width/2-t.width/2,f=n.y+n.height/2-t.height/2,v=n[c]/2-t[c]/2;switch(s){case"top":o={x:d,y:n.y-t.height};break;case"bottom":o={x:d,y:n.y+n.height};break;case"right":o={x:n.x+n.width,y:f};break;case"left":o={x:n.x-t.width,y:f};break;default:o={x:n.x,y:n.y}}switch(u(a)){case"start":o[r]-=v*(i&&m?-1:1);break;case"end":o[r]+=v*(i&&m?-1:1)}return o}let R=async(e,a,i)=>{let{placement:o="bottom",strategy:n="absolute",middleware:t=[],platform:l}=i,r=t.filter(Boolean),c=await (null==l.isRTL?void 0:l.isRTL(a)),s=await l.getElementRects({reference:e,floating:a,strategy:n}),{x:m,y:d}=S(s,o,c),f=o,p={},u=0;for(let i=0;i<r.length;i++){let{name:t,fn:h}=r[i],{x:g,y:b,data:v,reset:y}=await h({x:m,y:d,initialPlacement:o,placement:f,strategy:n,middlewareData:p,rects:s,platform:l,elements:{reference:e,floating:a}});m=null!=g?g:m,d=null!=b?b:d,p={...p,[t]:{...p[t],...v}},y&&u<=50&&(u++,"object"==typeof y&&(y.placement&&(f=y.placement),y.rects&&(s=!0===y.rects?await l.getElementRects({reference:e,floating:a,strategy:n}):y.rects),{x:m,y:d}=S(s,f,c)),i=-1)}return{x:m,y:d,placement:f,strategy:n,middlewareData:p}};async function M(e,a){var i;void 0===a&&(a={});let{x:o,y:n,platform:t,rects:l,elements:r,strategy:c}=e,{boundary:s="clippingAncestors",rootBoundary:m="viewport",elementContext:d="floating",altBoundary:p=!1,padding:u=0}=f(a,e),h=k(u),g=r[p?"floating"===d?"reference":"floating":d],b=w(await t.getClippingRect({element:null==(i=await (null==t.isElement?void 0:t.isElement(g)))||i?g:g.contextElement||await (null==t.getDocumentElement?void 0:t.getDocumentElement(r.floating)),boundary:s,rootBoundary:m,strategy:c})),v="floating"===d?{x:o,y:n,width:l.floating.width,height:l.floating.height}:l.reference,y=await (null==t.getOffsetParent?void 0:t.getOffsetParent(r.floating)),S=await (null==t.isElement?void 0:t.isElement(y))&&await (null==t.getScale?void 0:t.getScale(y))||{x:1,y:1},R=w(t.convertOffsetParentRelativeRectToViewportRelativeRect?await t.convertOffsetParentRelativeRectToViewportRelativeRect({elements:r,rect:v,offsetParent:y,strategy:c}):v);return{top:(b.top-R.top+h.top)/S.y,bottom:(R.bottom-b.bottom+h.bottom)/S.y,left:(b.left-R.left+h.left)/S.x,right:(R.right-b.right+h.right)/S.x}}function A(e,a){return{top:e.top-a.height,right:e.right-a.width,bottom:e.bottom-a.height,left:e.left-a.width}}function _(e){return n.some(a=>e[a]>=0)}async function T(e,a){let{placement:i,platform:o,elements:n}=e,t=await (null==o.isRTL?void 0:o.isRTL(n.floating)),l=p(i),r=u(i),c="y"===b(i),s=["left","top"].includes(l)?-1:1,m=t&&c?-1:1,d=f(a,e),{mainAxis:h,crossAxis:g,alignmentAxis:v}="number"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...d};return r&&"number"==typeof v&&(g="end"===r?-1*v:v),c?{x:g*m,y:h*s}:{x:h*s,y:g*m}}function E(e){return C(e)?(e.nodeName||"").toLowerCase():"#document"}function N(e){var a;return(null==e||null==(a=e.ownerDocument)?void 0:a.defaultView)||window}function j(e){var a;return null==(a=(C(e)?e.ownerDocument:e.document)||window.document)?void 0:a.documentElement}function C(e){return e instanceof Node||e instanceof N(e).Node}function P(e){return e instanceof Element||e instanceof N(e).Element}function D(e){return e instanceof HTMLElement||e instanceof N(e).HTMLElement}function B(e){return"undefined"!=typeof ShadowRoot&&(e instanceof ShadowRoot||e instanceof N(e).ShadowRoot)}function x(e){let{overflow:a,overflowX:i,overflowY:o,display:n}=L(e);return/auto|scroll|overlay|hidden|clip/.test(a+o+i)&&!["inline","contents"].includes(n)}function I(e){let a=O(),i=L(e);return"none"!==i.transform||"none"!==i.perspective||!!i.containerType&&"normal"!==i.containerType||!a&&!!i.backdropFilter&&"none"!==i.backdropFilter||!a&&!!i.filter&&"none"!==i.filter||["transform","perspective","filter"].some(e=>(i.willChange||"").includes(e))||["paint","layout","strict","content"].some(e=>(i.contain||"").includes(e))}function O(){return"undefined"!=typeof CSS&&!!CSS.supports&&CSS.supports("-webkit-backdrop-filter","none")}function z(e){return["html","body","#document"].includes(E(e))}function L(e){return N(e).getComputedStyle(e)}function K(e){return P(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function G(e){if("html"===E(e))return e;let a=e.assignedSlot||e.parentNode||B(e)&&e.host||j(e);return B(a)?a.host:a}function V(e,a,i){var o;void 0===a&&(a=[]),void 0===i&&(i=!0);let n=function e(a){let i=G(a);return z(i)?a.ownerDocument?a.ownerDocument.body:a.body:D(i)&&x(i)?i:e(i)}(e),t=n===(null==(o=e.ownerDocument)?void 0:o.body),l=N(n);return t?a.concat(l,l.visualViewport||[],x(n)?n:[],l.frameElement&&i?V(l.frameElement):[]):a.concat(n,V(n,[],i))}function F(e){let a=L(e),i=parseFloat(a.width)||0,o=parseFloat(a.height)||0,n=D(e),t=n?e.offsetWidth:i,l=n?e.offsetHeight:o,c=r(i)!==t||r(o)!==l;return c&&(i=t,o=l),{width:i,height:o,$:c}}function U(e){return P(e)?e:e.contextElement}function H(e){let a=U(e);if(!D(a))return s(1);let i=a.getBoundingClientRect(),{width:o,height:n,$:t}=F(a),l=(t?r(i.width):i.width)/o,c=(t?r(i.height):i.height)/n;return l&&Number.isFinite(l)||(l=1),c&&Number.isFinite(c)||(c=1),{x:l,y:c}}let q=s(0);function $(e){let a=N(e);return O()&&a.visualViewport?{x:a.visualViewport.offsetLeft,y:a.visualViewport.offsetTop}:q}function W(e,a,i,o){var n;void 0===a&&(a=!1),void 0===i&&(i=!1);let t=e.getBoundingClientRect(),l=U(e),r=s(1);a&&(o?P(o)&&(r=H(o)):r=H(e));let c=(void 0===(n=i)&&(n=!1),o&&(!n||o===N(l))&&n)?$(l):s(0),m=(t.left+c.x)/r.x,d=(t.top+c.y)/r.y,f=t.width/r.x,p=t.height/r.y;if(l){let e=N(l),a=o&&P(o)?N(o):o,i=e,n=i.frameElement;for(;n&&o&&a!==i;){let e=H(n),a=n.getBoundingClientRect(),o=L(n),t=a.left+(n.clientLeft+parseFloat(o.paddingLeft))*e.x,l=a.top+(n.clientTop+parseFloat(o.paddingTop))*e.y;m*=e.x,d*=e.y,f*=e.x,p*=e.y,m+=t,d+=l,n=(i=N(n)).frameElement}}return w({width:f,height:p,x:m,y:d})}let J=[":popover-open",":modal"];function Z(e){return J.some(a=>{try{return e.matches(a)}catch(e){return!1}})}function Y(e){return W(j(e)).left+K(e).scrollLeft}function X(e,a,i){let o;if("viewport"===a)o=function(e,a){let i=N(e),o=j(e),n=i.visualViewport,t=o.clientWidth,l=o.clientHeight,r=0,c=0;if(n){t=n.width,l=n.height;let e=O();(!e||e&&"fixed"===a)&&(r=n.offsetLeft,c=n.offsetTop)}return{width:t,height:l,x:r,y:c}}(e,i);else if("document"===a)o=function(e){let a=j(e),i=K(e),o=e.ownerDocument.body,n=l(a.scrollWidth,a.clientWidth,o.scrollWidth,o.clientWidth),t=l(a.scrollHeight,a.clientHeight,o.scrollHeight,o.clientHeight),r=-i.scrollLeft+Y(e),c=-i.scrollTop;return"rtl"===L(o).direction&&(r+=l(a.clientWidth,o.clientWidth)-n),{width:n,height:t,x:r,y:c}}(j(e));else if(P(a))o=function(e,a){let i=W(e,!0,"fixed"===a),o=i.top+e.clientTop,n=i.left+e.clientLeft,t=D(e)?H(e):s(1),l=e.clientWidth*t.x;return{width:l,height:e.clientHeight*t.y,x:n*t.x,y:o*t.y}}(a,i);else{let i=$(e);o={...a,x:a.x-i.x,y:a.y-i.y}}return w(o)}function Q(e){return"static"===L(e).position}function ee(e,a){return D(e)&&"fixed"!==L(e).position?a?a(e):e.offsetParent:null}function ea(e,a){let i=N(e);if(Z(e))return i;if(!D(e)){let a=G(e);for(;a&&!z(a);){if(P(a)&&!Q(a))return a;a=G(a)}return i}let o=ee(e,a);for(;o&&["table","td","th"].includes(E(o))&&Q(o);)o=ee(o,a);return o&&z(o)&&Q(o)&&!I(o)?i:o||function(e){let a=G(e);for(;D(a)&&!z(a);){if(I(a))return a;a=G(a)}return null}(e)||i}let ei=async function(e){let a=this.getOffsetParent||ea,i=this.getDimensions,o=await i(e.floating);return{reference:function(e,a,i){let o=D(a),n=j(a),t="fixed"===i,l=W(e,!0,t,a),r={scrollLeft:0,scrollTop:0},c=s(0);if(o||!o&&!t){if(("body"!==E(a)||x(n))&&(r=K(a)),o){let e=W(a,!0,t,a);c.x=e.x+a.clientLeft,c.y=e.y+a.clientTop}else n&&(c.x=Y(n))}return{x:l.left+r.scrollLeft-c.x,y:l.top+r.scrollTop-c.y,width:l.width,height:l.height}}(e.reference,await a(e.floating),e.strategy),floating:{x:0,y:0,width:o.width,height:o.height}}},eo={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{elements:a,rect:i,offsetParent:o,strategy:n}=e,t="fixed"===n,l=j(o),r=!!a&&Z(a.floating);if(o===l||r&&t)return i;let c={scrollLeft:0,scrollTop:0},m=s(1),d=s(0),f=D(o);if((f||!f&&!t)&&(("body"!==E(o)||x(l))&&(c=K(o)),D(o))){let e=W(o);m=H(o),d.x=e.x+o.clientLeft,d.y=e.y+o.clientTop}return{width:i.width*m.x,height:i.height*m.y,x:i.x*m.x-c.scrollLeft*m.x+d.x,y:i.y*m.y-c.scrollTop*m.y+d.y}},getDocumentElement:j,getClippingRect:function(e){let{element:a,boundary:i,rootBoundary:o,strategy:n}=e,r=[..."clippingAncestors"===i?Z(a)?[]:function(e,a){let i=a.get(e);if(i)return i;let o=V(e,[],!1).filter(e=>P(e)&&"body"!==E(e)),n=null,t="fixed"===L(e).position,l=t?G(e):e;for(;P(l)&&!z(l);){let a=L(l),i=I(l);i||"fixed"!==a.position||(n=null),(t?!i&&!n:!i&&"static"===a.position&&!!n&&["absolute","fixed"].includes(n.position)||x(l)&&!i&&function e(a,i){let o=G(a);return!(o===i||!P(o)||z(o))&&("fixed"===L(o).position||e(o,i))}(e,l))?o=o.filter(e=>e!==l):n=a,l=G(l)}return a.set(e,o),o}(a,this._c):[].concat(i),o],c=r[0],s=r.reduce((e,i)=>{let o=X(a,i,n);return e.top=l(o.top,e.top),e.right=t(o.right,e.right),e.bottom=t(o.bottom,e.bottom),e.left=l(o.left,e.left),e},X(a,c,n));return{width:s.right-s.left,height:s.bottom-s.top,x:s.left,y:s.top}},getOffsetParent:ea,getElementRects:ei,getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){let{width:a,height:i}=F(e);return{width:a,height:i}},getScale:H,isElement:P,isRTL:function(e){return"rtl"===L(e).direction}},en=e=>({name:"arrow",options:e,async fn(a){let{x:i,y:o,placement:n,rects:r,platform:c,elements:s,middlewareData:m}=a,{element:d,padding:p=0}=f(e,a)||{};if(null==d)return{};let v=k(p),y={x:i,y:o},w=h(b(n)),S=g(w),R=await c.getDimensions(d),M="y"===w,A=M?"clientHeight":"clientWidth",_=r.reference[S]+r.reference[w]-y[w]-r.floating[S],T=y[w]-r.reference[w],E=await (null==c.getOffsetParent?void 0:c.getOffsetParent(d)),N=E?E[A]:0;N&&await (null==c.isElement?void 0:c.isElement(E))||(N=s.floating[A]||r.floating[S]);let j=N/2-R[S]/2-1,C=t(v[M?"top":"left"],j),P=t(v[M?"bottom":"right"],j),D=N-R[S]-P,B=N/2-R[S]/2+(_/2-T/2),x=l(C,t(B,D)),I=!m.arrow&&null!=u(n)&&B!==x&&r.reference[S]/2-(B<C?C:P)-R[S]/2<0,O=I?B<C?B-C:B-D:0;return{[w]:y[w]+O,data:{[w]:x,centerOffset:B-x-O,...I&&{alignmentOffset:O}},reset:I}}}),et=(e,a,i)=>{let o=new Map,n={platform:eo,...i},t={...n.platform,_c:o};return R(e,a,{...n,platform:t})};var el=i(60962),er="undefined"!=typeof document?o.useLayoutEffect:o.useEffect;function ec(e,a){let i,o,n;if(e===a)return!0;if(typeof e!=typeof a)return!1;if("function"==typeof e&&e.toString()===a.toString())return!0;if(e&&a&&"object"==typeof e){if(Array.isArray(e)){if((i=e.length)!==a.length)return!1;for(o=i;0!=o--;)if(!ec(e[o],a[o]))return!1;return!0}if((i=(n=Object.keys(e)).length)!==Object.keys(a).length)return!1;for(o=i;0!=o--;)if(!({}).hasOwnProperty.call(a,n[o]))return!1;for(o=i;0!=o--;){let i=n[o];if(("_owner"!==i||!e.$$typeof)&&!ec(e[i],a[i]))return!1}return!0}return e!=e&&a!=a}function es(e){return"undefined"==typeof window?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function em(e,a){let i=es(e);return Math.round(a*i)/i}function ed(e){let a=o.useRef(e);return er(()=>{a.current=e}),a}let ef=e=>({name:"arrow",options:e,fn(a){let{element:i,padding:o}="function"==typeof e?e(a):e;return i&&({}).hasOwnProperty.call(i,"current")?null!=i.current?en({element:i.current,padding:o}).fn(a):{}:i?en({element:i,padding:o}).fn(a):{}}}),ep=(e,a)=>({...function(e){return void 0===e&&(e=0),{name:"offset",options:e,async fn(a){var i,o;let{x:n,y:t,placement:l,middlewareData:r}=a,c=await T(a,e);return l===(null==(i=r.offset)?void 0:i.placement)&&null!=(o=r.arrow)&&o.alignmentOffset?{}:{x:n+c.x,y:t+c.y,data:{...c,placement:l}}}}}(e),options:[e,a]}),eu=(e,a)=>({...function(e){return void 0===e&&(e={}),{name:"shift",options:e,async fn(a){let{x:i,y:o,placement:n}=a,{mainAxis:r=!0,crossAxis:c=!1,limiter:s={fn:e=>{let{x:a,y:i}=e;return{x:a,y:i}}},...m}=f(e,a),d={x:i,y:o},u=await M(a,m),g=b(p(n)),v=h(g),y=d[v],k=d[g];if(r){let e="y"===v?"top":"left",a="y"===v?"bottom":"right",i=y+u[e],o=y-u[a];y=l(i,t(y,o))}if(c){let e="y"===g?"top":"left",a="y"===g?"bottom":"right",i=k+u[e],o=k-u[a];k=l(i,t(k,o))}let w=s.fn({...a,[v]:y,[g]:k});return{...w,data:{x:w.x-i,y:w.y-o}}}}}(e),options:[e,a]}),eh=(e,a)=>({...function(e){return void 0===e&&(e={}),{options:e,fn(a){let{x:i,y:o,placement:n,rects:t,middlewareData:l}=a,{offset:r=0,mainAxis:c=!0,crossAxis:s=!0}=f(e,a),m={x:i,y:o},d=b(n),u=h(d),g=m[u],v=m[d],y=f(r,a),k="number"==typeof y?{mainAxis:y,crossAxis:0}:{mainAxis:0,crossAxis:0,...y};if(c){let e="y"===u?"height":"width",a=t.reference[u]-t.floating[e]+k.mainAxis,i=t.reference[u]+t.reference[e]-k.mainAxis;g<a?g=a:g>i&&(g=i)}if(s){var w,S;let e="y"===u?"width":"height",a=["top","left"].includes(p(n)),i=t.reference[d]-t.floating[e]+(a&&(null==(w=l.offset)?void 0:w[d])||0)+(a?0:k.crossAxis),o=t.reference[d]+t.reference[e]+(a?0:(null==(S=l.offset)?void 0:S[d])||0)-(a?k.crossAxis:0);v<i?v=i:v>o&&(v=o)}return{[u]:g,[d]:v}}}}(e),options:[e,a]}),eg=(e,a)=>({...function(e){return void 0===e&&(e={}),{name:"flip",options:e,async fn(a){var i,o,n,t,l;let{placement:r,middlewareData:c,rects:s,initialPlacement:m,platform:d,elements:k}=a,{mainAxis:w=!0,crossAxis:S=!0,fallbackPlacements:R,fallbackStrategy:A="bestFit",fallbackAxisSideDirection:_="none",flipAlignment:T=!0,...E}=f(e,a);if(null!=(i=c.arrow)&&i.alignmentOffset)return{};let N=p(r),j=p(m)===m,C=await (null==d.isRTL?void 0:d.isRTL(k.floating)),P=R||(j||!T?[y(m)]:function(e){let a=y(e);return[v(e),a,v(a)]}(m));R||"none"===_||P.push(...function(e,a,i,o){let n=u(e),t=function(e,a,i){let o=["left","right"],n=["right","left"];switch(e){case"top":case"bottom":if(i)return a?n:o;return a?o:n;case"left":case"right":return a?["top","bottom"]:["bottom","top"];default:return[]}}(p(e),"start"===i,o);return n&&(t=t.map(e=>e+"-"+n),a&&(t=t.concat(t.map(v)))),t}(m,T,_,C));let D=[m,...P],B=await M(a,E),x=[],I=(null==(o=c.flip)?void 0:o.overflows)||[];if(w&&x.push(B[N]),S){let e=function(e,a,i){void 0===i&&(i=!1);let o=u(e),n=h(b(e)),t=g(n),l="x"===n?o===(i?"end":"start")?"right":"left":"start"===o?"bottom":"top";return a.reference[t]>a.floating[t]&&(l=y(l)),[l,y(l)]}(r,s,C);x.push(B[e[0]],B[e[1]])}if(I=[...I,{placement:r,overflows:x}],!x.every(e=>e<=0)){let e=((null==(n=c.flip)?void 0:n.index)||0)+1,a=D[e];if(a)return{data:{index:e,overflows:I},reset:{placement:a}};let i=null==(t=I.filter(e=>e.overflows[0]<=0).sort((e,a)=>e.overflows[1]-a.overflows[1])[0])?void 0:t.placement;if(!i)switch(A){case"bestFit":{let e=null==(l=I.map(e=>[e.placement,e.overflows.filter(e=>e>0).reduce((e,a)=>e+a,0)]).sort((e,a)=>e[1]-a[1])[0])?void 0:l[0];e&&(i=e);break}case"initialPlacement":i=m}if(r!==i)return{reset:{placement:i}}}return{}}}}(e),options:[e,a]}),eb=(e,a)=>({...function(e){return void 0===e&&(e={}),{name:"size",options:e,async fn(a){let i,o;let{placement:n,rects:r,platform:c,elements:s}=a,{apply:m=()=>{},...d}=f(e,a),h=await M(a,d),g=p(n),v=u(n),y="y"===b(n),{width:k,height:w}=r.floating;"top"===g||"bottom"===g?(i=g,o=v===(await (null==c.isRTL?void 0:c.isRTL(s.floating))?"start":"end")?"left":"right"):(o=g,i="end"===v?"top":"bottom");let S=w-h.top-h.bottom,R=k-h.left-h.right,A=t(w-h[i],S),_=t(k-h[o],R),T=!a.middlewareData.shift,E=A,N=_;if(y?N=v||T?t(_,R):R:E=v||T?t(A,S):S,T&&!v){let e=l(h.left,0),a=l(h.right,0),i=l(h.top,0),o=l(h.bottom,0);y?N=k-2*(0!==e||0!==a?e+a:l(h.left,h.right)):E=w-2*(0!==i||0!==o?i+o:l(h.top,h.bottom))}await m({...a,availableWidth:N,availableHeight:E});let j=await c.getDimensions(s.floating);return k!==j.width||w!==j.height?{reset:{rects:!0}}:{}}}}(e),options:[e,a]}),ev=(e,a)=>({...function(e){return void 0===e&&(e={}),{name:"hide",options:e,async fn(a){let{rects:i}=a,{strategy:o="referenceHidden",...n}=f(e,a);switch(o){case"referenceHidden":{let e=A(await M(a,{...n,elementContext:"reference"}),i.reference);return{data:{referenceHiddenOffsets:e,referenceHidden:_(e)}}}case"escaped":{let e=A(await M(a,{...n,altBoundary:!0}),i.floating);return{data:{escapedOffsets:e,escaped:_(e)}}}default:return{}}}}}(e),options:[e,a]}),ey=(e,a)=>({...ef(e),options:[e,a]});var ek=i(45226),ew=i(10326),eS=o.forwardRef((e,a)=>{let{children:i,width:o=10,height:n=5,...t}=e;return(0,ew.jsx)(ek.WV.svg,{...t,ref:a,width:o,height:n,viewBox:"0 0 30 10",preserveAspectRatio:"none",children:e.asChild?i:(0,ew.jsx)("polygon",{points:"0,0 30,0 15,10"})})});eS.displayName="Arrow";var eR=i(48051),eM=i(93095),eA=i(55049),e_=i(65819),eT="Popper",[eE,eN]=(0,eM.b)(eT),[ej,eC]=eE(eT),eP=e=>{let{__scopePopper:a,children:i}=e,[n,t]=o.useState(null);return(0,ew.jsx)(ej,{scope:a,anchor:n,onAnchorChange:t,children:i})};eP.displayName=eT;var eD="PopperAnchor",eB=o.forwardRef((e,a)=>{let{__scopePopper:i,virtualRef:n,...t}=e,l=eC(eD,i),r=o.useRef(null),c=(0,eR.e)(a,r);return o.useEffect(()=>{l.onAnchorChange(n?.current||r.current)}),n?null:(0,ew.jsx)(ek.WV.div,{...t,ref:c})});eB.displayName=eD;var ex="PopperContent",[eI,eO]=eE(ex),ez=o.forwardRef((e,a)=>{let{__scopePopper:i,side:n="bottom",sideOffset:r=0,align:s="center",alignOffset:m=0,arrowPadding:d=0,avoidCollisions:f=!0,collisionBoundary:p=[],collisionPadding:u=0,sticky:h="partial",hideWhenDetached:g=!1,updatePositionStrategy:b="optimized",onPlaced:v,...y}=e,k=eC(ex,i),[w,S]=o.useState(null),R=(0,eR.e)(a,e=>S(e)),[M,A]=o.useState(null),_=function(e){let[a,i]=o.useState(void 0);return(0,e_.b)(()=>{if(e){i({width:e.offsetWidth,height:e.offsetHeight});let a=new ResizeObserver(a=>{let o,n;if(!Array.isArray(a)||!a.length)return;let t=a[0];if("borderBoxSize"in t){let e=t.borderBoxSize,a=Array.isArray(e)?e[0]:e;o=a.inlineSize,n=a.blockSize}else o=e.offsetWidth,n=e.offsetHeight;i({width:o,height:n})});return a.observe(e,{box:"border-box"}),()=>a.unobserve(e)}i(void 0)},[e]),a}(M),T=_?.width??0,E=_?.height??0,N="number"==typeof u?u:{top:0,right:0,bottom:0,left:0,...u},C=Array.isArray(p)?p:[p],P=C.length>0,D={padding:N,boundary:C.filter(eV),altBoundary:P},{refs:B,floatingStyles:x,placement:I,isPositioned:O,middlewareData:z}=function(e){void 0===e&&(e={});let{placement:a="bottom",strategy:i="absolute",middleware:n=[],platform:t,elements:{reference:l,floating:r}={},transform:c=!0,whileElementsMounted:s,open:m}=e,[d,f]=o.useState({x:0,y:0,strategy:i,placement:a,middlewareData:{},isPositioned:!1}),[p,u]=o.useState(n);ec(p,n)||u(n);let[h,g]=o.useState(null),[b,v]=o.useState(null),y=o.useCallback(e=>{e!==R.current&&(R.current=e,g(e))},[]),k=o.useCallback(e=>{e!==M.current&&(M.current=e,v(e))},[]),w=l||h,S=r||b,R=o.useRef(null),M=o.useRef(null),A=o.useRef(d),_=null!=s,T=ed(s),E=ed(t),N=o.useCallback(()=>{if(!R.current||!M.current)return;let e={placement:a,strategy:i,middleware:p};E.current&&(e.platform=E.current),et(R.current,M.current,e).then(e=>{let a={...e,isPositioned:!0};j.current&&!ec(A.current,a)&&(A.current=a,el.flushSync(()=>{f(a)}))})},[p,a,i,E]);er(()=>{!1===m&&A.current.isPositioned&&(A.current.isPositioned=!1,f(e=>({...e,isPositioned:!1})))},[m]);let j=o.useRef(!1);er(()=>(j.current=!0,()=>{j.current=!1}),[]),er(()=>{if(w&&(R.current=w),S&&(M.current=S),w&&S){if(T.current)return T.current(w,S,N);N()}},[w,S,N,T,_]);let C=o.useMemo(()=>({reference:R,floating:M,setReference:y,setFloating:k}),[y,k]),P=o.useMemo(()=>({reference:w,floating:S}),[w,S]),D=o.useMemo(()=>{let e={position:i,left:0,top:0};if(!P.floating)return e;let a=em(P.floating,d.x),o=em(P.floating,d.y);return c?{...e,transform:"translate("+a+"px, "+o+"px)",...es(P.floating)>=1.5&&{willChange:"transform"}}:{position:i,left:a,top:o}},[i,c,P.floating,d.x,d.y]);return o.useMemo(()=>({...d,update:N,refs:C,elements:P,floatingStyles:D}),[d,N,C,P,D])}({strategy:"fixed",placement:n+("center"!==s?"-"+s:""),whileElementsMounted:(...e)=>(function(e,a,i,o){let n;void 0===o&&(o={});let{ancestorScroll:r=!0,ancestorResize:s=!0,elementResize:m="function"==typeof ResizeObserver,layoutShift:d="function"==typeof IntersectionObserver,animationFrame:f=!1}=o,p=U(e),u=r||s?[...p?V(p):[],...V(a)]:[];u.forEach(e=>{r&&e.addEventListener("scroll",i,{passive:!0}),s&&e.addEventListener("resize",i)});let h=p&&d?function(e,a){let i,o=null,n=j(e);function r(){var e;clearTimeout(i),null==(e=o)||e.disconnect(),o=null}return function s(m,d){void 0===m&&(m=!1),void 0===d&&(d=1),r();let{left:f,top:p,width:u,height:h}=e.getBoundingClientRect();if(m||a(),!u||!h)return;let g=c(p),b=c(n.clientWidth-(f+u)),v={rootMargin:-g+"px "+-b+"px "+-c(n.clientHeight-(p+h))+"px "+-c(f)+"px",threshold:l(0,t(1,d))||1},y=!0;function k(e){let a=e[0].intersectionRatio;if(a!==d){if(!y)return s();a?s(!1,a):i=setTimeout(()=>{s(!1,1e-7)},1e3)}y=!1}try{o=new IntersectionObserver(k,{...v,root:n.ownerDocument})}catch(e){o=new IntersectionObserver(k,v)}o.observe(e)}(!0),r}(p,i):null,g=-1,b=null;m&&(b=new ResizeObserver(e=>{let[o]=e;o&&o.target===p&&b&&(b.unobserve(a),cancelAnimationFrame(g),g=requestAnimationFrame(()=>{var e;null==(e=b)||e.observe(a)})),i()}),p&&!f&&b.observe(p),b.observe(a));let v=f?W(e):null;return f&&function a(){let o=W(e);v&&(o.x!==v.x||o.y!==v.y||o.width!==v.width||o.height!==v.height)&&i(),v=o,n=requestAnimationFrame(a)}(),i(),()=>{var e;u.forEach(e=>{r&&e.removeEventListener("scroll",i),s&&e.removeEventListener("resize",i)}),null==h||h(),null==(e=b)||e.disconnect(),b=null,f&&cancelAnimationFrame(n)}})(...e,{animationFrame:"always"===b}),elements:{reference:k.anchor},middleware:[ep({mainAxis:r+E,alignmentAxis:m}),f&&eu({mainAxis:!0,crossAxis:!1,limiter:"partial"===h?eh():void 0,...D}),f&&eg({...D}),eb({...D,apply:({elements:e,rects:a,availableWidth:i,availableHeight:o})=>{let{width:n,height:t}=a.reference,l=e.floating.style;l.setProperty("--radix-popper-available-width",`${i}px`),l.setProperty("--radix-popper-available-height",`${o}px`),l.setProperty("--radix-popper-anchor-width",`${n}px`),l.setProperty("--radix-popper-anchor-height",`${t}px`)}}),M&&ey({element:M,padding:d}),eF({arrowWidth:T,arrowHeight:E}),g&&ev({strategy:"referenceHidden",...D})]}),[L,K]=eU(I),G=(0,eA.W)(v);(0,e_.b)(()=>{O&&G?.()},[O,G]);let F=z.arrow?.x,H=z.arrow?.y,q=z.arrow?.centerOffset!==0,[$,J]=o.useState();return(0,e_.b)(()=>{w&&J(window.getComputedStyle(w).zIndex)},[w]),(0,ew.jsx)("div",{ref:B.setFloating,"data-radix-popper-content-wrapper":"",style:{...x,transform:O?x.transform:"translate(0, -200%)",minWidth:"max-content",zIndex:$,"--radix-popper-transform-origin":[z.transformOrigin?.x,z.transformOrigin?.y].join(" "),...z.hide?.referenceHidden&&{visibility:"hidden",pointerEvents:"none"}},dir:e.dir,children:(0,ew.jsx)(eI,{scope:i,placedSide:L,onArrowChange:A,arrowX:F,arrowY:H,shouldHideArrow:q,children:(0,ew.jsx)(ek.WV.div,{"data-side":L,"data-align":K,...y,ref:R,style:{...y.style,animation:O?void 0:"none"}})})})});ez.displayName=ex;var eL="PopperArrow",eK={top:"bottom",right:"left",bottom:"top",left:"right"},eG=o.forwardRef(function(e,a){let{__scopePopper:i,...o}=e,n=eO(eL,i),t=eK[n.placedSide];return(0,ew.jsx)("span",{ref:n.onArrowChange,style:{position:"absolute",left:n.arrowX,top:n.arrowY,[t]:0,transformOrigin:{top:"",right:"0 0",bottom:"center 0",left:"100% 0"}[n.placedSide],transform:{top:"translateY(100%)",right:"translateY(50%) rotate(90deg) translateX(-50%)",bottom:"rotate(180deg)",left:"translateY(50%) rotate(-90deg) translateX(50%)"}[n.placedSide],visibility:n.shouldHideArrow?"hidden":void 0},children:(0,ew.jsx)(eS,{...o,ref:a,style:{...o.style,display:"block"}})})});function eV(e){return null!==e}eG.displayName=eL;var eF=e=>({name:"transformOrigin",options:e,fn(a){let{placement:i,rects:o,middlewareData:n}=a,t=n.arrow?.centerOffset!==0,l=t?0:e.arrowWidth,r=t?0:e.arrowHeight,[c,s]=eU(i),m={start:"0%",center:"50%",end:"100%"}[s],d=(n.arrow?.x??0)+l/2,f=(n.arrow?.y??0)+r/2,p="",u="";return"bottom"===c?(p=t?m:`${d}px`,u=`${-r}px`):"top"===c?(p=t?m:`${d}px`,u=`${o.floating.height+r}px`):"right"===c?(p=`${-r}px`,u=t?m:`${f}px`):"left"===c&&(p=`${o.floating.width+r}px`,u=t?m:`${f}px`),{data:{x:p,y:u}}}});function eU(e){let[a,i="center"]=e.split("-");return[a,i]}var eH=eP,eq=eB,e$=ez,eW=eG},83078:(e,a,i)=>{"use strict";i.d(a,{h:()=>c});var o=i(17577),n=i(60962),t=i(45226),l=i(65819),r=i(10326),c=o.forwardRef((e,a)=>{let{container:i,...c}=e,[s,m]=o.useState(!1);(0,l.b)(()=>m(!0),[]);let d=i||s&&globalThis?.document?.body;return d?n.createPortal((0,r.jsx)(t.WV.div,{...c,ref:a}),d):null});c.displayName="Portal"},9815:(e,a,i)=>{"use strict";i.d(a,{z:()=>r});var o=i(17577),n=i(60962),t=i(48051),l=i(65819),r=e=>{let{present:a,children:i}=e,r=function(e){var a,i;let[t,r]=o.useState(),s=o.useRef({}),m=o.useRef(e),d=o.useRef("none"),[f,p]=(a=e?"mounted":"unmounted",i={mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}},o.useReducer((e,a)=>i[e][a]??e,a));return o.useEffect(()=>{let e=c(s.current);d.current="mounted"===f?e:"none"},[f]),(0,l.b)(()=>{let a=s.current,i=m.current;if(i!==e){let o=d.current,n=c(a);e?p("MOUNT"):"none"===n||a?.display==="none"?p("UNMOUNT"):i&&o!==n?p("ANIMATION_OUT"):p("UNMOUNT"),m.current=e}},[e,p]),(0,l.b)(()=>{if(t){let e=e=>{let a=c(s.current).includes(e.animationName);e.target===t&&a&&n.flushSync(()=>p("ANIMATION_END"))},a=e=>{e.target===t&&(d.current=c(s.current))};return t.addEventListener("animationstart",a),t.addEventListener("animationcancel",e),t.addEventListener("animationend",e),()=>{t.removeEventListener("animationstart",a),t.removeEventListener("animationcancel",e),t.removeEventListener("animationend",e)}}p("ANIMATION_END")},[t,p]),{isPresent:["mounted","unmountSuspended"].includes(f),ref:o.useCallback(e=>{e&&(s.current=getComputedStyle(e)),r(e)},[])}}(a),s="function"==typeof i?i({present:r.isPresent}):o.Children.only(i),m=(0,t.e)(r.ref,function(e){let a=Object.getOwnPropertyDescriptor(e.props,"ref")?.get,i=a&&"isReactWarning"in a&&a.isReactWarning;return i?e.ref:(i=(a=Object.getOwnPropertyDescriptor(e,"ref")?.get)&&"isReactWarning"in a&&a.isReactWarning)?e.props.ref:e.props.ref||e.ref}(s));return"function"==typeof i||r.isPresent?o.cloneElement(s,{ref:m}):null};function c(e){return e?.animationName||"none"}r.displayName="Presence"},45226:(e,a,i)=>{"use strict";i.d(a,{WV:()=>r,jH:()=>c});var o=i(17577),n=i(60962),t=i(34214),l=i(10326),r=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"].reduce((e,a)=>{let i=o.forwardRef((e,i)=>{let{asChild:o,...n}=e,r=o?t.g7:a;return"undefined"!=typeof window&&(window[Symbol.for("radix-ui")]=!0),(0,l.jsx)(r,{...n,ref:i})});return i.displayName=`Primitive.${a}`,{...e,[a]:i}},{});function c(e,a){e&&n.flushSync(()=>e.dispatchEvent(a))}},81128:(e,a,i)=>{"use strict";i.d(a,{VY:()=>eD,ZA:()=>ex,JO:()=>eC,ck:()=>eO,wU:()=>eL,eT:()=>ez,__:()=>eI,h_:()=>eP,fC:()=>eE,$G:()=>eG,u_:()=>eK,Z0:()=>eV,xz:()=>eN,B4:()=>ej,l_:()=>eB});var o=i(17577),n=i(60962);function t(e,[a,i]){return Math.min(i,Math.max(a,e))}var l=i(82561),r=i(70545),c=i(48051),s=i(93095),m=i(17124),d=i(825),f=i(80699),p=i(10441),u=i(88957),h=i(9625),g=i(83078),b=i(45226),v=i(34214),y=i(55049),k=i(52067),w=i(65819),S=i(10326),R=o.forwardRef((e,a)=>(0,S.jsx)(b.WV.span,{...e,ref:a,style:{position:"absolute",border:0,width:1,height:1,padding:0,margin:-1,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",wordWrap:"normal",...e.style}}));R.displayName="VisuallyHidden";var M=i(35664),A=i(58260),_=[" ","Enter","ArrowUp","ArrowDown"],T=[" ","Enter"],E="Select",[N,j,C]=(0,r.B)(E),[P,D]=(0,s.b)(E,[C,h.D7]),B=(0,h.D7)(),[x,I]=P(E),[O,z]=P(E),L=e=>{let{__scopeSelect:a,children:i,open:n,defaultOpen:t,onOpenChange:l,value:r,defaultValue:c,onValueChange:s,dir:d,name:f,autoComplete:p,disabled:g,required:b}=e,v=B(a),[y,w]=o.useState(null),[R,M]=o.useState(null),[A,_]=o.useState(!1),T=(0,m.gm)(d),[E=!1,j]=(0,k.T)({prop:n,defaultProp:t,onChange:l}),[C,P]=(0,k.T)({prop:r,defaultProp:c,onChange:s}),D=o.useRef(null),I=!y||!!y.closest("form"),[z,L]=o.useState(new Set),K=Array.from(z).map(e=>e.props.value).join(";");return(0,S.jsx)(h.fC,{...v,children:(0,S.jsxs)(x,{required:b,scope:a,trigger:y,onTriggerChange:w,valueNode:R,onValueNodeChange:M,valueNodeHasChildren:A,onValueNodeHasChildrenChange:_,contentId:(0,u.M)(),value:C,onValueChange:P,open:E,onOpenChange:j,dir:T,triggerPointerDownPosRef:D,disabled:g,children:[(0,S.jsx)(N.Provider,{scope:a,children:(0,S.jsx)(O,{scope:e.__scopeSelect,onNativeOptionAdd:o.useCallback(e=>{L(a=>new Set(a).add(e))},[]),onNativeOptionRemove:o.useCallback(e=>{L(a=>{let i=new Set(a);return i.delete(e),i})},[]),children:i})}),I?(0,S.jsxs)(eA,{"aria-hidden":!0,required:b,tabIndex:-1,name:f,autoComplete:p,value:C,onChange:e=>P(e.target.value),disabled:g,children:[void 0===C?(0,S.jsx)("option",{value:""}):null,Array.from(z)]},K):null]})})};L.displayName=E;var K="SelectTrigger",G=o.forwardRef((e,a)=>{let{__scopeSelect:i,disabled:o=!1,...n}=e,t=B(i),r=I(K,i),s=r.disabled||o,m=(0,c.e)(a,r.onTriggerChange),d=j(i),[f,p,u]=e_(e=>{let a=d().filter(e=>!e.disabled),i=a.find(e=>e.value===r.value),o=eT(a,e,i);void 0!==o&&r.onValueChange(o.value)}),g=()=>{s||(r.onOpenChange(!0),u())};return(0,S.jsx)(h.ee,{asChild:!0,...t,children:(0,S.jsx)(b.WV.button,{type:"button",role:"combobox","aria-controls":r.contentId,"aria-expanded":r.open,"aria-required":r.required,"aria-autocomplete":"none",dir:r.dir,"data-state":r.open?"open":"closed",disabled:s,"data-disabled":s?"":void 0,"data-placeholder":eM(r.value)?"":void 0,...n,ref:m,onClick:(0,l.M)(n.onClick,e=>{e.currentTarget.focus()}),onPointerDown:(0,l.M)(n.onPointerDown,e=>{let a=e.target;a.hasPointerCapture(e.pointerId)&&a.releasePointerCapture(e.pointerId),0===e.button&&!1===e.ctrlKey&&(g(),r.triggerPointerDownPosRef.current={x:Math.round(e.pageX),y:Math.round(e.pageY)},e.preventDefault())}),onKeyDown:(0,l.M)(n.onKeyDown,e=>{let a=""!==f.current;e.ctrlKey||e.altKey||e.metaKey||1!==e.key.length||p(e.key),(!a||" "!==e.key)&&_.includes(e.key)&&(g(),e.preventDefault())})})})});G.displayName=K;var V="SelectValue",F=o.forwardRef((e,a)=>{let{__scopeSelect:i,className:o,style:n,children:t,placeholder:l="",...r}=e,s=I(V,i),{onValueNodeHasChildrenChange:m}=s,d=void 0!==t,f=(0,c.e)(a,s.onValueNodeChange);return(0,w.b)(()=>{m(d)},[m,d]),(0,S.jsx)(b.WV.span,{...r,ref:f,style:{pointerEvents:"none"},children:eM(s.value)?(0,S.jsx)(S.Fragment,{children:l}):t})});F.displayName=V;var U=o.forwardRef((e,a)=>{let{__scopeSelect:i,children:o,...n}=e;return(0,S.jsx)(b.WV.span,{"aria-hidden":!0,...n,ref:a,children:o||"▼"})});U.displayName="SelectIcon";var H=e=>(0,S.jsx)(g.h,{asChild:!0,...e});H.displayName="SelectPortal";var q="SelectContent",$=o.forwardRef((e,a)=>{let i=I(q,e.__scopeSelect),[t,l]=o.useState();return((0,w.b)(()=>{l(new DocumentFragment)},[]),i.open)?(0,S.jsx)(Z,{...e,ref:a}):t?n.createPortal((0,S.jsx)(W,{scope:e.__scopeSelect,children:(0,S.jsx)(N.Slot,{scope:e.__scopeSelect,children:(0,S.jsx)("div",{children:e.children})})}),t):null});$.displayName=q;var[W,J]=P(q),Z=o.forwardRef((e,a)=>{let{__scopeSelect:i,position:n="item-aligned",onCloseAutoFocus:t,onEscapeKeyDown:r,onPointerDownOutside:s,side:m,sideOffset:u,align:h,alignOffset:g,arrowPadding:b,collisionBoundary:y,collisionPadding:k,sticky:w,hideWhenDetached:R,avoidCollisions:_,...T}=e,E=I(q,i),[N,C]=o.useState(null),[P,D]=o.useState(null),B=(0,c.e)(a,e=>C(e)),[x,O]=o.useState(null),[z,L]=o.useState(null),K=j(i),[G,V]=o.useState(!1),F=o.useRef(!1);o.useEffect(()=>{if(N)return(0,M.Ry)(N)},[N]),(0,f.EW)();let U=o.useCallback(e=>{let[a,...i]=K().map(e=>e.ref.current),[o]=i.slice(-1),n=document.activeElement;for(let i of e)if(i===n||(i?.scrollIntoView({block:"nearest"}),i===a&&P&&(P.scrollTop=0),i===o&&P&&(P.scrollTop=P.scrollHeight),i?.focus(),document.activeElement!==n))return},[K,P]),H=o.useCallback(()=>U([x,N]),[U,x,N]);o.useEffect(()=>{G&&H()},[G,H]);let{onOpenChange:$,triggerPointerDownPosRef:J}=E;o.useEffect(()=>{if(N){let e={x:0,y:0},a=a=>{e={x:Math.abs(Math.round(a.pageX)-(J.current?.x??0)),y:Math.abs(Math.round(a.pageY)-(J.current?.y??0))}},i=i=>{e.x<=10&&e.y<=10?i.preventDefault():N.contains(i.target)||$(!1),document.removeEventListener("pointermove",a),J.current=null};return null!==J.current&&(document.addEventListener("pointermove",a),document.addEventListener("pointerup",i,{capture:!0,once:!0})),()=>{document.removeEventListener("pointermove",a),document.removeEventListener("pointerup",i,{capture:!0})}}},[N,$,J]),o.useEffect(()=>{let e=()=>$(!1);return window.addEventListener("blur",e),window.addEventListener("resize",e),()=>{window.removeEventListener("blur",e),window.removeEventListener("resize",e)}},[$]);let[Z,Q]=e_(e=>{let a=K().filter(e=>!e.disabled),i=a.find(e=>e.ref.current===document.activeElement),o=eT(a,e,i);o&&setTimeout(()=>o.ref.current.focus())}),ee=o.useCallback((e,a,i)=>{let o=!F.current&&!i;(void 0!==E.value&&E.value===a||o)&&(O(e),o&&(F.current=!0))},[E.value]),ea=o.useCallback(()=>N?.focus(),[N]),ei=o.useCallback((e,a,i)=>{let o=!F.current&&!i;(void 0!==E.value&&E.value===a||o)&&L(e)},[E.value]),eo="popper"===n?X:Y,en=eo===X?{side:m,sideOffset:u,align:h,alignOffset:g,arrowPadding:b,collisionBoundary:y,collisionPadding:k,sticky:w,hideWhenDetached:R,avoidCollisions:_}:{};return(0,S.jsx)(W,{scope:i,content:N,viewport:P,onViewportChange:D,itemRefCallback:ee,selectedItem:x,onItemLeave:ea,itemTextRefCallback:ei,focusSelectedItem:H,selectedItemText:z,position:n,isPositioned:G,searchRef:Z,children:(0,S.jsx)(A.Z,{as:v.g7,allowPinchZoom:!0,children:(0,S.jsx)(p.M,{asChild:!0,trapped:E.open,onMountAutoFocus:e=>{e.preventDefault()},onUnmountAutoFocus:(0,l.M)(t,e=>{E.trigger?.focus({preventScroll:!0}),e.preventDefault()}),children:(0,S.jsx)(d.XB,{asChild:!0,disableOutsidePointerEvents:!0,onEscapeKeyDown:r,onPointerDownOutside:s,onFocusOutside:e=>e.preventDefault(),onDismiss:()=>E.onOpenChange(!1),children:(0,S.jsx)(eo,{role:"listbox",id:E.contentId,"data-state":E.open?"open":"closed",dir:E.dir,onContextMenu:e=>e.preventDefault(),...T,...en,onPlaced:()=>V(!0),ref:B,style:{display:"flex",flexDirection:"column",outline:"none",...T.style},onKeyDown:(0,l.M)(T.onKeyDown,e=>{let a=e.ctrlKey||e.altKey||e.metaKey;if("Tab"===e.key&&e.preventDefault(),a||1!==e.key.length||Q(e.key),["ArrowUp","ArrowDown","Home","End"].includes(e.key)){let a=K().filter(e=>!e.disabled).map(e=>e.ref.current);if(["ArrowUp","End"].includes(e.key)&&(a=a.slice().reverse()),["ArrowUp","ArrowDown"].includes(e.key)){let i=e.target,o=a.indexOf(i);a=a.slice(o+1)}setTimeout(()=>U(a)),e.preventDefault()}})})})})})})});Z.displayName="SelectContentImpl";var Y=o.forwardRef((e,a)=>{let{__scopeSelect:i,onPlaced:n,...l}=e,r=I(q,i),s=J(q,i),[m,d]=o.useState(null),[f,p]=o.useState(null),u=(0,c.e)(a,e=>p(e)),h=j(i),g=o.useRef(!1),v=o.useRef(!0),{viewport:y,selectedItem:k,selectedItemText:R,focusSelectedItem:M}=s,A=o.useCallback(()=>{if(r.trigger&&r.valueNode&&m&&f&&y&&k&&R){let e=r.trigger.getBoundingClientRect(),a=f.getBoundingClientRect(),i=r.valueNode.getBoundingClientRect(),o=R.getBoundingClientRect();if("rtl"!==r.dir){let n=o.left-a.left,l=i.left-n,r=e.left-l,c=e.width+r,s=Math.max(c,a.width),d=t(l,[10,window.innerWidth-10-s]);m.style.minWidth=c+"px",m.style.left=d+"px"}else{let n=a.right-o.right,l=window.innerWidth-i.right-n,r=window.innerWidth-e.right-l,c=e.width+r,s=Math.max(c,a.width),d=t(l,[10,window.innerWidth-10-s]);m.style.minWidth=c+"px",m.style.right=d+"px"}let l=h(),c=window.innerHeight-20,s=y.scrollHeight,d=window.getComputedStyle(f),p=parseInt(d.borderTopWidth,10),u=parseInt(d.paddingTop,10),b=parseInt(d.borderBottomWidth,10),v=p+u+s+parseInt(d.paddingBottom,10)+b,w=Math.min(5*k.offsetHeight,v),S=window.getComputedStyle(y),M=parseInt(S.paddingTop,10),A=parseInt(S.paddingBottom,10),_=e.top+e.height/2-10,T=k.offsetHeight/2,E=p+u+(k.offsetTop+T);if(E<=_){let e=k===l[l.length-1].ref.current;m.style.bottom="0px";let a=f.clientHeight-y.offsetTop-y.offsetHeight;m.style.height=E+Math.max(c-_,T+(e?A:0)+a+b)+"px"}else{let e=k===l[0].ref.current;m.style.top="0px";let a=Math.max(_,p+y.offsetTop+(e?M:0)+T);m.style.height=a+(v-E)+"px",y.scrollTop=E-_+y.offsetTop}m.style.margin="10px 0",m.style.minHeight=w+"px",m.style.maxHeight=c+"px",n?.(),requestAnimationFrame(()=>g.current=!0)}},[h,r.trigger,r.valueNode,m,f,y,k,R,r.dir,n]);(0,w.b)(()=>A(),[A]);let[_,T]=o.useState();(0,w.b)(()=>{f&&T(window.getComputedStyle(f).zIndex)},[f]);let E=o.useCallback(e=>{e&&!0===v.current&&(A(),M?.(),v.current=!1)},[A,M]);return(0,S.jsx)(Q,{scope:i,contentWrapper:m,shouldExpandOnScrollRef:g,onScrollButtonChange:E,children:(0,S.jsx)("div",{ref:d,style:{display:"flex",flexDirection:"column",position:"fixed",zIndex:_},children:(0,S.jsx)(b.WV.div,{...l,ref:u,style:{boxSizing:"border-box",maxHeight:"100%",...l.style}})})})});Y.displayName="SelectItemAlignedPosition";var X=o.forwardRef((e,a)=>{let{__scopeSelect:i,align:o="start",collisionPadding:n=10,...t}=e,l=B(i);return(0,S.jsx)(h.VY,{...l,...t,ref:a,align:o,collisionPadding:n,style:{boxSizing:"border-box",...t.style,"--radix-select-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-select-content-available-width":"var(--radix-popper-available-width)","--radix-select-content-available-height":"var(--radix-popper-available-height)","--radix-select-trigger-width":"var(--radix-popper-anchor-width)","--radix-select-trigger-height":"var(--radix-popper-anchor-height)"}})});X.displayName="SelectPopperPosition";var[Q,ee]=P(q,{}),ea="SelectViewport",ei=o.forwardRef((e,a)=>{let{__scopeSelect:i,nonce:n,...t}=e,r=J(ea,i),s=ee(ea,i),m=(0,c.e)(a,r.onViewportChange),d=o.useRef(0);return(0,S.jsxs)(S.Fragment,{children:[(0,S.jsx)("style",{dangerouslySetInnerHTML:{__html:"[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}"},nonce:n}),(0,S.jsx)(N.Slot,{scope:i,children:(0,S.jsx)(b.WV.div,{"data-radix-select-viewport":"",role:"presentation",...t,ref:m,style:{position:"relative",flex:1,overflow:"auto",...t.style},onScroll:(0,l.M)(t.onScroll,e=>{let a=e.currentTarget,{contentWrapper:i,shouldExpandOnScrollRef:o}=s;if(o?.current&&i){let e=Math.abs(d.current-a.scrollTop);if(e>0){let o=window.innerHeight-20,n=Math.max(parseFloat(i.style.minHeight),parseFloat(i.style.height));if(n<o){let t=n+e,l=Math.min(o,t),r=t-l;i.style.height=l+"px","0px"===i.style.bottom&&(a.scrollTop=r>0?r:0,i.style.justifyContent="flex-end")}}}d.current=a.scrollTop})})})]})});ei.displayName=ea;var eo="SelectGroup",[en,et]=P(eo),el=o.forwardRef((e,a)=>{let{__scopeSelect:i,...o}=e,n=(0,u.M)();return(0,S.jsx)(en,{scope:i,id:n,children:(0,S.jsx)(b.WV.div,{role:"group","aria-labelledby":n,...o,ref:a})})});el.displayName=eo;var er="SelectLabel",ec=o.forwardRef((e,a)=>{let{__scopeSelect:i,...o}=e,n=et(er,i);return(0,S.jsx)(b.WV.div,{id:n.id,...o,ref:a})});ec.displayName=er;var es="SelectItem",[em,ed]=P(es),ef=o.forwardRef((e,a)=>{let{__scopeSelect:i,value:n,disabled:t=!1,textValue:r,...s}=e,m=I(es,i),d=J(es,i),f=m.value===n,[p,h]=o.useState(r??""),[g,v]=o.useState(!1),y=(0,c.e)(a,e=>d.itemRefCallback?.(e,n,t)),k=(0,u.M)(),w=()=>{t||(m.onValueChange(n),m.onOpenChange(!1))};if(""===n)throw Error("A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.");return(0,S.jsx)(em,{scope:i,value:n,disabled:t,textId:k,isSelected:f,onItemTextChange:o.useCallback(e=>{h(a=>a||(e?.textContent??"").trim())},[]),children:(0,S.jsx)(N.ItemSlot,{scope:i,value:n,disabled:t,textValue:p,children:(0,S.jsx)(b.WV.div,{role:"option","aria-labelledby":k,"data-highlighted":g?"":void 0,"aria-selected":f&&g,"data-state":f?"checked":"unchecked","aria-disabled":t||void 0,"data-disabled":t?"":void 0,tabIndex:t?void 0:-1,...s,ref:y,onFocus:(0,l.M)(s.onFocus,()=>v(!0)),onBlur:(0,l.M)(s.onBlur,()=>v(!1)),onPointerUp:(0,l.M)(s.onPointerUp,w),onPointerMove:(0,l.M)(s.onPointerMove,e=>{t?d.onItemLeave?.():e.currentTarget.focus({preventScroll:!0})}),onPointerLeave:(0,l.M)(s.onPointerLeave,e=>{e.currentTarget===document.activeElement&&d.onItemLeave?.()}),onKeyDown:(0,l.M)(s.onKeyDown,e=>{d.searchRef?.current!==""&&" "===e.key||(T.includes(e.key)&&w()," "===e.key&&e.preventDefault())})})})})});ef.displayName=es;var ep="SelectItemText",eu=o.forwardRef((e,a)=>{let{__scopeSelect:i,className:t,style:l,...r}=e,s=I(ep,i),m=J(ep,i),d=ed(ep,i),f=z(ep,i),[p,u]=o.useState(null),h=(0,c.e)(a,e=>u(e),d.onItemTextChange,e=>m.itemTextRefCallback?.(e,d.value,d.disabled)),g=p?.textContent,v=o.useMemo(()=>(0,S.jsx)("option",{value:d.value,disabled:d.disabled,children:g},d.value),[d.disabled,d.value,g]),{onNativeOptionAdd:y,onNativeOptionRemove:k}=f;return(0,w.b)(()=>(y(v),()=>k(v)),[y,k,v]),(0,S.jsxs)(S.Fragment,{children:[(0,S.jsx)(b.WV.span,{id:d.textId,...r,ref:h}),d.isSelected&&s.valueNode&&!s.valueNodeHasChildren?n.createPortal(r.children,s.valueNode):null]})});eu.displayName=ep;var eh="SelectItemIndicator",eg=o.forwardRef((e,a)=>{let{__scopeSelect:i,...o}=e;return ed(eh,i).isSelected?(0,S.jsx)(b.WV.span,{"aria-hidden":!0,...o,ref:a}):null});eg.displayName=eh;var eb="SelectScrollUpButton",ev=o.forwardRef((e,a)=>{let i=J(eb,e.__scopeSelect),n=ee(eb,e.__scopeSelect),[t,l]=o.useState(!1),r=(0,c.e)(a,n.onScrollButtonChange);return(0,w.b)(()=>{if(i.viewport&&i.isPositioned){let e=function(){l(a.scrollTop>0)},a=i.viewport;return e(),a.addEventListener("scroll",e),()=>a.removeEventListener("scroll",e)}},[i.viewport,i.isPositioned]),t?(0,S.jsx)(ew,{...e,ref:r,onAutoScroll:()=>{let{viewport:e,selectedItem:a}=i;e&&a&&(e.scrollTop=e.scrollTop-a.offsetHeight)}}):null});ev.displayName=eb;var ey="SelectScrollDownButton",ek=o.forwardRef((e,a)=>{let i=J(ey,e.__scopeSelect),n=ee(ey,e.__scopeSelect),[t,l]=o.useState(!1),r=(0,c.e)(a,n.onScrollButtonChange);return(0,w.b)(()=>{if(i.viewport&&i.isPositioned){let e=function(){let e=a.scrollHeight-a.clientHeight;l(Math.ceil(a.scrollTop)<e)},a=i.viewport;return e(),a.addEventListener("scroll",e),()=>a.removeEventListener("scroll",e)}},[i.viewport,i.isPositioned]),t?(0,S.jsx)(ew,{...e,ref:r,onAutoScroll:()=>{let{viewport:e,selectedItem:a}=i;e&&a&&(e.scrollTop=e.scrollTop+a.offsetHeight)}}):null});ek.displayName=ey;var ew=o.forwardRef((e,a)=>{let{__scopeSelect:i,onAutoScroll:n,...t}=e,r=J("SelectScrollButton",i),c=o.useRef(null),s=j(i),m=o.useCallback(()=>{null!==c.current&&(window.clearInterval(c.current),c.current=null)},[]);return o.useEffect(()=>()=>m(),[m]),(0,w.b)(()=>{let e=s().find(e=>e.ref.current===document.activeElement);e?.ref.current?.scrollIntoView({block:"nearest"})},[s]),(0,S.jsx)(b.WV.div,{"aria-hidden":!0,...t,ref:a,style:{flexShrink:0,...t.style},onPointerDown:(0,l.M)(t.onPointerDown,()=>{null===c.current&&(c.current=window.setInterval(n,50))}),onPointerMove:(0,l.M)(t.onPointerMove,()=>{r.onItemLeave?.(),null===c.current&&(c.current=window.setInterval(n,50))}),onPointerLeave:(0,l.M)(t.onPointerLeave,()=>{m()})})}),eS=o.forwardRef((e,a)=>{let{__scopeSelect:i,...o}=e;return(0,S.jsx)(b.WV.div,{"aria-hidden":!0,...o,ref:a})});eS.displayName="SelectSeparator";var eR="SelectArrow";function eM(e){return""===e||void 0===e}o.forwardRef((e,a)=>{let{__scopeSelect:i,...o}=e,n=B(i),t=I(eR,i),l=J(eR,i);return t.open&&"popper"===l.position?(0,S.jsx)(h.Eh,{...n,...o,ref:a}):null}).displayName=eR;var eA=o.forwardRef((e,a)=>{let{value:i,...n}=e,t=o.useRef(null),l=(0,c.e)(a,t),r=function(e){let a=o.useRef({value:e,previous:e});return o.useMemo(()=>(a.current.value!==e&&(a.current.previous=a.current.value,a.current.value=e),a.current.previous),[e])}(i);return o.useEffect(()=>{let e=t.current,a=Object.getOwnPropertyDescriptor(window.HTMLSelectElement.prototype,"value").set;if(r!==i&&a){let o=new Event("change",{bubbles:!0});a.call(e,i),e.dispatchEvent(o)}},[r,i]),(0,S.jsx)(R,{asChild:!0,children:(0,S.jsx)("select",{...n,ref:l,defaultValue:i})})});function e_(e){let a=(0,y.W)(e),i=o.useRef(""),n=o.useRef(0),t=o.useCallback(e=>{let o=i.current+e;a(o),function e(a){i.current=a,window.clearTimeout(n.current),""!==a&&(n.current=window.setTimeout(()=>e(""),1e3))}(o)},[a]),l=o.useCallback(()=>{i.current="",window.clearTimeout(n.current)},[]);return o.useEffect(()=>()=>window.clearTimeout(n.current),[]),[i,t,l]}function eT(e,a,i){var o;let n=a.length>1&&Array.from(a).every(e=>e===a[0])?a[0]:a,t=(o=Math.max(i?e.indexOf(i):-1,0),e.map((a,i)=>e[(o+i)%e.length]));1===n.length&&(t=t.filter(e=>e!==i));let l=t.find(e=>e.textValue.toLowerCase().startsWith(n.toLowerCase()));return l!==i?l:void 0}eA.displayName="BubbleSelect";var eE=L,eN=G,ej=F,eC=U,eP=H,eD=$,eB=ei,ex=el,eI=ec,eO=ef,ez=eu,eL=eg,eK=ev,eG=ek,eV=eS},34214:(e,a,i)=>{"use strict";i.d(a,{g7:()=>l});var o=i(17577),n=i(48051),t=i(10326),l=o.forwardRef((e,a)=>{let{children:i,...n}=e,l=o.Children.toArray(i),c=l.find(s);if(c){let e=c.props.children,i=l.map(a=>a!==c?a:o.Children.count(e)>1?o.Children.only(null):o.isValidElement(e)?e.props.children:null);return(0,t.jsx)(r,{...n,ref:a,children:o.isValidElement(e)?o.cloneElement(e,void 0,i):null})}return(0,t.jsx)(r,{...n,ref:a,children:i})});l.displayName="Slot";var r=o.forwardRef((e,a)=>{let{children:i,...t}=e;if(o.isValidElement(i)){let e=function(e){let a=Object.getOwnPropertyDescriptor(e.props,"ref")?.get,i=a&&"isReactWarning"in a&&a.isReactWarning;return i?e.ref:(i=(a=Object.getOwnPropertyDescriptor(e,"ref")?.get)&&"isReactWarning"in a&&a.isReactWarning)?e.props.ref:e.props.ref||e.ref}(i);return o.cloneElement(i,{...function(e,a){let i={...a};for(let o in a){let n=e[o],t=a[o];/^on[A-Z]/.test(o)?n&&t?i[o]=(...e)=>{t(...e),n(...e)}:n&&(i[o]=n):"style"===o?i[o]={...n,...t}:"className"===o&&(i[o]=[n,t].filter(Boolean).join(" "))}return{...e,...i}}(t,i.props),ref:a?(0,n.F)(a,e):e})}return o.Children.count(i)>1?o.Children.only(null):null});r.displayName="SlotClone";var c=({children:e})=>(0,t.jsx)(t.Fragment,{children:e});function s(e){return o.isValidElement(e)&&e.type===c}},55049:(e,a,i)=>{"use strict";i.d(a,{W:()=>n});var o=i(17577);function n(e){let a=o.useRef(e);return o.useEffect(()=>{a.current=e}),o.useMemo(()=>(...e)=>a.current?.(...e),[])}},52067:(e,a,i)=>{"use strict";i.d(a,{T:()=>t});var o=i(17577),n=i(55049);function t({prop:e,defaultProp:a,onChange:i=()=>{}}){let[t,l]=function({defaultProp:e,onChange:a}){let i=o.useState(e),[t]=i,l=o.useRef(t),r=(0,n.W)(a);return o.useEffect(()=>{l.current!==t&&(r(t),l.current=t)},[t,l,r]),i}({defaultProp:a,onChange:i}),r=void 0!==e,c=r?e:t,s=(0,n.W)(i);return[c,o.useCallback(a=>{if(r){let i="function"==typeof a?a(e):a;i!==e&&s(i)}else l(a)},[r,e,l,s])]}},65819:(e,a,i)=>{"use strict";i.d(a,{b:()=>n});var o=i(17577),n=globalThis?.document?o.useLayoutEffect:()=>{}},98285:(e,a,i)=>{"use strict";function o(e,a){if(!Object.prototype.hasOwnProperty.call(e,a))throw TypeError("attempted to use private field on non-instance");return e}i.r(a),i.d(a,{_:()=>o,_class_private_field_loose_base:()=>o})},78817:(e,a,i)=>{"use strict";i.r(a),i.d(a,{_:()=>n,_class_private_field_loose_key:()=>n});var o=0;function n(e){return"__private_"+o+++"_"+e}},91174:(e,a,i)=>{"use strict";function o(e){return e&&e.__esModule?e:{default:e}}i.r(a),i.d(a,{_:()=>o,_interop_require_default:()=>o})},58374:(e,a,i)=>{"use strict";function o(e){if("function"!=typeof WeakMap)return null;var a=new WeakMap,i=new WeakMap;return(o=function(e){return e?i:a})(e)}function n(e,a){if(!a&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var i=o(a);if(i&&i.has(e))return i.get(e);var n={__proto__:null},t=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if("default"!==l&&Object.prototype.hasOwnProperty.call(e,l)){var r=t?Object.getOwnPropertyDescriptor(e,l):null;r&&(r.get||r.set)?Object.defineProperty(n,l,r):n[l]=e[l]}return n.default=e,i&&i.set(e,n),n}i.r(a),i.d(a,{_:()=>n,_interop_require_wildcard:()=>n})},28671:(e,a,i)=>{"use strict";i.d(a,{j:()=>t});let o=e=>"boolean"==typeof e?"".concat(e):0===e?"0":e,n=function(){for(var e,a,i=0,o="";i<arguments.length;)(e=arguments[i++])&&(a=function e(a){var i,o,n="";if("string"==typeof a||"number"==typeof a)n+=a;else if("object"==typeof a){if(Array.isArray(a))for(i=0;i<a.length;i++)a[i]&&(o=e(a[i]))&&(n&&(n+=" "),n+=o);else for(i in a)a[i]&&(n&&(n+=" "),n+=i)}return n}(e))&&(o&&(o+=" "),o+=a);return o},t=(e,a)=>i=>{var t;if((null==a?void 0:a.variants)==null)return n(e,null==i?void 0:i.class,null==i?void 0:i.className);let{variants:l,defaultVariants:r}=a,c=Object.keys(l).map(e=>{let a=null==i?void 0:i[e],n=null==r?void 0:r[e];if(null===a)return null;let t=o(a)||o(n);return l[e][t]}),s=i&&Object.entries(i).reduce((e,a)=>{let[i,o]=a;return void 0===o||(e[i]=o),e},{});return n(e,c,null==a?void 0:null===(t=a.compoundVariants)||void 0===t?void 0:t.reduce((e,a)=>{let{class:i,className:o,...n}=a;return Object.entries(n).every(e=>{let[a,i]=e;return Array.isArray(i)?i.includes({...r,...s}[a]):({...r,...s})[a]===i})?[...e,i,o]:e},[]),null==i?void 0:i.class,null==i?void 0:i.className)}},41135:(e,a,i)=>{"use strict";function o(){for(var e,a,i=0,o="",n=arguments.length;i<n;i++)(e=arguments[i])&&(a=function e(a){var i,o,n="";if("string"==typeof a||"number"==typeof a)n+=a;else if("object"==typeof a){if(Array.isArray(a)){var t=a.length;for(i=0;i<t;i++)a[i]&&(o=e(a[i]))&&(n&&(n+=" "),n+=o)}else for(o in a)a[o]&&(n&&(n+=" "),n+=o)}return n}(e))&&(o&&(o+=" "),o+=a);return o}i.d(a,{W:()=>o})},31009:(e,a,i)=>{"use strict";i.d(a,{m6:()=>I});let o=/^\[(.+)\]$/;function n(e,a){let i=e;return a.split("-").forEach(e=>{i.nextPart.has(e)||i.nextPart.set(e,{nextPart:new Map,validators:[]}),i=i.nextPart.get(e)}),i}let t=/\s+/;function l(){let e,a,i=0,o="";for(;i<arguments.length;)(e=arguments[i++])&&(a=function e(a){let i;if("string"==typeof a)return a;let o="";for(let n=0;n<a.length;n++)a[n]&&(i=e(a[n]))&&(o&&(o+=" "),o+=i);return o}(e))&&(o&&(o+=" "),o+=a);return o}function r(e){let a=a=>a[e]||[];return a.isThemeGetter=!0,a}let c=/^\[(?:([a-z-]+):)?(.+)\]$/i,s=/^\d+\/\d+$/,m=new Set(["px","full","screen"]),d=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,f=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,p=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,u=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,h=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;function g(e){return v(e)||m.has(e)||s.test(e)}function b(e){return C(e,"length",P)}function v(e){return!!e&&!Number.isNaN(Number(e))}function y(e){return C(e,"number",v)}function k(e){return!!e&&Number.isInteger(Number(e))}function w(e){return e.endsWith("%")&&v(e.slice(0,-1))}function S(e){return c.test(e)}function R(e){return d.test(e)}let M=new Set(["length","size","percentage"]);function A(e){return C(e,M,D)}function _(e){return C(e,"position",D)}let T=new Set(["image","url"]);function E(e){return C(e,T,x)}function N(e){return C(e,"",B)}function j(){return!0}function C(e,a,i){let o=c.exec(e);return!!o&&(o[1]?"string"==typeof a?o[1]===a:a.has(o[1]):i(o[2]))}function P(e){return f.test(e)&&!p.test(e)}function D(){return!1}function B(e){return u.test(e)}function x(e){return h.test(e)}Symbol.toStringTag;let I=function(e,...a){let i,r,c;let s=function(t){var l;return r=(i={cache:function(e){if(e<1)return{get:()=>void 0,set:()=>{}};let a=0,i=new Map,o=new Map;function n(n,t){i.set(n,t),++a>e&&(a=0,o=i,i=new Map)}return{get(e){let a=i.get(e);return void 0!==a?a:void 0!==(a=o.get(e))?(n(e,a),a):void 0},set(e,a){i.has(e)?i.set(e,a):n(e,a)}}}((l=a.reduce((e,a)=>a(e),e())).cacheSize),splitModifiers:function(e){let a=e.separator,i=1===a.length,o=a[0],n=a.length;return function(e){let t;let l=[],r=0,c=0;for(let s=0;s<e.length;s++){let m=e[s];if(0===r){if(m===o&&(i||e.slice(s,s+n)===a)){l.push(e.slice(c,s)),c=s+n;continue}if("/"===m){t=s;continue}}"["===m?r++:"]"===m&&r--}let s=0===l.length?e:e.substring(c),m=s.startsWith("!"),d=m?s.substring(1):s;return{modifiers:l,hasImportantModifier:m,baseClassName:d,maybePostfixModifierPosition:t&&t>c?t-c:void 0}}}(l),...function(e){let a=function(e){var a;let{theme:i,prefix:o}=e,t={nextPart:new Map,validators:[]};return(a=Object.entries(e.classGroups),o?a.map(([e,a])=>[e,a.map(e=>"string"==typeof e?o+e:"object"==typeof e?Object.fromEntries(Object.entries(e).map(([e,a])=>[o+e,a])):e)]):a).forEach(([e,a])=>{(function e(a,i,o,t){a.forEach(a=>{if("string"==typeof a){(""===a?i:n(i,a)).classGroupId=o;return}if("function"==typeof a){if(a.isThemeGetter){e(a(t),i,o,t);return}i.validators.push({validator:a,classGroupId:o});return}Object.entries(a).forEach(([a,l])=>{e(l,n(i,a),o,t)})})})(a,t,e,i)}),t}(e),{conflictingClassGroups:i,conflictingClassGroupModifiers:t}=e;return{getClassGroupId:function(e){let i=e.split("-");return""===i[0]&&1!==i.length&&i.shift(),function e(a,i){if(0===a.length)return i.classGroupId;let o=a[0],n=i.nextPart.get(o),t=n?e(a.slice(1),n):void 0;if(t)return t;if(0===i.validators.length)return;let l=a.join("-");return i.validators.find(({validator:e})=>e(l))?.classGroupId}(i,a)||function(e){if(o.test(e)){let a=o.exec(e)[1],i=a?.substring(0,a.indexOf(":"));if(i)return"arbitrary.."+i}}(e)},getConflictingClassGroupIds:function(e,a){let o=i[e]||[];return a&&t[e]?[...o,...t[e]]:o}}}(l)}).cache.get,c=i.cache.set,s=m,m(t)};function m(e){let a=r(e);if(a)return a;let o=function(e,a){let{splitModifiers:i,getClassGroupId:o,getConflictingClassGroupIds:n}=a,l=new Set;return e.trim().split(t).map(e=>{let{modifiers:a,hasImportantModifier:n,baseClassName:t,maybePostfixModifierPosition:l}=i(e),r=o(l?t.substring(0,l):t),c=!!l;if(!r){if(!l||!(r=o(t)))return{isTailwindClass:!1,originalClassName:e};c=!1}let s=(function(e){if(e.length<=1)return e;let a=[],i=[];return e.forEach(e=>{"["===e[0]?(a.push(...i.sort(),e),i=[]):i.push(e)}),a.push(...i.sort()),a})(a).join(":");return{isTailwindClass:!0,modifierId:n?s+"!":s,classGroupId:r,originalClassName:e,hasPostfixModifier:c}}).reverse().filter(e=>{if(!e.isTailwindClass)return!0;let{modifierId:a,classGroupId:i,hasPostfixModifier:o}=e,t=a+i;return!l.has(t)&&(l.add(t),n(i,o).forEach(e=>l.add(a+e)),!0)}).reverse().map(e=>e.originalClassName).join(" ")}(e,i);return c(e,o),o}return function(){return s(l.apply(null,arguments))}}(function(){let e=r("colors"),a=r("spacing"),i=r("blur"),o=r("brightness"),n=r("borderColor"),t=r("borderRadius"),l=r("borderSpacing"),c=r("borderWidth"),s=r("contrast"),m=r("grayscale"),d=r("hueRotate"),f=r("invert"),p=r("gap"),u=r("gradientColorStops"),h=r("gradientColorStopPositions"),M=r("inset"),T=r("margin"),C=r("opacity"),P=r("padding"),D=r("saturate"),B=r("scale"),x=r("sepia"),I=r("skew"),O=r("space"),z=r("translate"),L=()=>["auto","contain","none"],K=()=>["auto","hidden","clip","visible","scroll"],G=()=>["auto",S,a],V=()=>[S,a],F=()=>["",g,b],U=()=>["auto",v,S],H=()=>["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top"],q=()=>["solid","dashed","dotted","double","none"],$=()=>["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],W=()=>["start","end","center","between","around","evenly","stretch"],J=()=>["","0",S],Z=()=>["auto","avoid","all","avoid-page","page","left","right","column"],Y=()=>[v,y],X=()=>[v,S];return{cacheSize:500,separator:":",theme:{colors:[j],spacing:[g,b],blur:["none","",R,S],brightness:Y(),borderColor:[e],borderRadius:["none","","full",R,S],borderSpacing:V(),borderWidth:F(),contrast:Y(),grayscale:J(),hueRotate:X(),invert:J(),gap:V(),gradientColorStops:[e],gradientColorStopPositions:[w,b],inset:G(),margin:G(),opacity:Y(),padding:V(),saturate:Y(),scale:Y(),sepia:J(),skew:X(),space:V(),translate:V()},classGroups:{aspect:[{aspect:["auto","square","video",S]}],container:["container"],columns:[{columns:[R]}],"break-after":[{"break-after":Z()}],"break-before":[{"break-before":Z()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:[...H(),S]}],overflow:[{overflow:K()}],"overflow-x":[{"overflow-x":K()}],"overflow-y":[{"overflow-y":K()}],overscroll:[{overscroll:L()}],"overscroll-x":[{"overscroll-x":L()}],"overscroll-y":[{"overscroll-y":L()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:[M]}],"inset-x":[{"inset-x":[M]}],"inset-y":[{"inset-y":[M]}],start:[{start:[M]}],end:[{end:[M]}],top:[{top:[M]}],right:[{right:[M]}],bottom:[{bottom:[M]}],left:[{left:[M]}],visibility:["visible","invisible","collapse"],z:[{z:["auto",k,S]}],basis:[{basis:G()}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["wrap","wrap-reverse","nowrap"]}],flex:[{flex:["1","auto","initial","none",S]}],grow:[{grow:J()}],shrink:[{shrink:J()}],order:[{order:["first","last","none",k,S]}],"grid-cols":[{"grid-cols":[j]}],"col-start-end":[{col:["auto",{span:["full",k,S]},S]}],"col-start":[{"col-start":U()}],"col-end":[{"col-end":U()}],"grid-rows":[{"grid-rows":[j]}],"row-start-end":[{row:["auto",{span:[k,S]},S]}],"row-start":[{"row-start":U()}],"row-end":[{"row-end":U()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":["auto","min","max","fr",S]}],"auto-rows":[{"auto-rows":["auto","min","max","fr",S]}],gap:[{gap:[p]}],"gap-x":[{"gap-x":[p]}],"gap-y":[{"gap-y":[p]}],"justify-content":[{justify:["normal",...W()]}],"justify-items":[{"justify-items":["start","end","center","stretch"]}],"justify-self":[{"justify-self":["auto","start","end","center","stretch"]}],"align-content":[{content:["normal",...W(),"baseline"]}],"align-items":[{items:["start","end","center","baseline","stretch"]}],"align-self":[{self:["auto","start","end","center","stretch","baseline"]}],"place-content":[{"place-content":[...W(),"baseline"]}],"place-items":[{"place-items":["start","end","center","baseline","stretch"]}],"place-self":[{"place-self":["auto","start","end","center","stretch"]}],p:[{p:[P]}],px:[{px:[P]}],py:[{py:[P]}],ps:[{ps:[P]}],pe:[{pe:[P]}],pt:[{pt:[P]}],pr:[{pr:[P]}],pb:[{pb:[P]}],pl:[{pl:[P]}],m:[{m:[T]}],mx:[{mx:[T]}],my:[{my:[T]}],ms:[{ms:[T]}],me:[{me:[T]}],mt:[{mt:[T]}],mr:[{mr:[T]}],mb:[{mb:[T]}],ml:[{ml:[T]}],"space-x":[{"space-x":[O]}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":[O]}],"space-y-reverse":["space-y-reverse"],w:[{w:["auto","min","max","fit","svw","lvw","dvw",S,a]}],"min-w":[{"min-w":[S,a,"min","max","fit"]}],"max-w":[{"max-w":[S,a,"none","full","min","max","fit","prose",{screen:[R]},R]}],h:[{h:[S,a,"auto","min","max","fit","svh","lvh","dvh"]}],"min-h":[{"min-h":[S,a,"min","max","fit","svh","lvh","dvh"]}],"max-h":[{"max-h":[S,a,"min","max","fit","svh","lvh","dvh"]}],size:[{size:[S,a,"auto","min","max","fit"]}],"font-size":[{text:["base",R,b]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:["thin","extralight","light","normal","medium","semibold","bold","extrabold","black",y]}],"font-family":[{font:[j]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractons"],tracking:[{tracking:["tighter","tight","normal","wide","wider","widest",S]}],"line-clamp":[{"line-clamp":["none",v,y]}],leading:[{leading:["none","tight","snug","normal","relaxed","loose",g,S]}],"list-image":[{"list-image":["none",S]}],"list-style-type":[{list:["none","disc","decimal",S]}],"list-style-position":[{list:["inside","outside"]}],"placeholder-color":[{placeholder:[e]}],"placeholder-opacity":[{"placeholder-opacity":[C]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"text-color":[{text:[e]}],"text-opacity":[{"text-opacity":[C]}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[...q(),"wavy"]}],"text-decoration-thickness":[{decoration:["auto","from-font",g,b]}],"underline-offset":[{"underline-offset":["auto",g,S]}],"text-decoration-color":[{decoration:[e]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:V()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",S]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",S]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-opacity":[{"bg-opacity":[C]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:[...H(),_]}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","round","space"]}]}],"bg-size":[{bg:["auto","cover","contain",A]}],"bg-image":[{bg:["none",{"gradient-to":["t","tr","r","br","b","bl","l","tl"]},E]}],"bg-color":[{bg:[e]}],"gradient-from-pos":[{from:[h]}],"gradient-via-pos":[{via:[h]}],"gradient-to-pos":[{to:[h]}],"gradient-from":[{from:[u]}],"gradient-via":[{via:[u]}],"gradient-to":[{to:[u]}],rounded:[{rounded:[t]}],"rounded-s":[{"rounded-s":[t]}],"rounded-e":[{"rounded-e":[t]}],"rounded-t":[{"rounded-t":[t]}],"rounded-r":[{"rounded-r":[t]}],"rounded-b":[{"rounded-b":[t]}],"rounded-l":[{"rounded-l":[t]}],"rounded-ss":[{"rounded-ss":[t]}],"rounded-se":[{"rounded-se":[t]}],"rounded-ee":[{"rounded-ee":[t]}],"rounded-es":[{"rounded-es":[t]}],"rounded-tl":[{"rounded-tl":[t]}],"rounded-tr":[{"rounded-tr":[t]}],"rounded-br":[{"rounded-br":[t]}],"rounded-bl":[{"rounded-bl":[t]}],"border-w":[{border:[c]}],"border-w-x":[{"border-x":[c]}],"border-w-y":[{"border-y":[c]}],"border-w-s":[{"border-s":[c]}],"border-w-e":[{"border-e":[c]}],"border-w-t":[{"border-t":[c]}],"border-w-r":[{"border-r":[c]}],"border-w-b":[{"border-b":[c]}],"border-w-l":[{"border-l":[c]}],"border-opacity":[{"border-opacity":[C]}],"border-style":[{border:[...q(),"hidden"]}],"divide-x":[{"divide-x":[c]}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":[c]}],"divide-y-reverse":["divide-y-reverse"],"divide-opacity":[{"divide-opacity":[C]}],"divide-style":[{divide:q()}],"border-color":[{border:[n]}],"border-color-x":[{"border-x":[n]}],"border-color-y":[{"border-y":[n]}],"border-color-t":[{"border-t":[n]}],"border-color-r":[{"border-r":[n]}],"border-color-b":[{"border-b":[n]}],"border-color-l":[{"border-l":[n]}],"divide-color":[{divide:[n]}],"outline-style":[{outline:["",...q()]}],"outline-offset":[{"outline-offset":[g,S]}],"outline-w":[{outline:[g,b]}],"outline-color":[{outline:[e]}],"ring-w":[{ring:F()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:[e]}],"ring-opacity":[{"ring-opacity":[C]}],"ring-offset-w":[{"ring-offset":[g,b]}],"ring-offset-color":[{"ring-offset":[e]}],shadow:[{shadow:["","inner","none",R,N]}],"shadow-color":[{shadow:[j]}],opacity:[{opacity:[C]}],"mix-blend":[{"mix-blend":[...$(),"plus-lighter","plus-darker"]}],"bg-blend":[{"bg-blend":$()}],filter:[{filter:["","none"]}],blur:[{blur:[i]}],brightness:[{brightness:[o]}],contrast:[{contrast:[s]}],"drop-shadow":[{"drop-shadow":["","none",R,S]}],grayscale:[{grayscale:[m]}],"hue-rotate":[{"hue-rotate":[d]}],invert:[{invert:[f]}],saturate:[{saturate:[D]}],sepia:[{sepia:[x]}],"backdrop-filter":[{"backdrop-filter":["","none"]}],"backdrop-blur":[{"backdrop-blur":[i]}],"backdrop-brightness":[{"backdrop-brightness":[o]}],"backdrop-contrast":[{"backdrop-contrast":[s]}],"backdrop-grayscale":[{"backdrop-grayscale":[m]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[d]}],"backdrop-invert":[{"backdrop-invert":[f]}],"backdrop-opacity":[{"backdrop-opacity":[C]}],"backdrop-saturate":[{"backdrop-saturate":[D]}],"backdrop-sepia":[{"backdrop-sepia":[x]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":[l]}],"border-spacing-x":[{"border-spacing-x":[l]}],"border-spacing-y":[{"border-spacing-y":[l]}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["none","all","","colors","opacity","shadow","transform",S]}],duration:[{duration:X()}],ease:[{ease:["linear","in","out","in-out",S]}],delay:[{delay:X()}],animate:[{animate:["none","spin","ping","pulse","bounce",S]}],transform:[{transform:["","gpu","none"]}],scale:[{scale:[B]}],"scale-x":[{"scale-x":[B]}],"scale-y":[{"scale-y":[B]}],rotate:[{rotate:[k,S]}],"translate-x":[{"translate-x":[z]}],"translate-y":[{"translate-y":[z]}],"skew-x":[{"skew-x":[I]}],"skew-y":[{"skew-y":[I]}],"transform-origin":[{origin:["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",S]}],accent:[{accent:["auto",e]}],appearance:[{appearance:["none","auto"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",S]}],"caret-color":[{caret:[e]}],"pointer-events":[{"pointer-events":["none","auto"]}],resize:[{resize:["none","y","x",""]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":V()}],"scroll-mx":[{"scroll-mx":V()}],"scroll-my":[{"scroll-my":V()}],"scroll-ms":[{"scroll-ms":V()}],"scroll-me":[{"scroll-me":V()}],"scroll-mt":[{"scroll-mt":V()}],"scroll-mr":[{"scroll-mr":V()}],"scroll-mb":[{"scroll-mb":V()}],"scroll-ml":[{"scroll-ml":V()}],"scroll-p":[{"scroll-p":V()}],"scroll-px":[{"scroll-px":V()}],"scroll-py":[{"scroll-py":V()}],"scroll-ps":[{"scroll-ps":V()}],"scroll-pe":[{"scroll-pe":V()}],"scroll-pt":[{"scroll-pt":V()}],"scroll-pr":[{"scroll-pr":V()}],"scroll-pb":[{"scroll-pb":V()}],"scroll-pl":[{"scroll-pl":V()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",S]}],fill:[{fill:[e,"none"]}],"stroke-w":[{stroke:[g,b,y]}],stroke:[{stroke:[e,"none"]}],sr:["sr-only","not-sr-only"],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]}}})},18590:(e,a,i)=>{"use strict";i.d(a,{Z:()=>o});let o=JSON.parse('[{"name":{"common":"Aruba","official":"Aruba","native":{"nld":{"official":"Aruba","common":"Aruba"},"pap":{"official":"Aruba","common":"Aruba"}}},"tld":[".aw"],"cca2":"AW","ccn3":"533","cca3":"ABW","cioc":"ARU","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"AWG":{"name":"Aruban florin","symbol":"ƒ"}},"idd":{"root":"+2","suffixes":["97"]},"capital":["Oranjestad"],"altSpellings":["AW"],"region":"Americas","subregion":"Caribbean","languages":{"nld":"Dutch","pap":"Papiamento"},"translations":{"ces":{"official":"Aruba","common":"Aruba"},"deu":{"official":"Aruba","common":"Aruba"},"est":{"official":"Aruba","common":"Aruba"},"fin":{"official":"Aruba","common":"Aruba"},"fra":{"official":"Aruba","common":"Aruba"},"hrv":{"official":"Aruba","common":"Aruba"},"hun":{"official":"Aruba","common":"Aruba"},"ita":{"official":"Aruba","common":"Aruba"},"jpn":{"official":"アルバ","common":"アルバ"},"kor":{"official":"아루바","common":"아루바"},"nld":{"official":"Aruba","common":"Aruba"},"per":{"official":"آروبا","common":"آروبا"},"pol":{"official":"Aruba","common":"Aruba"},"por":{"official":"Aruba","common":"Aruba"},"rus":{"official":"Аруба","common":"Аруба"},"slk":{"official":"Aruba","common":"Aruba"},"spa":{"official":"Aruba","common":"Aruba"},"swe":{"official":"Aruba","common":"Aruba"},"urd":{"official":"اروبا","common":"اروبا"},"zho":{"official":"阿鲁巴","common":"阿鲁巴"}},"latlng":[12.5,-69.96666666],"landlocked":false,"borders":[],"area":180,"flag":"\uD83C\uDDE6\uD83C\uDDFC","demonyms":{"eng":{"f":"Aruban","m":"Aruban"},"fra":{"f":"Arubaise","m":"Arubais"}}},{"name":{"common":"Afghanistan","official":"Islamic Republic of Afghanistan","native":{"prs":{"official":"جمهوری اسلامی افغانستان","common":"افغانستان"},"pus":{"official":"د افغانستان اسلامي جمهوریت","common":"افغانستان"},"tuk":{"official":"Owganystan Yslam Respublikasy","common":"Owganystan"}}},"tld":[".af"],"cca2":"AF","ccn3":"004","cca3":"AFG","cioc":"AFG","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AFN":{"name":"Afghan afghani","symbol":"؋"}},"idd":{"root":"+9","suffixes":["3"]},"capital":["Kabul"],"altSpellings":["AF","Afġānistān"],"region":"Asia","subregion":"Southern Asia","languages":{"prs":"Dari","pus":"Pashto","tuk":"Turkmen"},"translations":{"ces":{"official":"Afgh\xe1nsk\xe1 isl\xe1msk\xe1 republika","common":"Afgh\xe1nist\xe1n"},"cym":{"official":"Gweriniaeth Islamaidd Affganistan","common":"Affganistan"},"deu":{"official":"Islamische Republik Afghanistan","common":"Afghanistan"},"est":{"official":"Afganistani Islamivabariik","common":"Afganistan"},"fin":{"official":"Afganistanin islamilainen tasavalta","common":"Afganistan"},"fra":{"official":"R\xe9publique islamique d\'Afghanistan","common":"Afghanistan"},"hrv":{"official":"Islamska Republika Afganistan","common":"Afganistan"},"hun":{"official":"Afganiszt\xe1ni Iszl\xe1m K\xf6zt\xe1rsas\xe1g","common":"Afganiszt\xe1n"},"ita":{"official":"Repubblica islamica dell\'Afghanistan","common":"Afghanistan"},"jpn":{"official":"アフガニスタン\xb7イスラム共和国","common":"アフガニスタン"},"kor":{"official":"아프가니스탄 이슬람 공화국","common":"아프가니스탄"},"nld":{"official":"Islamitische Republiek Afghanistan","common":"Afghanistan"},"per":{"official":"جمهوری اسلامی افغانستان","common":"افغانستان"},"pol":{"official":"Islamska Republika Afganistanu","common":"Afganistan"},"por":{"official":"Rep\xfablica Isl\xe2mica do Afeganist\xe3o","common":"Afeganist\xe3o"},"rus":{"official":"Исламская Республика Афганистан","common":"Афганистан"},"slk":{"official":"Afg\xe1nsky islamsk\xfd št\xe1t","common":"Afganistan"},"spa":{"official":"Rep\xfablica Isl\xe1mica de Afganist\xe1n","common":"Afganist\xe1n"},"swe":{"official":"Islamiska republiken Afghanistan","common":"Afghanistan"},"urd":{"official":"اسلامی جمہوریہ افغانستان","common":"افغانستان"},"zho":{"official":"阿富汗伊斯兰共和国","common":"阿富汗"}},"latlng":[33,65],"landlocked":true,"borders":["IRN","PAK","TKM","UZB","TJK","CHN"],"area":652230,"flag":"\uD83C\uDDE6\uD83C\uDDEB","demonyms":{"eng":{"f":"Afghan","m":"Afghan"},"fra":{"f":"Afghane","m":"Afghan"}}},{"name":{"common":"Angola","official":"Republic of Angola","native":{"por":{"official":"Rep\xfablica de Angola","common":"Angola"}}},"tld":[".ao"],"cca2":"AO","ccn3":"024","cca3":"AGO","cioc":"ANG","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AOA":{"name":"Angolan kwanza","symbol":"Kz"}},"idd":{"root":"+2","suffixes":["44"]},"capital":["Luanda"],"altSpellings":["AO","Rep\xfablica de Angola","ʁɛpublika de an\'ɡɔla"],"region":"Africa","subregion":"Middle Africa","languages":{"por":"Portuguese"},"translations":{"ces":{"official":"Angolsk\xe1 republika","common":"Angola"},"cym":{"official":"Gweriniaeth Angola","common":"Angola"},"deu":{"official":"Republik Angola","common":"Angola"},"est":{"official":"Angola Vabariik","common":"Angola"},"fin":{"official":"Angolan tasavalta","common":"Angola"},"fra":{"official":"R\xe9publique d\'Angola","common":"Angola"},"hrv":{"official":"Republika Angola","common":"Angola"},"hun":{"official":"Angola","common":"Angola"},"ita":{"official":"Repubblica dell\'Angola","common":"Angola"},"jpn":{"official":"アンゴラ共和国","common":"アンゴラ"},"kor":{"official":"앙골라 공화국","common":"앙골라"},"nld":{"official":"Republiek Angola","common":"Angola"},"per":{"official":"جمهوری آنگولا","common":"آنگولا"},"pol":{"official":"Republika Angoli","common":"Angola"},"por":{"official":"Rep\xfablica de Angola","common":"Angola"},"rus":{"official":"Республика Ангола","common":"Ангола"},"slk":{"official":"Angolsk\xe1 republika","common":"Angola"},"spa":{"official":"Rep\xfablica de Angola","common":"Angola"},"swe":{"official":"Republiken Angola","common":"Angola"},"urd":{"official":"جمہوریہ انگولہ","common":"انگولہ"},"zho":{"official":"安哥拉共和国","common":"安哥拉"}},"latlng":[-12.5,18.5],"landlocked":false,"borders":["COG","COD","ZMB","NAM"],"area":1246700,"flag":"\uD83C\uDDE6\uD83C\uDDF4","demonyms":{"eng":{"f":"Angolan","m":"Angolan"},"fra":{"f":"Angolaise","m":"Angolais"}}},{"name":{"common":"Anguilla","official":"Anguilla","native":{"eng":{"official":"Anguilla","common":"Anguilla"}}},"tld":[".ai"],"cca2":"AI","ccn3":"660","cca3":"AIA","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["264"]},"capital":["The Valley"],"altSpellings":["AI"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Anguilla","common":"Anguilla"},"deu":{"official":"Anguilla","common":"Anguilla"},"est":{"official":"Anguilla","common":"Anguilla"},"fin":{"official":"Anguilla","common":"Anguilla"},"fra":{"official":"Anguilla","common":"Anguilla"},"hrv":{"official":"Anguilla","common":"Angvila"},"hun":{"official":"Anguilla","common":"Anguilla"},"ita":{"official":"Anguilla","common":"Anguilla"},"jpn":{"official":"アングィラ","common":"アンギラ"},"kor":{"official":"앵귈라","common":"앵귈라"},"nld":{"official":"Anguilla","common":"Anguilla"},"per":{"official":"آنگویلا","common":"آنگویلا"},"pol":{"official":"Anguilla","common":"Anguilla"},"por":{"official":"Anguilla","common":"Anguilla"},"rus":{"official":"Ангилья","common":"Ангилья"},"slk":{"official":"Anguilla","common":"Anguilla"},"spa":{"official":"Anguila","common":"Anguilla"},"swe":{"official":"Anguilla","common":"Anguilla"},"urd":{"official":"اینگویلا","common":"اینگویلا"},"zho":{"official":"安圭拉","common":"安圭拉"}},"latlng":[18.25,-63.16666666],"landlocked":false,"borders":[],"area":91,"flag":"\uD83C\uDDE6\uD83C\uDDEE","demonyms":{"eng":{"f":"Anguillian","m":"Anguillian"},"fra":{"f":"Anguillane","m":"Anguillan"}}},{"name":{"common":"\xc5land Islands","official":"\xc5land Islands","native":{"swe":{"official":"Landskapet \xc5land","common":"\xc5land"}}},"tld":[".ax"],"cca2":"AX","ccn3":"248","cca3":"ALA","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["5818"]},"capital":["Mariehamn"],"altSpellings":["AX","Aaland","Aland","Ahvenanmaa"],"region":"Europe","subregion":"Northern Europe","languages":{"swe":"Swedish"},"translations":{"ces":{"official":"\xc5landsk\xe9 ostrovy","common":"\xc5landy"},"deu":{"official":"\xc5land-Inseln","common":"\xc5land"},"est":{"official":"Ahvenamaa maakond","common":"Ahvenamaa"},"fin":{"official":"Ahvenanmaan maakunta","common":"Ahvenanmaa"},"fra":{"official":"Ahvenanmaa","common":"Ahvenanmaa"},"hrv":{"official":"Aland Islands","common":"\xc5landski otoci"},"hun":{"official":"\xc5land-szigetek","common":"\xc5land-szigetek"},"ita":{"official":"Isole \xc5land","common":"Isole Aland"},"jpn":{"official":"オーランド諸島","common":"オーランド諸島"},"kor":{"official":"올란드 제도","common":"올란드 제도"},"nld":{"official":"\xc5land eilanden","common":"\xc5landeilanden"},"per":{"official":"جزایر الند","common":"جزایر الند"},"pol":{"official":"Wyspy Alandzkie","common":"Wyspy Alandzkie"},"por":{"official":"Ilhas \xc5land","common":"Al\xe2ndia"},"rus":{"official":"Аландские острова","common":"Аландские острова"},"slk":{"official":"Alandsk\xe9 ostrovy","common":"Alandy"},"spa":{"official":"Islas \xc5land","common":"Alandia"},"swe":{"official":"\xc5land","common":"\xc5land"},"urd":{"official":"جزائر اولند","common":"جزائر اولند"},"zho":{"official":"奥兰群岛","common":"奥兰群岛"}},"latlng":[60.116667,19.9],"landlocked":false,"borders":[],"area":1580,"flag":"\uD83C\uDDE6\uD83C\uDDFD","demonyms":{"eng":{"f":"\xc5landish","m":"\xc5landish"},"fra":{"f":"\xc5landaise","m":"\xc5landais"}}},{"name":{"common":"Albania","official":"Republic of Albania","native":{"sqi":{"official":"Republika e Shqip\xebris\xeb","common":"Shqip\xebria"}}},"tld":[".al"],"cca2":"AL","ccn3":"008","cca3":"ALB","cioc":"ALB","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ALL":{"name":"Albanian lek","symbol":"L"}},"idd":{"root":"+3","suffixes":["55"]},"capital":["Tirana"],"altSpellings":["AL","Shqip\xebri","Shqip\xebria","Shqipnia"],"region":"Europe","subregion":"Southeast Europe","languages":{"sqi":"Albanian"},"translations":{"ces":{"official":"Alb\xe1nsk\xe1 republika","common":"Alb\xe1nie"},"cym":{"official":"Gweriniaeth Albania","common":"Albania"},"deu":{"official":"Republik Albanien","common":"Albanien"},"est":{"official":"Albaania Vabariik","common":"Albaania"},"fin":{"official":"Albanian tasavalta","common":"Albania"},"fra":{"official":"R\xe9publique d\'Albanie","common":"Albanie"},"hrv":{"official":"Republika Albanija","common":"Albanija"},"hun":{"official":"Alb\xe1n K\xf6zt\xe1rsas\xe1g","common":"Alb\xe1nia"},"ita":{"official":"Repubblica d\'Albania","common":"Albania"},"jpn":{"official":"アルバニア共和国","common":"アルバニア"},"kor":{"official":"알바니아 공화국","common":"알바니아"},"nld":{"official":"Republiek Albani\xeb","common":"Albani\xeb"},"per":{"official":"جمهوری آلبانی","common":"آلبانی"},"pol":{"official":"Republika Albanii","common":"Albania"},"por":{"official":"Rep\xfablica da Alb\xe2nia","common":"Alb\xe2nia"},"rus":{"official":"Республика Албания","common":"Албания"},"slk":{"official":"Alb\xe1nska republika","common":"Alb\xe1nsko"},"spa":{"official":"Rep\xfablica de Albania","common":"Albania"},"swe":{"official":"Republiken Albanien","common":"Albanien"},"urd":{"official":"جمہوریہ البانیا","common":"البانیا"},"zho":{"official":"阿尔巴尼亚共和国","common":"阿尔巴尼亚"}},"latlng":[41,20],"landlocked":false,"borders":["MNE","GRC","MKD","UNK"],"area":28748,"flag":"\uD83C\uDDE6\uD83C\uDDF1","demonyms":{"eng":{"f":"Albanian","m":"Albanian"},"fra":{"f":"Albanaise","m":"Albanais"}}},{"name":{"common":"Andorra","official":"Principality of Andorra","native":{"cat":{"official":"Principat d\'Andorra","common":"Andorra"}}},"tld":[".ad"],"cca2":"AD","ccn3":"020","cca3":"AND","cioc":"AND","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["76"]},"capital":["Andorra la Vella"],"altSpellings":["AD","Principality of Andorra","Principat d\'Andorra"],"region":"Europe","subregion":"Southern Europe","languages":{"cat":"Catalan"},"translations":{"ces":{"official":"Andorrsk\xe9 kn\xedžectv\xed","common":"Andorra"},"cym":{"official":"Tywysogaeth Andorra","common":"Andorra"},"deu":{"official":"F\xfcrstentum Andorra","common":"Andorra"},"est":{"official":"Andorra V\xfcrstiriik","common":"Andorra"},"fin":{"official":"Andorran ruhtinaskunta","common":"Andorra"},"fra":{"official":"Principaut\xe9 d\'Andorre","common":"Andorre"},"hrv":{"official":"Kneževina Andora","common":"Andora"},"hun":{"official":"Andorra","common":"Andorra"},"ita":{"official":"Principato di Andorra","common":"Andorra"},"jpn":{"official":"アンドラ公国","common":"アンドラ"},"kor":{"official":"안도라 공국","common":"안도라"},"nld":{"official":"Prinsdom Andorra","common":"Andorra"},"per":{"official":"شاهزاده‌نشین آندورا","common":"آندورا"},"pol":{"official":"Księstwo Andory","common":"Andora"},"por":{"official":"Principado de Andorra","common":"Andorra"},"rus":{"official":"Княжество Андорра","common":"Андорра"},"slk":{"official":"Andorrsk\xe9 kniežatstvo","common":"Andorra"},"spa":{"official":"Principado de Andorra","common":"Andorra"},"swe":{"official":"Furstend\xf6met Andorra","common":"Andorra"},"urd":{"official":"اماراتِ انڈورا","common":"انڈورا"},"zho":{"official":"安道尔公国","common":"安道尔"}},"latlng":[42.5,1.5],"landlocked":true,"borders":["FRA","ESP"],"area":468,"flag":"\uD83C\uDDE6\uD83C\uDDE9","demonyms":{"eng":{"f":"Andorran","m":"Andorran"},"fra":{"f":"Andorrane","m":"Andorran"}}},{"name":{"common":"United Arab Emirates","official":"United Arab Emirates","native":{"ara":{"official":"الإمارات العربية المتحدة","common":"دولة الإمارات العربية المتحدة"}}},"tld":[".ae","امارات."],"cca2":"AE","ccn3":"784","cca3":"ARE","cioc":"UAE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AED":{"name":"United Arab Emirates dirham","symbol":"د.إ"}},"idd":{"root":"+9","suffixes":["71"]},"capital":["Abu Dhabi"],"altSpellings":["AE","UAE","Emirates"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Spojen\xe9 arabsk\xe9 emir\xe1ty","common":"Spojen\xe9 arabsk\xe9 emir\xe1ty"},"deu":{"official":"Vereinigte Arabische Emirate","common":"Vereinigte Arabische Emirate"},"est":{"official":"Araabia \xdchendemiraadid","common":"Araabia \xdchendemiraadid"},"fin":{"official":"Yhdistyneet arabiemiirikunnat","common":"Arabiemiraatit"},"fra":{"official":"\xc9mirats arabes unis","common":"\xc9mirats arabes unis"},"hrv":{"official":"Ujedinjeni Arapski Emirati","common":"Ujedinjeni Arapski Emirati"},"hun":{"official":"Egyes\xfclt Arab Em\xedrs\xe9gek","common":"Egyes\xfclt Arab Em\xedrs\xe9gek"},"ita":{"official":"Emirati Arabi Uniti","common":"Emirati Arabi Uniti"},"jpn":{"official":"アラブ首長国連邦","common":"アラブ首長国連邦"},"kor":{"official":"아랍 토후국 연방","common":"아랍에미리트"},"nld":{"official":"Verenigde Arabische Emiraten","common":"Verenigde Arabische Emiraten"},"per":{"official":"امارات متحده عربی","common":"امارات"},"pol":{"official":"Zjednoczone Emiraty Arabskie","common":"Zjednoczone Emiraty Arabskie"},"por":{"official":"Emirados \xc1rabes Unidos","common":"Emirados \xc1rabes Unidos"},"rus":{"official":"Объединенные Арабские Эмираты","common":"Объединённые Арабские Эмираты"},"slk":{"official":"Spojen\xe9 arabsk\xe9 emir\xe1ty","common":"Spojen\xe9 arabsk\xe9 emir\xe1ty"},"spa":{"official":"Emiratos \xc1rabes Unidos","common":"Emiratos \xc1rabes Unidos"},"swe":{"official":"F\xf6renade Arabemiraten","common":"F\xf6renade Arabemiraten"},"urd":{"official":"متحدہ عرب امارات","common":"متحدہ عرب امارات"},"zho":{"official":"阿拉伯联合酋长国","common":"阿拉伯联合酋长国"}},"latlng":[24,54],"landlocked":false,"borders":["OMN","SAU"],"area":83600,"flag":"\uD83C\uDDE6\uD83C\uDDEA","demonyms":{"eng":{"f":"Emirati","m":"Emirati"},"fra":{"f":"Emirienne","m":"Emirien"}}},{"name":{"common":"Argentina","official":"Argentine Republic","native":{"grn":{"official":"Argentine Republic","common":"Argentina"},"spa":{"official":"Rep\xfablica Argentina","common":"Argentina"}}},"tld":[".ar"],"cca2":"AR","ccn3":"032","cca3":"ARG","cioc":"ARG","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ARS":{"name":"Argentine peso","symbol":"$"}},"idd":{"root":"+5","suffixes":["4"]},"capital":["Buenos Aires"],"altSpellings":["AR","Argentine Republic","Rep\xfablica Argentina"],"region":"Americas","subregion":"South America","languages":{"grn":"Guaran\xed","spa":"Spanish"},"translations":{"ces":{"official":"Argentinsk\xe1 republika","common":"Argentina"},"cym":{"official":"Gweriniaeth yr Ariannin","common":"Ariannin"},"deu":{"official":"Argentinische Republik","common":"Argentinien"},"est":{"official":"Argentina Vabariik","common":"Argentina"},"fin":{"official":"Argentiinan tasavalta","common":"Argentiina"},"fra":{"official":"R\xe9publique argentine","common":"Argentine"},"hrv":{"official":"Argentinski Republika","common":"Argentina"},"hun":{"official":"Argentin K\xf6zt\xe1rsas\xe1g","common":"Argent\xedna"},"ita":{"official":"Repubblica Argentina","common":"Argentina"},"jpn":{"official":"アルゼンチン共和国","common":"アルゼンチン"},"kor":{"official":"아르헨티나 공화국","common":"아르헨티나"},"nld":{"official":"Argentijnse Republiek","common":"Argentini\xeb"},"per":{"official":"جمهوری آرژانتین","common":"آرژانتین"},"pol":{"official":"Republika Argentyńska","common":"Argentyna"},"por":{"official":"Rep\xfablica Argentina","common":"Argentina"},"rus":{"official":"Аргентинская Республика","common":"Аргентина"},"slk":{"official":"Argent\xednska republika","common":"Argent\xedna"},"spa":{"official":"Rep\xfablica Argentina","common":"Argentina"},"swe":{"official":"Republiken Argentina","common":"Argentina"},"urd":{"official":"جمہوریہ ارجنٹائن","common":"ارجنٹائن"},"zho":{"official":"阿根廷共和国","common":"阿根廷"}},"latlng":[-34,-64],"landlocked":false,"borders":["BOL","BRA","CHL","PRY","URY"],"area":2780400,"flag":"\uD83C\uDDE6\uD83C\uDDF7","demonyms":{"eng":{"f":"Argentine","m":"Argentine"},"fra":{"f":"Argentine","m":"Argentin"}}},{"name":{"common":"Armenia","official":"Republic of Armenia","native":{"hye":{"official":"Հայաստանի Հանրապետություն","common":"Հայաստան"}}},"tld":[".am"],"cca2":"AM","ccn3":"051","cca3":"ARM","cioc":"ARM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AMD":{"name":"Armenian dram","symbol":"֏"}},"idd":{"root":"+3","suffixes":["74"]},"capital":["Yerevan"],"altSpellings":["AM","Hayastan","Republic of Armenia","Հայաստանի Հանրապետություն"],"region":"Asia","subregion":"Western Asia","languages":{"hye":"Armenian"},"translations":{"ces":{"official":"Arm\xe9nsk\xe1 republika","common":"Arm\xe9nie"},"cym":{"official":"Gweriniaeth Armenia","common":"Armenia"},"deu":{"official":"Republik Armenien","common":"Armenien"},"est":{"official":"Armeenia Vabariik","common":"Armeenia"},"fin":{"official":"Armenian tasavalta","common":"Armenia"},"fra":{"official":"R\xe9publique d\'Arm\xe9nie","common":"Arm\xe9nie"},"hrv":{"official":"Republika Armenija","common":"Armenija"},"hun":{"official":"\xd6rm\xe9nyorsz\xe1g","common":"\xd6rm\xe9nyorsz\xe1g"},"ita":{"official":"Repubblica di Armenia","common":"Armenia"},"jpn":{"official":"アルメニア共和国","common":"アルメニア"},"kor":{"official":"아르메니아 공화국","common":"아르메니아"},"nld":{"official":"Republiek Armeni\xeb","common":"Armeni\xeb"},"per":{"official":"جمهوری ارمنستان","common":"ارمنستان"},"pol":{"official":"Republika Armenii","common":"Armenia"},"por":{"official":"Rep\xfablica da Arm\xe9nia","common":"Arm\xe9nia"},"rus":{"official":"Республика Армения","common":"Армения"},"slk":{"official":"Arm\xe9nska republika","common":"Arm\xe9nsko"},"spa":{"official":"Rep\xfablica de Armenia","common":"Armenia"},"swe":{"official":"Republiken Armenien","common":"Armenien"},"urd":{"official":"جمہوریہ آرمینیا","common":"آرمینیا"},"zho":{"official":"亚美尼亚共和国","common":"亚美尼亚"}},"latlng":[40,45],"landlocked":true,"borders":["AZE","GEO","IRN","TUR"],"area":29743,"flag":"\uD83C\uDDE6\uD83C\uDDF2","demonyms":{"eng":{"f":"Armenian","m":"Armenian"},"fra":{"f":"Arm\xe9nienne","m":"Arm\xe9nien"}}},{"name":{"common":"American Samoa","official":"American Samoa","native":{"eng":{"official":"American Samoa","common":"American Samoa"},"smo":{"official":"Sāmoa Amelika","common":"Sāmoa Amelika"}}},"tld":[".as"],"cca2":"AS","ccn3":"016","cca3":"ASM","cioc":"ASA","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["684"]},"capital":["Pago Pago"],"altSpellings":["AS","Amerika Sāmoa","Amelika Sāmoa","Sāmoa Amelika"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English","smo":"Samoan"},"translations":{"ces":{"official":"Americk\xe1 Samoa","common":"Americk\xe1 Samoa"},"deu":{"official":"Amerikanisch-Samoa","common":"Amerikanisch-Samoa"},"est":{"official":"Ameerika Samoa","common":"Ameerika Samoa"},"fin":{"official":"Amerikan Samoa","common":"Amerikan Samoa"},"fra":{"official":"Samoa am\xe9ricaines","common":"Samoa am\xe9ricaines"},"hrv":{"official":"američka Samoa","common":"Američka Samoa"},"hun":{"official":"Szamoa","common":"Szamoa"},"ita":{"official":"Samoa americane","common":"Samoa Americane"},"jpn":{"official":"米サモア","common":"アメリカ領サモア"},"kor":{"official":"아메리칸사모아","common":"아메리칸사모아"},"nld":{"official":"Amerikaans Samoa","common":"Amerikaans Samoa"},"per":{"official":"ساموآی آمریکا","common":"ساموآی آمریکا"},"pol":{"official":"Samoa Amerykańskie","common":"Samoa Amerykańskie"},"por":{"official":"Samoa americana","common":"Samoa Americana"},"rus":{"official":"американское Самоа","common":"Американское Самоа"},"slk":{"official":"Americk\xe1 Samoa","common":"Americk\xe1 Samoa"},"spa":{"official":"Samoa Americana","common":"Samoa Americana"},"swe":{"official":"Amerikanska Samoa","common":"Amerikanska Samoa"},"urd":{"official":"امریکی سمووا","common":"امریکی سمووا"},"zho":{"official":"美属萨摩亚","common":"美属萨摩亚"}},"latlng":[-14.33333333,-170],"landlocked":false,"borders":[],"area":199,"flag":"\uD83C\uDDE6\uD83C\uDDF8","demonyms":{"eng":{"f":"American Samoan","m":"American Samoan"},"fra":{"f":"Samoane","m":"Samoan"}}},{"name":{"common":"Antarctica","official":"Antarctica","native":{}},"tld":[".aq"],"cca2":"AQ","ccn3":"010","cca3":"ATA","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{},"idd":{"root":"","suffixes":[]},"capital":[],"altSpellings":["AQ"],"region":"Antarctic","subregion":"","languages":{},"translations":{"ces":{"official":"Antarktida","common":"Antarktida"},"cym":{"official":"Yr Antarctig","common":"Yr Antarctig"},"deu":{"official":"Antarktika","common":"Antarktis"},"est":{"official":"Antarktika","common":"Antarktika"},"fin":{"official":"Etel\xe4manner","common":"Etel\xe4manner"},"fra":{"official":"Antarctique","common":"Antarctique"},"hrv":{"official":"Antarktika","common":"Antarktika"},"hun":{"official":"Antarktisz","common":"Antarktisz"},"ita":{"official":"Antartide","common":"Antartide"},"jpn":{"official":"南極大陸","common":"南極"},"kor":{"official":"남극","common":"남극"},"nld":{"official":"Antarctica","common":"Antarctica"},"per":{"official":"جنوبگان","common":"جنوبگان"},"pol":{"official":"Antarktyka","common":"Antarktyka"},"por":{"official":"Ant\xe1rtica","common":"Ant\xe1rtida"},"rus":{"official":"Антарктида","common":"Антарктида"},"slk":{"official":"Antarkt\xedda","common":"Antarkt\xedda"},"spa":{"official":"Ant\xe1rtida","common":"Ant\xe1rtida"},"swe":{"official":"Antarktis","common":"Antarktis"},"urd":{"official":"انٹارکٹکا","common":"انٹارکٹکا"},"zho":{"official":"南极洲","common":"南极洲"}},"latlng":[-90,0],"landlocked":false,"borders":[],"area":14000000,"flag":"\uD83C\uDDE6\uD83C\uDDF6","demonyms":{"eng":{"f":"Antarctican","m":"Antarctican"},"fra":{"f":"Antarcticaine","m":"Antarcticain"}}},{"name":{"common":"French Southern and Antarctic Lands","official":"Territory of the French Southern and Antarctic Lands","native":{"fra":{"official":"Territoire des Terres australes et antarctiques fran\xe7aises","common":"Terres australes et antarctiques fran\xe7aises"}}},"tld":[".tf"],"cca2":"TF","ccn3":"260","cca3":"ATF","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+2","suffixes":["62"]},"capital":["Port-aux-Fran\xe7ais"],"altSpellings":["TF","French Southern Territories"],"region":"Antarctic","subregion":"","languages":{"fra":"French"},"translations":{"ces":{"official":"Teritorium Francouzsk\xe1 jižn\xed a antarktick\xe1 \xfazem\xed","common":"Francouzsk\xe1 jižn\xed a antarktick\xe1 \xfazem\xed"},"deu":{"official":"Gebiet der Franz\xf6sisch S\xfcd- und Antarktisgebiete","common":"Franz\xf6sische S\xfcd- und Antarktisgebiete"},"est":{"official":"Prantsuse L\xf5unaalad","common":"Prantsuse L\xf5unaalad"},"fin":{"official":"Ranskan etel\xe4iset ja antarktiset alueet","common":"Ranskan etel\xe4iset ja antarktiset alueet"},"fra":{"official":"Territoire des Terres australes et antarctiques fran\xe7aises","common":"Terres australes et antarctiques fran\xe7aises"},"hrv":{"official":"Teritoriju Francuski južni i antarktički teritoriji","common":"Francuski južni i antarktički teritoriji"},"hun":{"official":"Francia d\xe9li \xe9s antarktiszi ter\xfcletek","common":"Francia d\xe9li \xe9s antarktiszi ter\xfcletek"},"ita":{"official":"Territorio della australi e antartiche francesi Terre","common":"Territori Francesi del Sud"},"jpn":{"official":"フランス領南方\xb7南極地域の領土","common":"フランス領南方・南極地域"},"kor":{"official":"프랑스령 남부와 남극 지역","common":"프랑스령 남부와 남극 지역"},"nld":{"official":"Grondgebied van de Franse Zuidelijke en Antarctische gebieden","common":"Franse Gebieden in de zuidelijke Indische Oceaan"},"per":{"official":"سرزمین‌های جنوبی و جنوبگانی فرانسه","common":"سرزمین‌های جنوبی و جنوبگانی فرانسه"},"pol":{"official":"Francuskie Terytoria Południowe i Antarktyczne","common":"Francuskie Terytoria Południowe i Antarktyczne"},"por":{"official":"Territ\xf3rio do Sul e Ant\xe1rtica Francesa","common":"Terras Austrais e Ant\xe1rticas Francesas"},"rus":{"official":"Территория Французские Южные и Антарктические земли","common":"Французские Южные и Антарктические территории"},"slk":{"official":"Franc\xfazske južn\xe9 a antarktick\xe9 \xfazemia","common":"Franc\xfazske juŽn\xe9 a antarktick\xe9 \xfazemia"},"spa":{"official":"Territorio del Franc\xe9s Tierras australes y ant\xe1rticas","common":"Tierras Australes y Ant\xe1rticas Francesas"},"swe":{"official":"Franska syd- och Antarktisterritorierna","common":"Franska s\xf6dra territorierna"},"urd":{"official":"سرزمینِ جنوبی فرانسیسیہ و انٹارکٹیکہ","common":"سرزمین جنوبی فرانسیسیہ و انٹارکٹیکا"},"zho":{"official":"法国南部和南极土地","common":"法国南部和南极土地"}},"latlng":[-49.25,69.167],"landlocked":false,"borders":[],"area":7747,"flag":"\uD83C\uDDF9\uD83C\uDDEB","demonyms":{"eng":{"f":"French","m":"French"},"fra":{"f":"Fran\xe7aise","m":"Fran\xe7ais"}}},{"name":{"common":"Antigua and Barbuda","official":"Antigua and Barbuda","native":{"eng":{"official":"Antigua and Barbuda","common":"Antigua and Barbuda"}}},"tld":[".ag"],"cca2":"AG","ccn3":"028","cca3":"ATG","cioc":"ANT","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["268"]},"capital":["Saint John\'s"],"altSpellings":["AG"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Antigua a Barbuda","common":"Antigua a Barbuda"},"cym":{"official":"Antigwa a Barbiwda","common":"Antigwa a Barbiwda"},"deu":{"official":"Antigua und Barbuda","common":"Antigua und Barbuda"},"est":{"official":"Antigua ja Barbuda","common":"Antigua ja Barbuda"},"fin":{"official":"Antigua ja Barbuda","common":"Antigua ja Barbuda"},"fra":{"official":"Antigua -et-Barbuda","common":"Antigua-et-Barbuda"},"hrv":{"official":"Antigva i Barbuda","common":"Antigva i Barbuda"},"hun":{"official":"Antigua \xe9s Barbuda","common":"Antigua \xe9s Barbuda"},"ita":{"official":"Antigua e Barbuda","common":"Antigua e Barbuda"},"jpn":{"official":"アンチグアバーブーダ","common":"アンティグア・バーブーダ"},"kor":{"official":"앤티가 바부다","common":"앤티가 바부다"},"nld":{"official":"Antigua en Barbuda","common":"Antigua en Barbuda"},"per":{"official":"آنتیگوا و باربودا","common":"آنتیگوا و باربودا"},"pol":{"official":"Antigua i Barbuda","common":"Antigua i Barbuda"},"por":{"official":"Antigua e Barbuda","common":"Ant\xedgua e Barbuda"},"rus":{"official":"Антигуа и Барбуда","common":"Антигуа и Барбуда"},"slk":{"official":"Antigua a Barbuda","common":"Antigua a Barbuda"},"spa":{"official":"Antigua y Barbuda","common":"Antigua y Barbuda"},"swe":{"official":"Antigua och Barbuda","common":"Antigua och Barbuda"},"urd":{"official":"اینٹیگوا و باربوڈا","common":"اینٹیگوا و باربوڈا"},"zho":{"official":"安提瓜和巴布达","common":"安提瓜和巴布达"}},"latlng":[17.05,-61.8],"landlocked":false,"borders":[],"area":442,"flag":"\uD83C\uDDE6\uD83C\uDDEC","demonyms":{"eng":{"f":"Antiguan, Barbudan","m":"Antiguan, Barbudan"},"fra":{"f":"Antiguaise et barbudienne","m":"Antiguaise et barbudien"}}},{"name":{"common":"Australia","official":"Commonwealth of Australia","native":{"eng":{"official":"Commonwealth of Australia","common":"Australia"}}},"tld":[".au"],"cca2":"AU","ccn3":"036","cca3":"AUS","cioc":"AUS","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AUD":{"name":"Australian dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["1"]},"capital":["Canberra"],"altSpellings":["AU"],"region":"Oceania","subregion":"Australia and New Zealand","languages":{"eng":"English"},"translations":{"ces":{"official":"Australsk\xe9 společenstv\xed","common":"Austr\xe1lie"},"cym":{"official":"Cymanwlad Awstralia","common":"Awstralia"},"deu":{"official":"Commonwealth Australien","common":"Australien"},"est":{"official":"Austraalia \xdchendus","common":"Austraalia"},"fin":{"official":"Australian liittovaltio","common":"Australia"},"fra":{"official":"Australie","common":"Australie"},"hrv":{"official":"Commonwealth of Australia","common":"Australija"},"hun":{"official":"Ausztr\xe1l \xc1llamsz\xf6vets\xe9g","common":"Ausztr\xe1lia"},"ita":{"official":"Commonwealth dell\'Australia","common":"Australia"},"jpn":{"official":"オーストラリア連邦","common":"オーストラリア"},"kor":{"official":"오스트레일리아 연방","common":"호주"},"nld":{"official":"Gemenebest van Australi\xeb","common":"Australi\xeb"},"per":{"official":"قلمرو همسود استرالیا","common":"استرالیا"},"pol":{"official":"Związek Australijski","common":"Australia"},"por":{"official":"Comunidade da Austr\xe1lia","common":"Austr\xe1lia"},"rus":{"official":"Содружество Австралии","common":"Австралия"},"slk":{"official":"Austr\xe1lsky zv\xe4z","common":"Austr\xe1lia"},"spa":{"official":"Mancomunidad de Australia","common":"Australia"},"swe":{"official":"Australiska statsf\xf6rbundet","common":"Australien"},"urd":{"official":"دولتِ مشترکہ آسٹریلیا","common":"آسٹریلیا"},"zho":{"official":"澳大利亚联邦","common":"澳大利亚"}},"latlng":[-27,133],"landlocked":false,"borders":[],"area":7692024,"flag":"\uD83C\uDDE6\uD83C\uDDFA","demonyms":{"eng":{"f":"Australian","m":"Australian"},"fra":{"f":"Australienne","m":"Australien"}}},{"name":{"common":"Austria","official":"Republic of Austria","native":{"bar":{"official":"Republik \xd6sterreich","common":"\xd6sterreich"}}},"tld":[".at"],"cca2":"AT","ccn3":"040","cca3":"AUT","cioc":"AUT","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+4","suffixes":["3"]},"capital":["Vienna"],"altSpellings":["AT","Osterreich","Oesterreich"],"region":"Europe","subregion":"Central Europe","languages":{"bar":"Austro-Bavarian German"},"translations":{"ces":{"official":"Rakousk\xe1 republika","common":"Rakousko"},"cym":{"official":"Gweriniaeth Awstria","common":"Awstria"},"deu":{"official":"Republik \xd6sterreich","common":"\xd6sterreich"},"est":{"official":"Austria Vabariik","common":"Austria"},"fin":{"official":"It\xe4vallan tasavalta","common":"It\xe4valta"},"fra":{"official":"R\xe9publique d\'Autriche","common":"Autriche"},"hrv":{"official":"Republika Austrija","common":"Austrija"},"hun":{"official":"Ausztria","common":"Ausztria"},"ita":{"official":"Repubblica d\'Austria","common":"Austria"},"jpn":{"official":"オーストリア共和国","common":"オーストリア"},"kor":{"official":"오스트리아 공화국","common":"오스트리아"},"nld":{"official":"Republiek Oostenrijk","common":"Oostenrijk"},"per":{"official":"جمهوری اتریش","common":"اتریش"},"pol":{"official":"Republika Austrii","common":"Austria"},"por":{"official":"Rep\xfablica da \xc1ustria","common":"\xc1ustria"},"rus":{"official":"Австрийская Республика","common":"Австрия"},"slk":{"official":"Rak\xfaska republika","common":"Rak\xfasko"},"spa":{"official":"Rep\xfablica de Austria","common":"Austria"},"swe":{"official":"Republiken \xd6sterrike","common":"\xd6sterrike"},"urd":{"official":"جمہوریہ آسٹریا","common":"آسٹریا"},"zho":{"official":"奥地利共和国","common":"奥地利"}},"latlng":[47.33333333,13.33333333],"landlocked":true,"borders":["CZE","DEU","HUN","ITA","LIE","SVK","SVN","CHE"],"area":83871,"flag":"\uD83C\uDDE6\uD83C\uDDF9","demonyms":{"eng":{"f":"Austrian","m":"Austrian"},"fra":{"f":"Autrichienne","m":"Autrichien"}}},{"name":{"common":"Azerbaijan","official":"Republic of Azerbaijan","native":{"aze":{"official":"Azərbaycan Respublikası","common":"Azərbaycan"},"rus":{"official":"Азербайджанская Республика","common":"Азербайджан"}}},"tld":[".az"],"cca2":"AZ","ccn3":"031","cca3":"AZE","cioc":"AZE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AZN":{"name":"Azerbaijani manat","symbol":"₼"}},"idd":{"root":"+9","suffixes":["94"]},"capital":["Baku"],"altSpellings":["AZ","Republic of Azerbaijan","Azərbaycan Respublikası"],"region":"Asia","subregion":"Western Asia","languages":{"aze":"Azerbaijani","rus":"Russian"},"translations":{"ces":{"official":"\xc1zerb\xe1jdž\xe1nsk\xe1 republika","common":"\xc1zerb\xe1jdž\xe1n"},"cym":{"official":"Gweriniaeth Aserbaijan","common":"Aserbaijan"},"deu":{"official":"Republik Aserbaidschan","common":"Aserbaidschan"},"est":{"official":"Aserbaidžaani Vabariik","common":"Aserbaidžaan"},"fin":{"official":"Azerbaidzanin tasavalta","common":"Azerbaidzan"},"fra":{"official":"R\xe9publique d\'Azerba\xefdjan","common":"Azerba\xefdjan"},"hrv":{"official":"Republika Azerbajdžan","common":"Azerbajdžan"},"hun":{"official":"Azerbajdzs\xe1n","common":"Azerbajdzs\xe1n"},"ita":{"official":"Repubblica dell\'Azerbaigian","common":"Azerbaijan"},"jpn":{"official":"アゼルバイジャン共和国","common":"アゼルバイジャン"},"kor":{"official":"아제르바이잔 공화국","common":"아제르바이잔"},"nld":{"official":"Republiek Azerbeidzjan","common":"Azerbeidzjan"},"per":{"official":"جمهوری آذربایجان","common":"جمهوری آذربایجان"},"pol":{"official":"Republika Azerbejdżanu","common":"Azerbejdżan"},"por":{"official":"Rep\xfablica do Azerbaij\xe3o","common":"Azerbeij\xe3o"},"rus":{"official":"Азербайджанская Республика","common":"Азербайджан"},"slk":{"official":"Azerbajǆansk\xe1 republika","common":"AzerbajǇan"},"spa":{"official":"Rep\xfablica de Azerbaiy\xe1n","common":"Azerbaiy\xe1n"},"swe":{"official":"Republiken Azerbajdzjan","common":"Azerbajdzjan"},"urd":{"official":"جمہوریہ آذربائیجان","common":"آذربائیجان"},"zho":{"official":"阿塞拜疆共和国","common":"阿塞拜疆"}},"latlng":[40.5,47.5],"landlocked":true,"borders":["ARM","GEO","IRN","RUS","TUR"],"area":86600,"flag":"\uD83C\uDDE6\uD83C\uDDFF","demonyms":{"eng":{"f":"Azerbaijani","m":"Azerbaijani"},"fra":{"f":"Azerba\xefdjanaise","m":"Azerba\xefdjanais"}}},{"name":{"common":"Burundi","official":"Republic of Burundi","native":{"fra":{"official":"R\xe9publique du Burundi","common":"Burundi"},"run":{"official":"Republika y\'Uburundi ","common":"Uburundi"}}},"tld":[".bi"],"cca2":"BI","ccn3":"108","cca3":"BDI","cioc":"BDI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BIF":{"name":"Burundian franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["57"]},"capital":["Gitega"],"altSpellings":["BI","Republic of Burundi","Republika y\'Uburundi","R\xe9publique du Burundi"],"region":"Africa","subregion":"Eastern Africa","languages":{"fra":"French","run":"Kirundi"},"translations":{"ces":{"official":"Burundsk\xe1 republika","common":"Burundi"},"cym":{"official":"Gweriniaeth Bwrwndi","common":"Bwrwndi"},"deu":{"official":"Republik Burundi","common":"Burundi"},"est":{"official":"Burundi Vabariik","common":"Burundi"},"fin":{"official":"Burundin tasavalta","common":"Burundi"},"fra":{"official":"R\xe9publique du Burundi","common":"Burundi"},"hrv":{"official":"Burundi","common":"Burundi"},"hun":{"official":"Burundi","common":"Burundi"},"ita":{"official":"Repubblica del Burundi","common":"Burundi"},"jpn":{"official":"ブルンジ共和国","common":"ブルンジ"},"kor":{"official":"부룬디","common":"부룬디"},"nld":{"official":"Republiek Burundi","common":"Burundi"},"per":{"official":"جمهوری بوروندی","common":"بوروندی"},"pol":{"official":"Republika Burundi","common":"Burundi"},"por":{"official":"Rep\xfablica do Burundi","common":"Burundi"},"rus":{"official":"Республика Бурунди","common":"Бурунди"},"slk":{"official":"Burundsk\xe1 republika","common":"Burundi"},"spa":{"official":"Rep\xfablica de Burundi","common":"Burundi"},"swe":{"official":"Republiken Burundi","common":"Burundi"},"urd":{"official":"جمہوریہ برونڈی","common":"برونڈی"},"zho":{"official":"布隆迪共和国","common":"布隆迪"}},"latlng":[-3.5,30],"landlocked":true,"borders":["COD","RWA","TZA"],"area":27834,"flag":"\uD83C\uDDE7\uD83C\uDDEE","demonyms":{"eng":{"f":"Burundian","m":"Burundian"},"fra":{"f":"Burundaise","m":"Burundais"}}},{"name":{"common":"Belgium","official":"Kingdom of Belgium","native":{"deu":{"official":"K\xf6nigreich Belgien","common":"Belgien"},"fra":{"official":"Royaume de Belgique","common":"Belgique"},"nld":{"official":"Koninkrijk Belgi\xeb","common":"Belgi\xeb"}}},"tld":[".be"],"cca2":"BE","ccn3":"056","cca3":"BEL","cioc":"BEL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["2"]},"capital":["Brussels"],"altSpellings":["BE","Belgi\xeb","Belgie","Belgien","Belgique","Kingdom of Belgium","Koninkrijk Belgi\xeb","Royaume de Belgique","K\xf6nigreich Belgien"],"region":"Europe","subregion":"Western Europe","languages":{"deu":"German","fra":"French","nld":"Dutch"},"translations":{"ces":{"official":"Belgick\xe9 kr\xe1lovstv\xed","common":"Belgie"},"cym":{"official":"Teyrnas Gwlad Belg","common":"Gwlad Belg"},"deu":{"official":"K\xf6nigreich Belgien","common":"Belgien"},"est":{"official":"Belgia Kuningriik","common":"Belgia"},"fin":{"official":"Belgian kuningaskunta","common":"Belgia"},"fra":{"official":"Royaume de Belgique","common":"Belgique"},"hrv":{"official":"Kraljevina Belgija","common":"Belgija"},"hun":{"official":"Belga Kir\xe1lys\xe1g","common":"Belgium"},"ita":{"official":"Regno del Belgio","common":"Belgio"},"jpn":{"official":"ベルギー王国","common":"ベルギー"},"kor":{"official":"벨기에 왕국","common":"벨기에"},"nld":{"official":"Koninkrijk Belgi\xeb","common":"Belgi\xeb"},"per":{"official":"پادشاهی بلژیک","common":"بلژیک"},"pol":{"official":"Kr\xf3lestwo Belgii","common":"Belgia"},"por":{"official":"Reino da B\xe9lgica","common":"B\xe9lgica"},"rus":{"official":"Королевство Бельгия","common":"Бельгия"},"slk":{"official":"Belgick\xe9 kr\xe1ľovstvo","common":"Belgicko"},"spa":{"official":"Reino de B\xe9lgica","common":"B\xe9lgica"},"swe":{"official":"Konungariket Belgien","common":"Belgien"},"urd":{"official":"مملکتِ بلجئیم","common":"بلجئیم"},"zho":{"official":"比利时王国","common":"比利时"}},"latlng":[50.83333333,4],"landlocked":false,"borders":["FRA","DEU","LUX","NLD"],"area":30528,"flag":"\uD83C\uDDE7\uD83C\uDDEA","demonyms":{"eng":{"f":"Belgian","m":"Belgian"},"fra":{"f":"Belge","m":"Belge"}}},{"name":{"common":"Benin","official":"Republic of Benin","native":{"fra":{"official":"R\xe9publique du B\xe9nin","common":"B\xe9nin"}}},"tld":[".bj"],"cca2":"BJ","ccn3":"204","cca3":"BEN","cioc":"BEN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["29"]},"capital":["Porto-Novo"],"altSpellings":["BJ","Republic of Benin","R\xe9publique du B\xe9nin"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Beninsk\xe1 republika","common":"Benin"},"cym":{"official":"Gweriniaeth Benin","common":"Benin"},"deu":{"official":"Republik Benin","common":"Benin"},"est":{"official":"Benini Vabariik","common":"Benin"},"fin":{"official":"Beninin tasavalta","common":"Benin"},"fra":{"official":"R\xe9publique du B\xe9nin","common":"B\xe9nin"},"hrv":{"official":"Republika Benin","common":"Benin"},"hun":{"official":"Benini K\xf6zt\xe1rsas\xe1g","common":"Benin"},"ita":{"official":"Repubblica del Benin","common":"Benin"},"jpn":{"official":"ベナン共和国","common":"ベナン"},"kor":{"official":"베냉 공화국","common":"베냉"},"nld":{"official":"Republiek Benin","common":"Benin"},"per":{"official":"جمهوری بنین","common":"بنین"},"pol":{"official":"Benin","common":"Benin"},"por":{"official":"Rep\xfablica do Benin","common":"Benin"},"rus":{"official":"Республика Бенин","common":"Бенин"},"slk":{"official":"Beninsk\xe1 republika","common":"Benin"},"spa":{"official":"Rep\xfablica de Benin","common":"Ben\xedn"},"swe":{"official":"Republiken Benin","common":"Benin"},"urd":{"official":"جمہوریہ بینن","common":"بینن"},"zho":{"official":"贝宁共和国","common":"贝宁"}},"latlng":[9.5,2.25],"landlocked":false,"borders":["BFA","NER","NGA","TGO"],"area":112622,"flag":"\uD83C\uDDE7\uD83C\uDDEF","demonyms":{"eng":{"f":"Beninese","m":"Beninese"},"fra":{"f":"B\xe9ninoise","m":"B\xe9ninois"}}},{"name":{"common":"Burkina Faso","official":"Burkina Faso","native":{"fra":{"official":"R\xe9publique du Burkina","common":"Burkina Faso"}}},"tld":[".bf"],"cca2":"BF","ccn3":"854","cca3":"BFA","cioc":"BUR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["26"]},"capital":["Ouagadougou"],"altSpellings":["BF"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Burkina Faso","common":"Burkina Faso"},"cym":{"official":"Bwrcina Ffaso","common":"Bwrcina Ffaso"},"deu":{"official":"Burkina Faso","common":"Burkina Faso"},"est":{"official":"Burkina Faso","common":"Burkina Faso"},"fin":{"official":"Burkina Faso","common":"Burkina Faso"},"fra":{"official":"R\xe9publique du Burkina","common":"Burkina Faso"},"hrv":{"official":"Burkina Faso","common":"Burkina Faso"},"hun":{"official":"Burkina Faso","common":"Burkina"},"ita":{"official":"Burkina Faso","common":"Burkina Faso"},"jpn":{"official":"ブルキナファソ","common":"ブルキナファソ"},"kor":{"official":"부르키나파소","common":"부르키나파소"},"nld":{"official":"Burkina Faso","common":"Burkina Faso"},"per":{"official":"بورکینافاسو","common":"بورکینافاسو"},"pol":{"official":"Burkina Faso","common":"Burkina Faso"},"por":{"official":"Burkina Faso","common":"Burkina Faso"},"rus":{"official":"Буркина -Фасо","common":"Буркина-Фасо"},"slk":{"official":"Burkina Faso","common":"Burkina Faso"},"spa":{"official":"Burkina Faso","common":"Burkina Faso"},"swe":{"official":"Burkina Faso","common":"Burkina Faso"},"urd":{"official":"برکینا فاسو","common":"برکینا فاسو"},"zho":{"official":"布基纳法索","common":"布基纳法索"}},"latlng":[13,-2],"landlocked":true,"borders":["BEN","CIV","GHA","MLI","NER","TGO"],"area":272967,"flag":"\uD83C\uDDE7\uD83C\uDDEB","demonyms":{"eng":{"f":"Burkinabe","m":"Burkinabe"},"fra":{"f":"Burkinab\xe9e","m":"Burkinab\xe9"}}},{"name":{"common":"Bangladesh","official":"People\'s Republic of Bangladesh","native":{"ben":{"official":"বাংলাদেশ গণপ্রজাতন্ত্রী","common":"বাংলাদেশ"}}},"tld":[".bd"],"cca2":"BD","ccn3":"050","cca3":"BGD","cioc":"BAN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BDT":{"name":"Bangladeshi taka","symbol":"৳"}},"idd":{"root":"+8","suffixes":["80"]},"capital":["Dhaka"],"altSpellings":["BD","People\'s Republic of Bangladesh","G\xf4n\xf4pr\xf4jat\xf4ntri Bangladesh"],"region":"Asia","subregion":"Southern Asia","languages":{"ben":"Bengali"},"translations":{"ces":{"official":"Banglad\xe9šsk\xe1 lidov\xe1 republika","common":"Banglad\xe9š"},"cym":{"official":"Gweriniaeth Pobl Bangladesh","common":"Bangladesh"},"deu":{"official":"Volksrepublik Bangladesch","common":"Bangladesch"},"est":{"official":"Bangladeshi Rahvavabariik","common":"Bangladesh"},"fin":{"official":"Bangladeshin kansantasavalta","common":"Bangladesh"},"fra":{"official":"La R\xe9publique populaire du Bangladesh","common":"Bangladesh"},"hrv":{"official":"Narodna Republika Bangladeš","common":"Bangladeš"},"hun":{"official":"Banglades","common":"Banglades"},"ita":{"official":"Repubblica popolare del Bangladesh","common":"Bangladesh"},"jpn":{"official":"バングラデシュ人民共和国","common":"バングラデシュ"},"kor":{"official":"방글라데시 인민 공화국","common":"방글라데시"},"nld":{"official":"Volksrepubliek Bangladesh","common":"Bangladesh"},"per":{"official":"جمهوری خلق بنگلادش","common":"بنگلادش"},"pol":{"official":"Ludowa Republika Bangladeszu","common":"Bangladesz"},"por":{"official":"Rep\xfablica Popular do Bangladesh","common":"Bangladesh"},"rus":{"official":"Народная Республика Бангладеш","common":"Бангладеш"},"slk":{"official":"Banglad\xe9šska ľudov\xe1 republika","common":"Banglad\xe9š"},"spa":{"official":"Rep\xfablica Popular de Bangladesh","common":"Bangladesh"},"swe":{"official":"Folkrepubliken Bangladesh","common":"Bangladesh"},"urd":{"official":"عوامی جمہوریہ بنگلہ دیش","common":"بنگلہ دیش"},"zho":{"official":"孟加拉人民共和国","common":"孟加拉国"}},"latlng":[24,90],"landlocked":false,"borders":["MMR","IND"],"area":147570,"flag":"\uD83C\uDDE7\uD83C\uDDE9","demonyms":{"eng":{"f":"Bangladeshi","m":"Bangladeshi"},"fra":{"f":"Bangladaise","m":"Bangladais"}}},{"name":{"common":"Bulgaria","official":"Republic of Bulgaria","native":{"bul":{"official":"Република България","common":"България"}}},"tld":[".bg"],"cca2":"BG","ccn3":"100","cca3":"BGR","cioc":"BUL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BGN":{"name":"Bulgarian lev","symbol":"лв"}},"idd":{"root":"+3","suffixes":["59"]},"capital":["Sofia"],"altSpellings":["BG","Republic of Bulgaria","Република България"],"region":"Europe","subregion":"Southeast Europe","languages":{"bul":"Bulgarian"},"translations":{"ces":{"official":"Bulharsk\xe1 republika","common":"Bulharsko"},"cym":{"official":"Gweriniaeth Bwlgaria","common":"Bwlgaria"},"deu":{"official":"Republik Bulgarien","common":"Bulgarien"},"est":{"official":"Bulgaaria Vabariik","common":"Bulgaaria"},"fin":{"official":"Bulgarian tasavalta","common":"Bulgaria"},"fra":{"official":"R\xe9publique de Bulgarie","common":"Bulgarie"},"hrv":{"official":"Republika Bugarska","common":"Bugarska"},"hun":{"official":"Bolg\xe1r K\xf6zt\xe1rsas\xe1g","common":"Bulg\xe1ria"},"ita":{"official":"Repubblica di Bulgaria","common":"Bulgaria"},"jpn":{"official":"ブルガリア共和国","common":"ブルガリア"},"kor":{"official":"불가리아 공화국","common":"불가리아"},"nld":{"official":"Republiek Bulgarije","common":"Bulgarije"},"per":{"official":"جمهوری بلغارستان","common":"بلغارستان"},"pol":{"official":"Republika Bułgarii","common":"Bułgaria"},"por":{"official":"Rep\xfablica da Bulg\xe1ria","common":"Bulg\xe1ria"},"rus":{"official":"Республика Болгария","common":"Болгария"},"slk":{"official":"Bulharsk\xe1 republika","common":"Bulharsko"},"spa":{"official":"Rep\xfablica de Bulgaria","common":"Bulgaria"},"swe":{"official":"Republiken Bulgarien","common":"Bulgarien"},"urd":{"official":"جمہوریہ بلغاریہ","common":"بلغاریہ"},"zho":{"official":"保加利亚共和国","common":"保加利亚"}},"latlng":[43,25],"landlocked":false,"borders":["GRC","MKD","ROU","SRB","TUR"],"area":110879,"flag":"\uD83C\uDDE7\uD83C\uDDEC","demonyms":{"eng":{"f":"Bulgarian","m":"Bulgarian"},"fra":{"f":"Bulgare","m":"Bulgare"}}},{"name":{"common":"Bahrain","official":"Kingdom of Bahrain","native":{"ara":{"official":"مملكة البحرين","common":"‏البحرين"}}},"tld":[".bh"],"cca2":"BH","ccn3":"048","cca3":"BHR","cioc":"BRN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BHD":{"name":"Bahraini dinar","symbol":".د.ب"}},"idd":{"root":"+9","suffixes":["73"]},"capital":["Manama"],"altSpellings":["BH","Kingdom of Bahrain","Mamlakat al-Baḥrayn"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Kr\xe1lovstv\xed Bahrajn","common":"Bahrajn"},"cym":{"official":"Teyrnas Bahrein","common":"Bahrain"},"deu":{"official":"K\xf6nigreich Bahrain","common":"Bahrain"},"est":{"official":"Bahreini Kuningriik","common":"Bahrein"},"fin":{"official":"Bahrainin kuningaskunta","common":"Bahrain"},"fra":{"official":"Royaume de Bahre\xefn","common":"Bahre\xefn"},"hrv":{"official":"Kraljevina Bahrein","common":"Bahrein"},"hun":{"official":"Bahreini Kir\xe1lys\xe1g","common":"Bahrein"},"ita":{"official":"Regno del Bahrain","common":"Bahrein"},"jpn":{"official":"バーレーン王国","common":"バーレーン"},"kor":{"official":"바레인 왕국","common":"바레인"},"nld":{"official":"Koninkrijk Bahrein","common":"Bahrein"},"per":{"official":"پادشاهی بحرین","common":"بحرین"},"pol":{"official":"Kr\xf3lestwo Bahrajnu","common":"Bahrajn"},"por":{"official":"Reino do Bahrein","common":"Bahrein"},"rus":{"official":"Королевство Бахрейн","common":"Бахрейн"},"slk":{"official":"Bahrajnsk\xe9 kr\xe1ľovstvo","common":"Bahrajn"},"spa":{"official":"Reino de Bahrein","common":"Bahrein"},"swe":{"official":"Konungariket Bahrain","common":"Bahrain"},"urd":{"official":"مملکتِ بحرین","common":"بحرین"},"zho":{"official":"巴林王国","common":"巴林"}},"latlng":[26,50.55],"landlocked":false,"borders":[],"area":765,"flag":"\uD83C\uDDE7\uD83C\uDDED","demonyms":{"eng":{"f":"Bahraini","m":"Bahraini"},"fra":{"f":"Bahre\xefnienne","m":"Bahre\xefnien"}}},{"name":{"common":"Bahamas","official":"Commonwealth of the Bahamas","native":{"eng":{"official":"Commonwealth of the Bahamas","common":"Bahamas"}}},"tld":[".bs"],"cca2":"BS","ccn3":"044","cca3":"BHS","cioc":"BAH","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BSD":{"name":"Bahamian dollar","symbol":"$"},"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["242"]},"capital":["Nassau"],"altSpellings":["BS","Commonwealth of the Bahamas"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Bahamsk\xe9 společenstv\xed","common":"Bahamy"},"cym":{"official":"Cymanwlad y Bahamas","common":"Bahamas"},"deu":{"official":"Commonwealth der Bahamas","common":"Bahamas"},"est":{"official":"Bahama \xdchendus","common":"Bahama"},"fin":{"official":"Bahaman liittovaltio","common":"Bahamasaaret"},"fra":{"official":"Commonwealth des Bahamas","common":"Bahamas"},"hrv":{"official":"Zajednica Bahama","common":"Bahami"},"hun":{"official":"Bahamai K\xf6z\xf6ss\xe9g","common":"Bahama-szigetek"},"ita":{"official":"Commonwealth delle Bahamas","common":"Bahamas"},"jpn":{"official":"バハマ","common":"バハマ"},"kor":{"official":"바하마 연방","common":"바하마"},"nld":{"official":"Gemenebest van de Bahama\'s","common":"Bahama’s"},"per":{"official":"قلمرو همسود باهاما","common":"باهاما"},"pol":{"official":"Bahamy","common":"Bahamy"},"por":{"official":"Comunidade das Bahamas","common":"Bahamas"},"rus":{"official":"Содружество Багамских Островов","common":"Багамские Острова"},"slk":{"official":"Bahamsk\xe9 spoločenstvo","common":"Bahamy"},"spa":{"official":"Commonwealth de las Bahamas","common":"Bahamas"},"swe":{"official":"Samv\xe4ldet Bahamas","common":"Bahamas"},"urd":{"official":"دولتِ مشترکہ بہاماس","common":"بہاماس"},"zho":{"official":"巴哈马联邦","common":"巴哈马"}},"latlng":[24.25,-76],"landlocked":false,"borders":[],"area":13943,"flag":"\uD83C\uDDE7\uD83C\uDDF8","demonyms":{"eng":{"f":"Bahamian","m":"Bahamian"},"fra":{"f":"Bahamienne","m":"Bahamien"}}},{"name":{"common":"Bosnia and Herzegovina","official":"Bosnia and Herzegovina","native":{"bos":{"official":"Bosna i Hercegovina","common":"Bosna i Hercegovina"},"hrv":{"official":"Bosna i Hercegovina","common":"Bosna i Hercegovina"},"srp":{"official":"Боснa и Херцеговина","common":"Боснa и Херцеговина"}}},"tld":[".ba"],"cca2":"BA","ccn3":"070","cca3":"BIH","cioc":"BIH","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BAM":{"name":"Bosnia and Herzegovina convertible mark","symbol":"KM"}},"idd":{"root":"+3","suffixes":["87"]},"capital":["Sarajevo"],"altSpellings":["BA","Bosnia-Herzegovina","Босна и Херцеговина"],"region":"Europe","subregion":"Southeast Europe","languages":{"bos":"Bosnian","hrv":"Croatian","srp":"Serbian"},"translations":{"ces":{"official":"Bosna a Hercegovina","common":"Bosna a Hercegovina"},"cym":{"official":"Bosnia a Hercegovina","common":"Bosnia a Hercegovina"},"deu":{"official":"Bosnien und Herzegowina","common":"Bosnien und Herzegowina"},"est":{"official":"Bosnia ja Hertsegoviina","common":"Bosnia ja Hertsegoviina"},"fin":{"official":"Bosnia ja Hertsegovina","common":"Bosnia ja Hertsegovina"},"fra":{"official":"Bosnie-et-Herz\xe9govine","common":"Bosnie-Herz\xe9govine"},"hrv":{"official":"Bosna i Hercegovina","common":"Bosna i Hercegovina"},"hun":{"official":"Bosznia-Hercegovina","common":"Bosznia-Hercegovina"},"ita":{"official":"Bosnia-Erzegovina","common":"Bosnia ed Erzegovina"},"jpn":{"official":"ボスニア\xb7ヘルツェゴビナ","common":"ボスニア・ヘルツェゴビナ"},"kor":{"official":"보스니아 헤르체고비나","common":"보스니아 헤르체고비나"},"nld":{"official":"Bosni\xeb-Herzegovina","common":"Bosni\xeb en Herzegovina"},"per":{"official":"بوسنی و هرزگوین","common":"بوسنی و هرزگوین"},"pol":{"official":"Bośnia i Hercegowina","common":"Bośnia i Hercegowina"},"por":{"official":"B\xf3snia e Herzegovina","common":"B\xf3snia e Herzegovina"},"rus":{"official":"Босния и Герцеговина","common":"Босния и Герцеговина"},"slk":{"official":"Republika Bosny a Hercegoviny","common":"Bosna a Hercegovina"},"spa":{"official":"Bosnia y Herzegovina","common":"Bosnia y Herzegovina"},"swe":{"official":"Bosnien och Hercegovina","common":"Bosnien och Hercegovina"},"urd":{"official":"بوسنیا و ہرزیگووینا","common":"بوسنیا و ہرزیگووینا"},"zho":{"official":"波斯尼亚和黑塞哥维那","common":"波斯尼亚和黑塞哥维那"}},"latlng":[44,18],"landlocked":false,"borders":["HRV","MNE","SRB"],"area":51209,"flag":"\uD83C\uDDE7\uD83C\uDDE6","demonyms":{"eng":{"f":"Bosnian, Herzegovinian","m":"Bosnian, Herzegovinian"},"fra":{"f":"Bosnienne","m":"Bosnien"}}},{"name":{"common":"Saint Barth\xe9lemy","official":"Collectivity of Saint Barth\xe9lemy","native":{"fra":{"official":"Collectivit\xe9 de Saint-Barth\xe9lemy","common":"Saint-Barth\xe9lemy"}}},"tld":[".bl"],"cca2":"BL","ccn3":"652","cca3":"BLM","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+5","suffixes":["90"]},"capital":["Gustavia"],"altSpellings":["BL","St. Barthelemy","Collectivity of Saint Barth\xe9lemy","Collectivit\xe9 de Saint-Barth\xe9lemy"],"region":"Americas","subregion":"Caribbean","languages":{"fra":"French"},"translations":{"ces":{"official":"Svat\xfd Bartoloměj","common":"Svat\xfd Bartoloměj"},"deu":{"official":"Gebietsk\xf6rperschaft Saint-Barth\xe9lemy","common":"Saint-Barth\xe9lemy"},"est":{"official":"Saint-Barth\xe9lemy territoriaal\xfchendus","common":"Saint-Barth\xe9lemy"},"fin":{"official":"Saint-Barth\xe9lemyn yhteis\xf6","common":"Saint-Barth\xe9lemy"},"fra":{"official":"Collectivit\xe9 de Saint-Barth\xe9lemy","common":"Saint-Barth\xe9lemy"},"hrv":{"official":"Kolektivnost sv Barth\xe9lemy","common":"Saint Barth\xe9lemy"},"hun":{"official":"Saint-Barth\xe9lemy","common":"Saint-Barth\xe9lemy"},"ita":{"official":"Collettivit\xe0 di Saint Barth\xe9lemy","common":"Antille Francesi"},"jpn":{"official":"サン\xb7バルテルミー島の集合体","common":"サン・バルテルミー"},"kor":{"official":"생바르텔레미","common":"생바르텔레미"},"nld":{"official":"Gemeenschap Saint Barth\xe9lemy","common":"Saint Barth\xe9lemy"},"per":{"official":"سن بارتلمی","common":"سن بارتلمی"},"pol":{"official":"Saint-Barth\xe9lemy","common":"Saint-Barth\xe9lemy"},"por":{"official":"Coletividade de Saint Barth\xe9lemy","common":"S\xe3o Bartolomeu"},"rus":{"official":"Коллективность Санкт -Бартельми","common":"Сен-Бартелеми"},"slk":{"official":"Sv\xe4t\xfd Bartolomej","common":"Sv\xe4t\xfd Bartolomej"},"spa":{"official":"Colectividad de San Barth\xe9lemy","common":"San Bartolom\xe9"},"swe":{"official":"Saint-Barth\xe9lemy","common":"Saint-Barth\xe9lemy"},"urd":{"official":"سینٹ بارتھیملے","common":"سینٹ بارتھیملے"},"zho":{"official":"圣巴泰勒米集体","common":"圣巴泰勒米"}},"latlng":[18.5,-63.41666666],"landlocked":false,"borders":[],"area":21,"flag":"\uD83C\uDDE7\uD83C\uDDF1","demonyms":{"eng":{"f":"Saint Barth\xe9lemy Islander","m":"Saint Barth\xe9lemy Islander"},"fra":{"f":"Barth\xe9lom\xe9enne","m":"Barth\xe9lom\xe9en"}}},{"name":{"common":"Saint Helena, Ascension and Tristan da Cunha","official":"Saint Helena, Ascension and Tristan da Cunha","native":{"eng":{"official":"Saint Helena, Ascension and Tristan da Cunha","common":"Saint Helena, Ascension and Tristan da Cunha"}}},"tld":[".sh",".ac"],"cca2":"SH","ccn3":"654","cca3":"SHN","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"GBP":{"name":"Pound sterling","symbol":"\xa3"},"SHP":{"name":"Saint Helena pound","symbol":"\xa3"}},"idd":{"root":"+2","suffixes":["90","47"]},"capital":["Jamestown"],"altSpellings":["Saint Helena","St. Helena, Ascension and Tristan da Cunha"],"region":"Africa","subregion":"Western Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Svat\xe1 Helena, Ascension a Tristan da Cunha","common":"Svat\xe1 Helena, Ascension a Tristan da Cunha"},"deu":{"official":"Sankt Helena, Ascension und Tristan da Cunha","common":"St. Helena, Ascension und Tristan da Cunha"},"est":{"official":"Saint Helena, Ascension ja Tristan da Cunha","common":"Saint Helena, Ascension ja Tristan da Cunha"},"fin":{"official":"Saint Helena, Ascension ja Tristan da Cunha","common":"Saint Helena, Ascension ja Tristan da Cunha"},"fra":{"official":"Sainte-H\xe9l\xe8ne, Ascension et Tristan da Cunha","common":"Sainte-H\xe9l\xe8ne, Ascension et Tristan da Cunha"},"hrv":{"official":"Sveta Helena","common":"Sveta Helena"},"hun":{"official":"Szent Ilona","common":"Szent Ilona-sziget"},"ita":{"official":"Sant\'Elena, Ascensione e Tristan da Cunha","common":"Sant\'Elena, Ascensione e Tristan da Cunha"},"jpn":{"official":"セントヘレナ・アセンションおよびトリスタンダクーニャ","common":"セントヘレナ・アセンションおよびトリスタンダクーニャ"},"kor":{"official":"세인트헬레나","common":"세인트헬레나"},"nld":{"official":"Sint-Helena, Ascension en Tristan da Cunha","common":"Sint-Helena, Ascension en Tristan da Cunha"},"per":{"official":"سنت هلن","common":"سنت هلن"},"pol":{"official":"Wyspa Świętej Heleny, Wyspa Wniebowstąpienia i Tristan da Cunha","common":"Wyspa Świętej Heleny, Wyspa Wniebowstąpienia i Tristan da Cunha"},"por":{"official":"Santa Helena, Ascens\xe3o e Trist\xe3o da Cunha","common":"Santa Helena, Ascens\xe3o e Trist\xe3o da Cunha"},"rus":{"official":"Острова Святой Елены, Вознесения и Тристан-да-Кунья","common":"Острова Святой Елены, Вознесения и Тристан-да-Кунья"},"slk":{"official":"Sv\xe4t\xe1 Helena (z\xe1morsk\xe9 \xfazemie)","common":"Sv\xe4t\xe1 Helena (z\xe1morsk\xe9 \xfazemie)"},"spa":{"official":"Santa Elena, Ascensi\xf3n y Trist\xe1n de Acu\xf1a","common":"Santa Elena, Ascensi\xf3n y Trist\xe1n de Acu\xf1a"},"swe":{"official":"Sankta Helena","common":"Sankta Helena"},"urd":{"official":"سینٹ ہلینا، اسینشن و ترسٹان دا کونیا","common":"سینٹ ہلینا، اسینشن و ترسٹان دا کونیا"},"zho":{"official":"圣赫勒拿、阿森松和特里斯坦-达库尼亚","common":"圣赫勒拿、阿森松和特里斯坦-达库尼亚"}},"latlng":[-15.95,-5.72],"landlocked":false,"borders":[],"area":394,"flag":"\uD83C\uDDF8\uD83C\uDDED","demonyms":{"eng":{"f":"Saint Helenian","m":"Saint Helenian"},"fra":{"f":"Sainte-H\xe9l\xe9noise","m":"Sainte-H\xe9l\xe8nois"}}},{"name":{"common":"Belarus","official":"Republic of Belarus","native":{"bel":{"official":"Рэспубліка Беларусь","common":"Белару́сь"},"rus":{"official":"Республика Беларусь","common":"Беларусь"}}},"tld":[".by"],"cca2":"BY","ccn3":"112","cca3":"BLR","cioc":"BLR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BYN":{"name":"Belarusian ruble","symbol":"Br"}},"idd":{"root":"+3","suffixes":["75"]},"capital":["Minsk"],"altSpellings":["BY","Bielaruś","Republic of Belarus","Белоруссия","Республика Белоруссия"],"region":"Europe","subregion":"Eastern Europe","languages":{"bel":"Belarusian","rus":"Russian"},"translations":{"ces":{"official":"Bělorusk\xe1 republika","common":"Bělorusko"},"cym":{"official":"Gweriniaeth Belarws","common":"Belarws"},"deu":{"official":"Republik Belarus","common":"Wei\xdfrussland"},"est":{"official":"Valgevene Vabariik","common":"Valgevene"},"fin":{"official":"Valko-Ven\xe4j\xe4n tasavalta","common":"Valko-Ven\xe4j\xe4"},"fra":{"official":"R\xe9publique de Bi\xe9lorussie","common":"Bi\xe9lorussie"},"hrv":{"official":"Republika Bjelorusija","common":"Bjelorusija"},"hun":{"official":"Feh\xe9rorosz K\xf6zt\xe1rsas\xe1g","common":"Feh\xe9roroszorsz\xe1g"},"ita":{"official":"Repubblica di Belarus","common":"Bielorussia"},"jpn":{"official":"ベラルーシ共和国","common":"ベラルーシ"},"kor":{"official":"벨라루스 공화국","common":"벨라루스"},"nld":{"official":"Republiek Belarus","common":"Wit-Rusland"},"per":{"official":"جمهوری بلاروس","common":"بلاروس"},"pol":{"official":"Republika Białorusi","common":"Białoruś"},"por":{"official":"Rep\xfablica da Bielorr\xfassia","common":"Bielor\xfassia"},"rus":{"official":"Республика Беларусь","common":"Беларусь"},"slk":{"official":"Bielorusk\xe1 republika","common":"Bielorusko"},"spa":{"official":"Rep\xfablica de Belar\xfas","common":"Bielorrusia"},"swe":{"official":"Republiken Vitryssland","common":"Belarus"},"urd":{"official":"جمہوریہ بیلاروس","common":"بیلاروس"},"zho":{"official":"白俄罗斯共和国","common":"白俄罗斯"}},"latlng":[53,28],"landlocked":true,"borders":["LVA","LTU","POL","RUS","UKR"],"area":207600,"flag":"\uD83C\uDDE7\uD83C\uDDFE","demonyms":{"eng":{"f":"Belarusian","m":"Belarusian"},"fra":{"f":"Bi\xe9lorusse","m":"Bi\xe9lorusse"}}},{"name":{"common":"Belize","official":"Belize","native":{"bjz":{"official":"Belize","common":"Belize"},"eng":{"official":"Belize","common":"Belize"},"spa":{"official":"Belice","common":"Belice"}}},"tld":[".bz"],"cca2":"BZ","ccn3":"084","cca3":"BLZ","cioc":"BIZ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BZD":{"name":"Belize dollar","symbol":"$"}},"idd":{"root":"+5","suffixes":["01"]},"capital":["Belmopan"],"altSpellings":["BZ"],"region":"Americas","subregion":"Central America","languages":{"bjz":"Belizean Creole","eng":"English","spa":"Spanish"},"translations":{"ces":{"official":"Belize","common":"Belize"},"cym":{"official":"Bel\xees","common":"Bel\xees"},"deu":{"official":"Belize","common":"Belize"},"est":{"official":"Belize","common":"Belize"},"fin":{"official":"Belize","common":"Belize"},"fra":{"official":"Belize","common":"Belize"},"hrv":{"official":"Belize","common":"Belize"},"hun":{"official":"Belize","common":"Belize"},"ita":{"official":"Belize","common":"Belize"},"jpn":{"official":"ベリーズ","common":"ベリーズ"},"kor":{"official":"벨리즈","common":"벨리즈"},"nld":{"official":"Belize","common":"Belize"},"per":{"official":"بلیز","common":"بلیز"},"pol":{"official":"Belize","common":"Belize"},"por":{"official":"Belize","common":"Belize"},"rus":{"official":"Белиз","common":"Белиз"},"slk":{"official":"Belize","common":"Belize"},"spa":{"official":"Belice","common":"Belice"},"swe":{"official":"Belize","common":"Belize"},"urd":{"official":"بیلیز","common":"بیلیز"},"zho":{"official":"伯利兹","common":"伯利兹"}},"latlng":[17.25,-88.75],"landlocked":false,"borders":["GTM","MEX"],"area":22966,"flag":"\uD83C\uDDE7\uD83C\uDDFF","demonyms":{"eng":{"f":"Belizean","m":"Belizean"},"fra":{"f":"B\xe9lizienne","m":"B\xe9lizien"}}},{"name":{"common":"Bermuda","official":"Bermuda","native":{"eng":{"official":"Bermuda","common":"Bermuda"}}},"tld":[".bm"],"cca2":"BM","ccn3":"060","cca3":"BMU","cioc":"BER","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"BMD":{"name":"Bermudian dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["441"]},"capital":["Hamilton"],"altSpellings":["BM","The Islands of Bermuda","The Bermudas","Somers Isles"],"region":"Americas","subregion":"North America","languages":{"eng":"English"},"translations":{"ces":{"official":"Bermudsk\xe9 ostrovy","common":"Bermudy"},"cym":{"official":"Bermiwda","common":"Bermiwda"},"deu":{"official":"Bermuda","common":"Bermuda"},"est":{"official":"Bermuda","common":"Bermuda"},"fin":{"official":"Bermuda","common":"Bermuda"},"fra":{"official":"Bermudes","common":"Bermudes"},"hrv":{"official":"Bermuda","common":"Bermudi"},"hun":{"official":"Bermuda","common":"Bermuda"},"ita":{"official":"Bermuda","common":"Bermuda"},"jpn":{"official":"バミューダ","common":"バミューダ"},"kor":{"official":"버뮤다","common":"버뮤다"},"nld":{"official":"Bermuda","common":"Bermuda"},"per":{"official":"جزایر برمودا","common":"برمودا"},"pol":{"official":"Bermudy","common":"Bermudy"},"por":{"official":"Bermudas","common":"Bermudas"},"rus":{"official":"Бермудские острова","common":"Бермудские Острова"},"slk":{"official":"Bermudy","common":"Bermudy"},"spa":{"official":"Bermuda","common":"Bermudas"},"swe":{"official":"Bermuda","common":"Bermuda"},"urd":{"official":"برمودا","common":"برمودا"},"zho":{"official":"百慕大","common":"百慕大"}},"latlng":[32.33333333,-64.75],"landlocked":false,"borders":[],"area":54,"flag":"\uD83C\uDDE7\uD83C\uDDF2","demonyms":{"eng":{"f":"Bermudian","m":"Bermudian"},"fra":{"f":"Bermudienne","m":"Bermudien"}}},{"name":{"common":"Bolivia","official":"Plurinational State of Bolivia","native":{"aym":{"official":"Wuliwya Suyu","common":"Wuliwya"},"grn":{"official":"Tet\xe3 Vol\xedvia","common":"Vol\xedvia"},"que":{"official":"Buliwya Mamallaqta","common":"Buliwya"},"spa":{"official":"Estado Plurinacional de Bolivia","common":"Bolivia"}}},"tld":[".bo"],"cca2":"BO","ccn3":"068","cca3":"BOL","cioc":"BOL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BOB":{"name":"Bolivian boliviano","symbol":"Bs."}},"idd":{"root":"+5","suffixes":["91"]},"capital":["Sucre"],"altSpellings":["BO","Buliwya","Wuliwya","Bolivia, Plurinational State of","Plurinational State of Bolivia","Estado Plurinacional de Bolivia","Buliwya Mamallaqta","Wuliwya Suyu","Tet\xe3 Vol\xedvia"],"region":"Americas","subregion":"South America","languages":{"aym":"Aymara","grn":"Guaran\xed","que":"Quechua","spa":"Spanish"},"translations":{"ces":{"official":"Mnohon\xe1rodnostn\xed st\xe1t Bol\xedvie","common":"Bol\xedvie"},"cym":{"official":"Gweriniaeth Bolifia","common":"Bolifia"},"deu":{"official":"Plurinationaler Staat Bolivien","common":"Bolivien"},"est":{"official":"Boliivia Paljurahvuseline Riik","common":"Boliivia"},"fin":{"official":"Bolivian monikansainen valtio","common":"Bolivia"},"fra":{"official":"\xc9tat plurinational de Bolivie","common":"Bolivie"},"hrv":{"official":"Plurinational State of Bolivia","common":"Bolivija"},"hun":{"official":"Bol\xedviai T\xf6bbnemzetis\xe9gű \xc1llam","common":"Bol\xedvia"},"ita":{"official":"Stato Plurinazionale della Bolivia","common":"Bolivia"},"jpn":{"official":"ボリビアの多民族国","common":"ボリビア多民族国"},"kor":{"official":"볼리비아 다민족국","common":"볼리비아"},"nld":{"official":"Plurinationale Staat van Bolivia","common":"Bolivia"},"per":{"official":"جمهوری بولیوی","common":"بولیوی"},"pol":{"official":"Wielonarodowe Państwo Boliwia","common":"Boliwia"},"por":{"official":"Estado Plurinacional da Bol\xedvia","common":"Bol\xedvia"},"rus":{"official":"Многонациональное Государство Боливия","common":"Боливия"},"slk":{"official":"Bol\xedvijsk\xe1 republika","common":"Bol\xedvia"},"spa":{"official":"Estado Plurinacional de Bolivia","common":"Bolivia"},"swe":{"official":"M\xe5ngnationella staten Bolivia","common":"Bolivia"},"urd":{"official":"جمہوریہ بولیویا","common":"بولیویا"},"zho":{"official":"多民族玻利维亚国","common":"玻利维亚"}},"latlng":[-17,-65],"landlocked":true,"borders":["ARG","BRA","CHL","PRY","PER"],"area":1098581,"flag":"\uD83C\uDDE7\uD83C\uDDF4","demonyms":{"eng":{"f":"Bolivian","m":"Bolivian"},"fra":{"f":"Bolivienne","m":"Bolivien"}}},{"name":{"common":"Caribbean Netherlands","official":"Bonaire, Sint Eustatius and Saba","native":{"nld":{"official":"Bonaire, Sint Eustatius en Saba","common":"Caribisch Nederland"},"pap":{"official":"Boneiru, Sint Eustatius y Saba","common":"Boneiru, Sint Eustatius y Saba"}}},"tld":[".bq",".nl"],"cca2":"BQ","ccn3":"535","cca3":"BES","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+5","suffixes":["99"]},"capital":["Kralendijk","Oranjestad","The Bottom"],"altSpellings":["BES islands"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English","nld":"Dutch","pap":"Papiamento"},"translations":{"ces":{"official":"Karibsk\xe9 Nizozemsko","common":"Karibsk\xe9 Nizozemsko"},"deu":{"official":"Bonaire, Sint Eustatius und Saba","common":"Karibische Niederlande"},"est":{"official":"Bonaire, Sint Eustatius ja Saba","common":"Bonaire, Sint Eustatius ja Saba"},"fin":{"official":"Bonaire, Sint Eustatius ja Saba","common":"Bonaire, Sint Eustatius ja Saba"},"fra":{"official":"Bonaire, Saint-Eustache et Saba","common":"Pays-Bas carib\xe9ens"},"hrv":{"official":"Bonaire, Sint Eustatius i Saba","common":"Bonaire, Sint Eustatius i Saba"},"hun":{"official":"Bonaire","common":"Bonaire"},"ita":{"official":"Bonaire, Sint Eustatius e Saba","common":"Paesi Bassi caraibici"},"jpn":{"official":"ボネール、シント・ユースタティウスおよびサバ","common":"ボネール、シント・ユースタティウスおよびサバ"},"kor":{"official":"보네르, 신트외스타티위스, 사바","common":"카리브 네덜란드"},"nld":{"official":"Bonaire, Sint Eustatius en Saba","common":"Caribisch Nederland"},"per":{"official":"جزایر کارائیب هلند","common":"جزایر کارائیب هلند"},"pol":{"official":"Bonaire, Sint Eustatius i Saba","common":"Antyle Holenderskie"},"por":{"official":"Bonaire, Saba e Santo Eust\xe1quio","common":"Pa\xedses Baixos Caribenhos"},"rus":{"official":"Бонэйр, Синт-Эстатиус и Саба","common":"Карибские Нидерланды"},"slk":{"official":"Bonaire, Sint Eustatius a Saba","common":"Bonaire, Sint Eustatius a Saba"},"spa":{"official":"Bonaire, San Eustaquio y Saba","common":"Caribe Neerland\xe9s"},"swe":{"official":"Bonaire, Sint Eustatius and Saba","common":"Karibiska Nederl\xe4nderna"},"urd":{"official":"بونایر، سینٹ ایوسٹائیس اور سابا","common":"کیریبین نیدرلینڈز"},"zho":{"official":"荷蘭加勒比區","common":"荷蘭加勒比區"}},"latlng":[12.18,-68.25],"landlocked":false,"borders":[],"area":328,"flag":"","demonyms":{"eng":{"f":"Dutch","m":"Dutch"},"fra":{"f":"N\xe9erlandaise","m":"N\xe9erlandais"}}},{"name":{"common":"Brazil","official":"Federative Republic of Brazil","native":{"por":{"official":"Rep\xfablica Federativa do Brasil","common":"Brasil"}}},"tld":[".br"],"cca2":"BR","ccn3":"076","cca3":"BRA","cioc":"BRA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BRL":{"name":"Brazilian real","symbol":"R$"}},"idd":{"root":"+5","suffixes":["5"]},"capital":["Bras\xedlia"],"altSpellings":["BR","Brasil","Federative Republic of Brazil","Rep\xfablica Federativa do Brasil"],"region":"Americas","subregion":"South America","languages":{"por":"Portuguese"},"translations":{"ces":{"official":"Brazilsk\xe1 federativn\xed republika","common":"Braz\xedlie"},"cym":{"official":"Gweriniaeth Ffederal Brasil","common":"Brasil"},"deu":{"official":"F\xf6derative Republik Brasilien","common":"Brasilien"},"est":{"official":"Brasiilia Liitvabariik","common":"Brasiilia"},"fin":{"official":"Brasilian liittotasavalta","common":"Brasilia"},"fra":{"official":"R\xe9publique f\xe9d\xe9rative du Br\xe9sil","common":"Br\xe9sil"},"hrv":{"official":"Savezne Republike Brazil","common":"Brazil"},"hun":{"official":"Brazil Sz\xf6vets\xe9gi K\xf6zt\xe1rsas\xe1g","common":"Braz\xedlia"},"ita":{"official":"Repubblica federativa del Brasile","common":"Brasile"},"jpn":{"official":"ブラジル連邦共和国","common":"ブラジル"},"kor":{"official":"브라질 연방 공화국","common":"브라질"},"nld":{"official":"Federale Republiek Brazili\xeb","common":"Brazili\xeb"},"per":{"official":"جمهوری فدراتیو برزیل","common":"برزیل"},"pol":{"official":"Federacyjna Republika Brazylii","common":"Brazylia"},"por":{"official":"Rep\xfablica Federativa do Brasil","common":"Brasil"},"rus":{"official":"Федеративная Республика Бразилия","common":"Бразилия"},"slk":{"official":"Braz\xedlska federat\xedvna republika","common":"Braz\xedlia"},"spa":{"official":"Rep\xfablica Federativa del Brasil","common":"Brasil"},"swe":{"official":"F\xf6rbundsrepubliken Brasilien","common":"Brasilien"},"urd":{"official":"وفاقی جمہوریہ برازیل","common":"برازیل"},"zho":{"official":"巴西联邦共和国","common":"巴西"}},"latlng":[-10,-55],"landlocked":false,"borders":["ARG","BOL","COL","GUF","GUY","PRY","PER","SUR","URY","VEN"],"area":8515767,"flag":"\uD83C\uDDE7\uD83C\uDDF7","demonyms":{"eng":{"f":"Brazilian","m":"Brazilian"},"fra":{"f":"Br\xe9silienne","m":"Br\xe9silien"}}},{"name":{"common":"Barbados","official":"Barbados","native":{"eng":{"official":"Barbados","common":"Barbados"}}},"tld":[".bb"],"cca2":"BB","ccn3":"052","cca3":"BRB","cioc":"BAR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BBD":{"name":"Barbadian dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["246"]},"capital":["Bridgetown"],"altSpellings":["BB"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Barbados","common":"Barbados"},"cym":{"official":"Barbados","common":"Barbados"},"deu":{"official":"Barbados","common":"Barbados"},"est":{"official":"Barbados","common":"Barbados"},"fin":{"official":"Barbados","common":"Barbados"},"fra":{"official":"Barbade","common":"Barbade"},"hrv":{"official":"Barbados","common":"Barbados"},"hun":{"official":"Barbados","common":"Barbados"},"ita":{"official":"Barbados","common":"Barbados"},"jpn":{"official":"バルバドス","common":"バルバドス"},"kor":{"official":"바베이도스","common":"바베이도스"},"nld":{"official":"Barbados","common":"Barbados"},"per":{"official":"باربادوس","common":"باربادوس"},"pol":{"official":"Barbados","common":"Barbados"},"por":{"official":"Barbados","common":"Barbados"},"rus":{"official":"Барбадос","common":"Барбадос"},"slk":{"official":"Barbados","common":"Barbados"},"spa":{"official":"Barbados","common":"Barbados"},"swe":{"official":"Barbados","common":"Barbados"},"urd":{"official":"بارباڈوس","common":"بارباڈوس"},"zho":{"official":"巴巴多斯","common":"巴巴多斯"}},"latlng":[13.16666666,-59.53333333],"landlocked":false,"borders":[],"area":430,"flag":"\uD83C\uDDE7\uD83C\uDDE7","demonyms":{"eng":{"f":"Barbadian","m":"Barbadian"},"fra":{"f":"Barbadienne","m":"Barbadien"}}},{"name":{"common":"Brunei","official":"Nation of Brunei, Abode of Peace","native":{"msa":{"official":"Nation of Brunei, Abode Damai","common":"Negara Brunei Darussalam"}}},"tld":[".bn"],"cca2":"BN","ccn3":"096","cca3":"BRN","cioc":"BRU","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BND":{"name":"Brunei dollar","symbol":"$"},"SGD":{"name":"Singapore dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["73"]},"capital":["Bandar Seri Begawan"],"altSpellings":["BN","Brunei Darussalam","Nation of Brunei","the Abode of Peace"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"msa":"Malay"},"translations":{"ces":{"official":"Sultan\xe1t Brunej","common":"Brunej"},"cym":{"official":"Teyrnas Brwnei","common":"Brunei"},"deu":{"official":"Sultanat Brunei Darussalam","common":"Brunei"},"est":{"official":"Brunei Darussalami Riik","common":"Brunei"},"fin":{"official":"Brunei Darussalamin valtio","common":"Brunei"},"fra":{"official":"\xc9tat de Brunei Darussalam","common":"Brunei"},"hrv":{"official":"Nacija od Bruneja, Kuću Mira","common":"Brunej"},"hun":{"official":"Brunei Szultan\xe1tus","common":"Brunei"},"ita":{"official":"Nazione di Brunei, Dimora della Pace","common":"Brunei"},"jpn":{"official":"ブルネイ、平和の精舎の国家","common":"ブルネイ・ダルサラーム"},"kor":{"official":"브루나이 다루살람국","common":"브루나이"},"nld":{"official":"Natie van Brunei, de verblijfplaats van de Vrede","common":"Brunei"},"per":{"official":"برونئی سرای صلح","common":"برونئی"},"pol":{"official":"Państwo Brunei Darussalam","common":"Brunei"},"por":{"official":"Na\xe7\xe3o do Brunei, Morada da Paz","common":"Brunei"},"rus":{"official":"Нация Бруней, обитель мира","common":"Бруней"},"slk":{"official":"Brunejsk\xfd sultan\xe2t","common":"Brunej"},"spa":{"official":"Naci\xf3n de Brunei, Morada de la Paz","common":"Brunei"},"swe":{"official":"Brunei Darussalam","common":"Brunei"},"urd":{"official":"ریاستِ برونائی دارالسلام","common":"برونائی"},"zho":{"official":"文莱和平之国","common":"文莱"}},"latlng":[4.5,114.66666666],"landlocked":false,"borders":["MYS"],"area":5765,"flag":"\uD83C\uDDE7\uD83C\uDDF3","demonyms":{"eng":{"f":"Bruneian","m":"Bruneian"},"fra":{"f":"Brun\xe9ienne","m":"Brun\xe9ien"}}},{"name":{"common":"Bhutan","official":"Kingdom of Bhutan","native":{"dzo":{"official":"འབྲུག་རྒྱལ་ཁབ་","common":"འབྲུག་ཡུལ་"}}},"tld":[".bt"],"cca2":"BT","ccn3":"064","cca3":"BTN","cioc":"BHU","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BTN":{"name":"Bhutanese ngultrum","symbol":"Nu."},"INR":{"name":"Indian rupee","symbol":"₹"}},"idd":{"root":"+9","suffixes":["75"]},"capital":["Thimphu"],"altSpellings":["BT","Kingdom of Bhutan"],"region":"Asia","subregion":"Southern Asia","languages":{"dzo":"Dzongkha"},"translations":{"ces":{"official":"Bh\xfat\xe1nsk\xe9 kr\xe1lovstv\xed","common":"Bh\xfat\xe1n"},"cym":{"official":"Teyrnas Bhwtan","common":"Bhwtan"},"deu":{"official":"K\xf6nigreich Bhutan","common":"Bhutan"},"est":{"official":"Bhutani Kuningriik","common":"Bhutan"},"fin":{"official":"Bhutanin kuningaskunta","common":"Bhutan"},"fra":{"official":"Royaume du Bhoutan","common":"Bhoutan"},"hrv":{"official":"Kraljevina Butan","common":"Butan"},"hun":{"official":"Bhut\xe1ni Kir\xe1lys\xe1g","common":"Bhut\xe1n"},"ita":{"official":"Regno del Bhutan","common":"Bhutan"},"jpn":{"official":"ブータン王国","common":"ブータン"},"kor":{"official":"부탄 왕국","common":"부탄"},"nld":{"official":"Koninkrijk Bhutan","common":"Bhutan"},"per":{"official":"پادشاهی بوتان","common":"بوتان"},"pol":{"official":"Bhutan","common":"Bhutan"},"por":{"official":"Reino do But\xe3o","common":"But\xe3o"},"rus":{"official":"Королевство Бутан","common":"Бутан"},"slk":{"official":"Bhut\xe1nske kr\xe2ľovstvo","common":"Bhut\xe1n"},"spa":{"official":"Reino de But\xe1n","common":"But\xe1n"},"swe":{"official":"Konungariket Bhutan","common":"Bhutan"},"urd":{"official":"سلطنت بھوٹان","common":"بھوٹان"},"zho":{"official":"不丹王国","common":"不丹"}},"latlng":[27.5,90.5],"landlocked":true,"borders":["CHN","IND"],"area":38394,"flag":"\uD83C\uDDE7\uD83C\uDDF9","demonyms":{"eng":{"f":"Bhutanese","m":"Bhutanese"},"fra":{"f":"Bhoutanaise","m":"Bhoutanais"}}},{"name":{"common":"Bouvet Island","official":"Bouvet Island","native":{"nor":{"official":"Bouvet\xf8ya","common":"Bouvet\xf8ya"}}},"tld":[".bv"],"cca2":"BV","ccn3":"074","cca3":"BVT","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{},"idd":{"root":"+4","suffixes":["7"]},"capital":[],"altSpellings":["BV","Bouvet\xf8ya","Bouvet-\xf8ya"],"region":"Antarctic","subregion":"","languages":{"nor":"Norwegian"},"translations":{"ces":{"official":"Bouvetův ostrov","common":"Bouvetův ostrov"},"deu":{"official":"Bouvetinsel","common":"Bouvetinsel"},"est":{"official":"Bouvet’ saar","common":"Bouvet’ saar"},"fin":{"official":"Bouvet\'nsaari","common":"Bouvet\'nsaari"},"fra":{"official":"\xcele Bouvet","common":"\xcele Bouvet"},"hrv":{"official":"Bouvet Island","common":"Otok Bouvet"},"hun":{"official":"Bouvet-sziget","common":"Bouvet-sziget"},"ita":{"official":"Isola Bouvet","common":"Isola Bouvet"},"jpn":{"official":"ブーヴェ島","common":"ブーベ島"},"kor":{"official":"부베 섬","common":"부베 섬"},"nld":{"official":"Bouvet Island","common":"Bouveteiland"},"per":{"official":"جزیرهٔ بووه","common":"جزیرهٔ بووه"},"pol":{"official":"Wyspa Bouveta","common":"Wyspa Bouveta"},"por":{"official":"Ilha Bouvet","common":"Ilha Bouvet"},"rus":{"official":"Остров Буве","common":"Остров Буве"},"slk":{"official":"Bouvetov ostrov","common":"Bouvetov ostrov"},"spa":{"official":"Isla Bouvet","common":"Isla Bouvet"},"swe":{"official":"Bouvet\xf6n","common":"Bouvet\xf6n"},"urd":{"official":"جزیرہ بووہ","common":"جزیرہ بووہ"},"zho":{"official":"布维岛","common":"布维岛"}},"latlng":[-54.43333333,3.4],"landlocked":false,"borders":[],"area":49,"flag":"\uD83C\uDDE7\uD83C\uDDFB","demonyms":{"eng":{"f":"","m":""},"fra":{"f":"","m":""}}},{"name":{"common":"Botswana","official":"Republic of Botswana","native":{"eng":{"official":"Republic of Botswana","common":"Botswana"},"tsn":{"official":"Lefatshe la Botswana","common":"Botswana"}}},"tld":[".bw"],"cca2":"BW","ccn3":"072","cca3":"BWA","cioc":"BOT","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BWP":{"name":"Botswana pula","symbol":"P"}},"idd":{"root":"+2","suffixes":["67"]},"capital":["Gaborone"],"altSpellings":["BW","Republic of Botswana","Lefatshe la Botswana"],"region":"Africa","subregion":"Southern Africa","languages":{"eng":"English","tsn":"Tswana"},"translations":{"ces":{"official":"Botswansk\xe1 republika","common":"Botswana"},"deu":{"official":"Republik Botsuana","common":"Botswana"},"est":{"official":"Botswana Vabariik","common":"Botswana"},"fin":{"official":"Botswanan tasavalta","common":"Botswana"},"fra":{"official":"R\xe9publique du Botswana","common":"Botswana"},"hrv":{"official":"Republika Bocvana","common":"Bocvana"},"hun":{"official":"Botswanai K\xf6zt\xe1rsas\xe1g","common":"Botswana"},"ita":{"official":"Repubblica del Botswana","common":"Botswana"},"jpn":{"official":"ボツワナ共和国","common":"ボツワナ"},"kor":{"official":"보츠와나 공화국","common":"보츠와나"},"nld":{"official":"Republiek Botswana","common":"Botswana"},"per":{"official":"جمهوری بوتسوانا","common":"بوتسوانا"},"pol":{"official":"Republika Botswany","common":"Botswana"},"por":{"official":"Rep\xfablica do Botswana","common":"Botswana"},"rus":{"official":"Республика Ботсвана","common":"Ботсвана"},"slk":{"official":"Botswansk\xe1 republika","common":"Botswana"},"spa":{"official":"Rep\xfablica de Botswana","common":"Botswana"},"swe":{"official":"Republiken Botswana","common":"Botswana"},"urd":{"official":"جمہوریہ بوٹسوانا","common":"بوٹسوانا"},"zho":{"official":"博茨瓦纳共和国","common":"博茨瓦纳"}},"latlng":[-22,24],"landlocked":true,"borders":["NAM","ZAF","ZMB","ZWE"],"area":582000,"flag":"\uD83C\uDDE7\uD83C\uDDFC","demonyms":{"eng":{"f":"Motswana","m":"Motswana"},"fra":{"f":"Botswanaise","m":"Botswanais"}}},{"name":{"common":"Central African Republic","official":"Central African Republic","native":{"fra":{"official":"R\xe9publique centrafricaine","common":"R\xe9publique centrafricaine"},"sag":{"official":"K\xf6d\xf6r\xf6s\xease t\xee B\xeaafr\xeeka","common":"B\xeaafr\xeeka"}}},"tld":[".cf"],"cca2":"CF","ccn3":"140","cca3":"CAF","cioc":"CAF","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XAF":{"name":"Central African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["36"]},"capital":["Bangui"],"altSpellings":["CF","Central African Republic","R\xe9publique centrafricaine"],"region":"Africa","subregion":"Middle Africa","languages":{"fra":"French","sag":"Sango"},"translations":{"ces":{"official":"Středoafrick\xe1 republika","common":"Středoafrick\xe1 republika"},"cym":{"official":"Gweriniaeth Canolbarth Affrica","common":"Gweriniaeth Canolbarth Affrica"},"deu":{"official":"Zentralafrikanische Republik","common":"Zentralafrikanische Republik"},"est":{"official":"Kesk-Aafrika Vabariik","common":"Kesk-Aafrika Vabariik"},"fin":{"official":"Keski-Afrikan tasavalta","common":"Keski-Afrikan tasavalta"},"fra":{"official":"R\xe9publique centrafricaine","common":"R\xe9publique centrafricaine"},"hrv":{"official":"Centralna Afrička Republika","common":"Srednjoafrička Republika"},"hun":{"official":"K\xf6z\xe9p-afrikai K\xf6zt\xe1rsas\xe1g","common":"K\xf6z\xe9p-afrikai K\xf6zt\xe1rsas\xe1g"},"ita":{"official":"Repubblica Centrafricana","common":"Repubblica Centrafricana"},"jpn":{"official":"中央アフリカ共和国","common":"中央アフリカ共和国"},"kor":{"official":"중앙아프리카 공화국","common":"중앙아프리카 공화국"},"nld":{"official":"Centraal-Afrikaanse Republiek","common":"Centraal-Afrikaanse Republiek"},"per":{"official":"جمهوری آفریقای مرکزی","common":"جمهوری آفریقای مرکزی"},"pol":{"official":"Republika Środkowoafrykańska","common":"Republika Środkowoafrykańska"},"por":{"official":"Rep\xfablica Centro-Africano","common":"Rep\xfablica Centro-Africana"},"rus":{"official":"Центрально-Африканская Республика","common":"Центральноафриканская Республика"},"slk":{"official":"Stredoafrick\xe1 republika","common":"Stredoafrick\xe1 republika"},"spa":{"official":"Rep\xfablica Centroafricana","common":"Rep\xfablica Centroafricana"},"swe":{"official":"Centralafrikanska republiken","common":"Centralafrikanska republiken"},"urd":{"official":"وسطی افریقی جمہوریہ","common":"وسطی افریقی جمہوریہ"},"zho":{"official":"中非共和国","common":"中非共和国"}},"latlng":[7,21],"landlocked":true,"borders":["CMR","TCD","COD","COG","SSD","SDN"],"area":622984,"flag":"\uD83C\uDDE8\uD83C\uDDEB","demonyms":{"eng":{"f":"Central African","m":"Central African"},"fra":{"f":"Centrafricaine","m":"Centrafricain"}}},{"name":{"common":"Canada","official":"Canada","native":{"eng":{"official":"Canada","common":"Canada"},"fra":{"official":"Canada","common":"Canada"}}},"tld":[".ca"],"cca2":"CA","ccn3":"124","cca3":"CAN","cioc":"CAN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CAD":{"name":"Canadian dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["204","226","236","249","250","263","289","306","343","354","365","367","368","382","387","403","416","418","428","431","437","438","450","468","474","506","514","519","548","579","581","584","587","600","604","613","622","633","639","644","647","655","672","677","683","688","705","709","742","753","778","780","782","782","807","819","825","867","867","867","873","879","902","902","905","942"]},"capital":["Ottawa"],"altSpellings":["CA"],"region":"Americas","subregion":"North America","languages":{"eng":"English","fra":"French"},"translations":{"ces":{"official":"Kanada","common":"Kanada"},"cym":{"official":"Canada","common":"Canada"},"deu":{"official":"Kanada","common":"Kanada"},"est":{"official":"Kanada","common":"Kanada"},"fin":{"official":"Kanada","common":"Kanada"},"fra":{"official":"Canada","common":"Canada"},"hrv":{"official":"Kanada","common":"Kanada"},"hun":{"official":"Kanada","common":"Kanada"},"ita":{"official":"Canada","common":"Canada"},"jpn":{"official":"カナダ","common":"カナダ"},"kor":{"official":"캐나다","common":"캐나다"},"nld":{"official":"Canada","common":"Canada"},"per":{"official":"کانادا","common":"کانادا"},"pol":{"official":"Kanada","common":"Kanada"},"por":{"official":"Canad\xe1","common":"Canad\xe1"},"rus":{"official":"Канада","common":"Канада"},"slk":{"official":"Kanada","common":"Kanada"},"spa":{"official":"Canad\xe1","common":"Canad\xe1"},"swe":{"official":"Kanada","common":"Kanada"},"urd":{"official":"کینیڈا","common":"کینیڈا"},"zho":{"official":"加拿大","common":"加拿大"}},"latlng":[60,-95],"landlocked":false,"borders":["USA"],"area":9984670,"flag":"\uD83C\uDDE8\uD83C\uDDE6","demonyms":{"eng":{"f":"Canadian","m":"Canadian"},"fra":{"f":"Canadienne","m":"Canadien"}}},{"name":{"common":"Cocos (Keeling) Islands","official":"Territory of the Cocos (Keeling) Islands","native":{"eng":{"official":"Territory of the Cocos (Keeling) Islands","common":"Cocos (Keeling) Islands"}}},"tld":[".cc"],"cca2":"CC","ccn3":"166","cca3":"CCK","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"AUD":{"name":"Australian dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["1"]},"capital":["West Island"],"altSpellings":["CC","Keeling Islands","Cocos Islands"],"region":"Oceania","subregion":"Australia and New Zealand","languages":{"eng":"English"},"translations":{"ces":{"official":"Kokosov\xe9 ostrovy","common":"Kokosov\xe9 ostrovy"},"cym":{"official":"Tiriogaeth yr Ynysoedd Cocos (Keeling)","common":"Ynysoedd Cocos"},"deu":{"official":"Gebiet der Kokos- (Keeling-) Inseln","common":"Kokosinseln"},"est":{"official":"Kookossaarte ala","common":"Kookossaared"},"fin":{"official":"Kookossaaret","common":"Kookossaaret"},"fra":{"official":"Territoire des \xeeles Cocos (Keeling)","common":"\xceles Cocos"},"hrv":{"official":"Teritoriju Kokosovi (Keeling) Islands","common":"Kokosovi Otoci"},"hun":{"official":"K\xf3kusz-szigetek","common":"K\xf3kusz-szigetek"},"ita":{"official":"Territorio della (Keeling) Isole Cocos","common":"Isole Cocos e Keeling"},"jpn":{"official":"ココス諸島の領土","common":"ココス（キーリング）諸島"},"kor":{"official":"코코스 제도","common":"코코스 제도"},"nld":{"official":"Grondgebied van de Eilanden Cocos (Keeling )","common":"Cocoseilanden"},"per":{"official":"جزایر کوکوس","common":"جزایر کوکوس"},"pol":{"official":"Wyspy Kokosowe","common":"Wyspy Kokosowe"},"por":{"official":"Territ\xf3rio dos Cocos (Keeling)","common":"Ilhas Cocos (Keeling)"},"rus":{"official":"Территория Кокосовые (Килинг) острова","common":"Кокосовые острова"},"slk":{"official":"Kokosov\xe9 ostrovy","common":"Kokosov\xe9 ostrovy"},"spa":{"official":"Territorio de los (Keeling) Islas Cocos","common":"Islas Cocos o Islas Keeling"},"swe":{"official":"Kokos\xf6arna","common":"Kokos\xf6arna"},"urd":{"official":"جزائر (کیلنگ) کوکوس","common":"جزائر کوکوس"},"zho":{"official":"科科斯","common":"科科斯"}},"latlng":[-12.5,96.83333333],"landlocked":false,"borders":[],"area":14,"flag":"\uD83C\uDDE8\uD83C\uDDE8","demonyms":{"eng":{"f":"Cocos Islander","m":"Cocos Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Switzerland","official":"Swiss Confederation","native":{"fra":{"official":"Conf\xe9d\xe9ration suisse","common":"Suisse"},"gsw":{"official":"Schweizerische Eidgenossenschaft","common":"Schweiz"},"ita":{"official":"Confederazione Svizzera","common":"Svizzera"},"roh":{"official":"Confederaziun svizra","common":"Svizra"}}},"tld":[".ch"],"cca2":"CH","ccn3":"756","cca3":"CHE","cioc":"SUI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CHF":{"name":"Swiss franc","symbol":"Fr."}},"idd":{"root":"+4","suffixes":["1"]},"capital":["Bern"],"altSpellings":["CH","Swiss Confederation","Schweiz","Suisse","Svizzera","Svizra"],"region":"Europe","subregion":"Western Europe","languages":{"fra":"French","gsw":"Swiss German","ita":"Italian","roh":"Romansh"},"translations":{"ces":{"official":"Šv\xfdcarsk\xe1 konfederace","common":"Šv\xfdcarsko"},"deu":{"official":"Schweizerische Eidgenossenschaft","common":"Schweiz"},"est":{"official":"Šveitsi Konf\xf6deratsioon","common":"Šveits"},"fin":{"official":"Sveitsin valaliitto","common":"Sveitsi"},"fra":{"official":"Conf\xe9d\xe9ration suisse","common":"Suisse"},"hrv":{"official":"švicarska Konfederacija","common":"Švicarska"},"hun":{"official":"Sv\xe1jc","common":"Sv\xe1jc"},"ita":{"official":"Confederazione svizzera","common":"Svizzera"},"jpn":{"official":"スイス連邦","common":"スイス"},"kor":{"official":"스위스 연방","common":"스위스"},"nld":{"official":"Zwitserse Confederatie","common":"Zwitserland"},"per":{"official":"کنفدراسیون سوئیس","common":"سوئیس"},"pol":{"official":"Konfederacja Szwajcarska","common":"Szwajcaria"},"por":{"official":"Confedera\xe7\xe3o Su\xed\xe7a","common":"Su\xed\xe7a"},"rus":{"official":"Швейцарская Конфедерация","common":"Швейцария"},"slk":{"official":"Švajčiarska konfeder\xe1cia","common":"Švajčiarsko"},"spa":{"official":"Confederaci\xf3n Suiza","common":"Suiza"},"swe":{"official":"Schweiziska edsf\xf6rbundet","common":"Schweiz"},"urd":{"official":"سوئیس  متحدہ","common":"سویٹذرلینڈ"},"zho":{"official":"瑞士联邦","common":"瑞士"}},"latlng":[47,8],"landlocked":true,"borders":["AUT","FRA","ITA","LIE","DEU"],"area":41284,"flag":"\uD83C\uDDE8\uD83C\uDDED","demonyms":{"eng":{"f":"Swiss","m":"Swiss"},"fra":{"f":"Suisse","m":"Suisse"}}},{"name":{"common":"Chile","official":"Republic of Chile","native":{"spa":{"official":"Rep\xfablica de Chile","common":"Chile"}}},"tld":[".cl"],"cca2":"CL","ccn3":"152","cca3":"CHL","cioc":"CHI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CLP":{"name":"Chilean peso","symbol":"$"}},"idd":{"root":"+5","suffixes":["6"]},"capital":["Santiago"],"altSpellings":["CL","Republic of Chile","Rep\xfablica de Chile"],"region":"Americas","subregion":"South America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Chilsk\xe1 republika","common":"Chile"},"cym":{"official":"Gweriniaeth Chile","common":"Chile"},"deu":{"official":"Republik Chile","common":"Chile"},"est":{"official":"Tšiili Vabariik","common":"Tšiili"},"fin":{"official":"Chilen tasavalta","common":"Chile"},"fra":{"official":"R\xe9publique du Chili","common":"Chili"},"hrv":{"official":"Republika Čile","common":"Čile"},"hun":{"official":"Chilei K\xf6zt\xe1rsas\xe1g","common":"Chile"},"ita":{"official":"Repubblica del Cile","common":"Cile"},"jpn":{"official":"チリ共和国","common":"チリ"},"kor":{"official":"칠레 공화국","common":"칠레"},"nld":{"official":"Republiek Chili","common":"Chili"},"per":{"official":"جمهوری شیلی","common":"شیلی"},"pol":{"official":"Republika Chile","common":"Chile"},"por":{"official":"Rep\xfablica do Chile","common":"Chile"},"rus":{"official":"Республика Чили","common":"Чили"},"slk":{"official":"Č\xedlska republika","common":"Čile"},"spa":{"official":"Rep\xfablica de Chile","common":"Chile"},"swe":{"official":"Republiken Chile","common":"Chile"},"urd":{"official":"جمہوریہ چلی","common":"چلی"},"zho":{"official":"智利共和国","common":"智利"}},"latlng":[-30,-71],"landlocked":false,"borders":["ARG","BOL","PER"],"area":756102,"flag":"\uD83C\uDDE8\uD83C\uDDF1","demonyms":{"eng":{"f":"Chilean","m":"Chilean"},"fra":{"f":"Chilienne","m":"Chilien"}}},{"name":{"common":"China","official":"People\'s Republic of China","native":{"zho":{"official":"中华人民共和国","common":"中国"}}},"tld":[".cn",".中国",".中國",".公司",".网络"],"cca2":"CN","ccn3":"156","cca3":"CHN","cioc":"CHN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CNY":{"name":"Chinese yuan","symbol":"\xa5"}},"idd":{"root":"+8","suffixes":["6"]},"capital":["Beijing"],"altSpellings":["CN","Zhōnggu\xf3","Zhongguo","Zhonghua","People\'s Republic of China","中华人民共和国","Zhōnghu\xe1 R\xe9nm\xedn G\xf2ngh\xe9gu\xf3"],"region":"Asia","subregion":"Eastern Asia","languages":{"zho":"Chinese"},"translations":{"ces":{"official":"Č\xednsk\xe1 lidov\xe1 republika","common":"Č\xedna"},"cym":{"official":"Gweriniaeth Pobl Tsieina","common":"Tsieina"},"deu":{"official":"Volksrepublik China","common":"China"},"est":{"official":"Hiina Rahvavabariik","common":"Hiina"},"fin":{"official":"Kiinan kansantasavalta","common":"Kiina"},"fra":{"official":"R\xe9publique populaire de Chine","common":"Chine"},"hrv":{"official":"Narodna Republika Kina","common":"Kina"},"hun":{"official":"K\xednai N\xe9pk\xf6zt\xe1rsas\xe1g","common":"K\xedna"},"ita":{"official":"Repubblica popolare cinese","common":"Cina"},"jpn":{"official":"中華人民共和国","common":"中国"},"kor":{"official":"중화인민공화국","common":"중국"},"nld":{"official":"Volksrepubliek China","common":"China"},"per":{"official":"جمهوری خلق چین","common":"چین"},"pol":{"official":"Chińska Republika Ludowa","common":"Chiny"},"por":{"official":"Rep\xfablica Popular da China","common":"China"},"rus":{"official":"Народная Республика Китай","common":"Китай"},"slk":{"official":"Č\xednska ľudov\xe1 republika","common":"Č\xedna"},"spa":{"official":"Rep\xfablica Popular de China","common":"China"},"swe":{"official":"Folkrepubliken Kina","common":"Kina"},"urd":{"official":"عوامی جمہوریہ چین","common":"چین"}},"latlng":[35,105],"landlocked":false,"borders":["AFG","BTN","MMR","HKG","IND","KAZ","NPL","PRK","KGZ","LAO","MAC","MNG","PAK","RUS","TJK","VNM"],"area":9706961,"flag":"\uD83C\uDDE8\uD83C\uDDF3","demonyms":{"eng":{"f":"Chinese","m":"Chinese"},"fra":{"f":"Chinoise","m":"Chinois"}}},{"name":{"common":"Ivory Coast","official":"Republic of C\xf4te d\'Ivoire","native":{"fra":{"official":"R\xe9publique de C\xf4te d\'Ivoire","common":"C\xf4te d\'Ivoire"}}},"tld":[".ci"],"cca2":"CI","ccn3":"384","cca3":"CIV","cioc":"CIV","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["25"]},"capital":["Yamoussoukro"],"altSpellings":["CI","C\xf4te d\'Ivoire","Ivory Coast","Republic of C\xf4te d\'Ivoire","R\xe9publique de C\xf4te d\'Ivoire"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Republika Pobřež\xed slonoviny","common":"Pobřež\xed slonoviny"},"deu":{"official":"Republik C\xf4te d\'Ivoire","common":"Elfenbeink\xfcste"},"est":{"official":"C\xf4te d’Ivoire’i Vabariik","common":"Elevandiluurannik"},"fin":{"official":"Norsunluurannikon tasavalta","common":"Norsunluurannikko"},"fra":{"official":"R\xe9publique de C\xf4te d\' Ivoire","common":"C\xf4te d\'Ivoire"},"hrv":{"official":"Republika C\xf4te d\'Ivoire","common":"Obala Bjelokosti"},"hun":{"official":"Elef\xe1ntcsontparti K\xf6zt\xe1rsas\xe1g","common":"Elef\xe1ntcsontpart"},"ita":{"official":"Repubblica della Costa d\'Avorio","common":"Costa d\'Avorio"},"jpn":{"official":"コートジボワール共和国","common":"コートジボワール"},"kor":{"official":"코트디부아르 공화국","common":"코트디부아르"},"nld":{"official":"Republiek Ivoorkust","common":"Ivoorkust"},"per":{"official":"جمهوری ساحل عاج","common":"ساحل عاج"},"pol":{"official":"Republika WybrzeŻa Kości Słoniowej","common":"WybrzeŻe Kości Słoniowej"},"por":{"official":"Rep\xfablica da C\xf4te d\'Ivoire","common":"Costa do Marfim"},"rus":{"official":"Республика Кот-д\'Ивуаре","common":"Кот-д’Ивуар"},"slk":{"official":"Republika Pobrežie Slonoviny","common":"Pobržie Slonoviny"},"spa":{"official":"Rep\xfablica de C\xf4te d\'Ivoire","common":"Costa de Marfil"},"swe":{"official":"Republiken Elfenbenskusten","common":"Elfenbenskusten"},"urd":{"official":"جمہوریہ کوت دیواغ","common":"آئیوری کوسٹ"},"zho":{"official":"科特迪瓦共和国","common":"科特迪瓦"}},"latlng":[8,-5],"landlocked":false,"borders":["BFA","GHA","GIN","LBR","MLI"],"area":322463,"flag":"\uD83C\uDDE8\uD83C\uDDEE","demonyms":{"eng":{"f":"Ivorian","m":"Ivorian"},"fra":{"f":"Ivoirienne","m":"Ivoirien"}}},{"name":{"common":"Cameroon","official":"Republic of Cameroon","native":{"eng":{"official":"Republic of Cameroon","common":"Cameroon"},"fra":{"official":"R\xe9publique du Cameroun","common":"Cameroun"}}},"tld":[".cm"],"cca2":"CM","ccn3":"120","cca3":"CMR","cioc":"CMR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XAF":{"name":"Central African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["37"]},"capital":["Yaound\xe9"],"altSpellings":["CM","Republic of Cameroon","R\xe9publique du Cameroun"],"region":"Africa","subregion":"Middle Africa","languages":{"eng":"English","fra":"French"},"translations":{"ces":{"official":"Kamerunsk\xe1 republika","common":"Kamerun"},"cym":{"official":"Gweriniaeth Camerŵn","common":"Camerŵn"},"deu":{"official":"Republik Kamerun","common":"Kamerun"},"est":{"official":"Kameruni Vabariik","common":"Kamerun"},"fin":{"official":"Kamerunin tasavalta","common":"Kamerun"},"fra":{"official":"R\xe9publique du Cameroun","common":"Cameroun"},"hrv":{"official":"Republika Kamerun","common":"Kamerun"},"hun":{"official":"Kameruni K\xf6zt\xe1rsas\xe1g","common":"Kamerun"},"ita":{"official":"Repubblica del Camerun","common":"Camerun"},"jpn":{"official":"カメルーン共和国","common":"カメルーン"},"kor":{"official":"카메룬 공화국","common":"카메룬"},"nld":{"official":"Republiek Kameroen","common":"Kameroen"},"per":{"official":"جمهوری کامِرون","common":"کامِرون"},"pol":{"official":"Republika WybrzeŻa Kości Słoniowej","common":"WybrzeŻe Kości Słoniowej"},"por":{"official":"Rep\xfablica dos Camar\xf5es","common":"Camar\xf5es"},"rus":{"official":"Республика Камерун","common":"Камерун"},"slk":{"official":"Kamerunsk\xe1 republika","common":"Kamerun"},"spa":{"official":"Rep\xfablica de Camer\xfan","common":"Camer\xfan"},"swe":{"official":"Republiken Kamerun","common":"Kamerun"},"urd":{"official":"جمہوریہ کیمرون","common":"کیمرون"},"zho":{"official":"喀麦隆共和国","common":"喀麦隆"}},"latlng":[6,12],"landlocked":false,"borders":["CAF","TCD","COG","GNQ","GAB","NGA"],"area":475442,"flag":"\uD83C\uDDE8\uD83C\uDDF2","demonyms":{"eng":{"f":"Cameroonian","m":"Cameroonian"},"fra":{"f":"Camerounaise","m":"Camerounais"}}},{"name":{"common":"DR Congo","official":"Democratic Republic of the Congo","native":{"fra":{"official":"R\xe9publique d\xe9mocratique du Congo","common":"RD Congo"},"kon":{"official":"Repubilika ya Kongo Demokratiki","common":"Repubilika ya Kongo Demokratiki"},"lin":{"official":"Republiki ya Kong\xf3 Demokratiki","common":"Republiki ya Kong\xf3 Demokratiki"},"lua":{"official":"Ditunga dia Kongu wa Mungalaata","common":"Ditunga dia Kongu wa Mungalaata"},"swa":{"official":"Jamhuri ya Kidemokrasia ya Kongo","common":"Jamhuri ya Kidemokrasia ya Kongo"}}},"tld":[".cd"],"cca2":"CD","ccn3":"180","cca3":"COD","cioc":"COD","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CDF":{"name":"Congolese franc","symbol":"FC"}},"idd":{"root":"+2","suffixes":["43"]},"capital":["Kinshasa"],"altSpellings":["CD","DR Congo","Congo-Kinshasa","Congo, the Democratic Republic of the","DRC"],"region":"Africa","subregion":"Middle Africa","languages":{"fra":"French","kon":"Kikongo","lin":"Lingala","lua":"Tshiluba","swa":"Swahili"},"translations":{"ces":{"official":"Demokratick\xe1 republika Kongo","common":"DR Kongo"},"cym":{"official":"Gweriniaeth Ddemocrataidd Congo","common":"Gweriniaeth Ddemocrataidd Congo"},"deu":{"official":"Demokratische Republik Kongo","common":"Kongo (Dem. Rep.)"},"est":{"official":"Kongo Demokraatlik Vabariik","common":"Kongo DV"},"fin":{"official":"Kongon demokraattinen tasavalta","common":"Kongon demokraattinen tasavalta"},"fra":{"official":"R\xe9publique d\xe9mocratique du Congo","common":"Congo (R\xe9p. d\xe9m.)"},"hrv":{"official":"Demokratska Republika Kongo","common":"Kongo, Demokratska Republika"},"hun":{"official":"Kong\xf3i Demokratikus K\xf6zt\xe1rsas\xe1g","common":"Kong\xf3i Demokratikus K\xf6zt\xe1rsas\xe1g"},"ita":{"official":"Repubblica Democratica del Congo","common":"Congo (Rep. Dem.)"},"jpn":{"official":"コンゴ民主共和国","common":"コンゴ民主共和国"},"kor":{"official":"콩고 민주 공화국","common":"콩고 민주 공화국"},"nld":{"official":"Democratische Republiek Congo","common":"Congo (DRC)"},"per":{"official":"جمهوری دموکراتیک کنگو","common":"کنگو دموکراتیک"},"pol":{"official":"Demokratyczna Republika Konga","common":"Demokratyczna Republika Konga"},"por":{"official":"Rep\xfablica Democr\xe1tica do Congo","common":"Rep\xfablica Democr\xe1tica do Congo"},"rus":{"official":"Демократическая Республика Конго","common":"Демократическая Республика Конго"},"slk":{"official":"Konžsk\xe1 demokratick\xe1 republika","common":"Kongo"},"spa":{"official":"Rep\xfablica Democr\xe1tica del Congo","common":"Congo (Rep. Dem.)"},"swe":{"official":"Demokratiska republiken Kongo","common":"Kongo-Kinshasa"},"urd":{"official":"جمہوری جمہوریہ کانگو","common":"کانگو"},"zho":{"official":"刚果民主共和国","common":"民主刚果"}},"latlng":[0,25],"landlocked":false,"borders":["AGO","BDI","CAF","COG","RWA","SSD","TZA","UGA","ZMB"],"area":2344858,"flag":"\uD83C\uDDE8\uD83C\uDDE9","demonyms":{"eng":{"f":"Congolese","m":"Congolese"},"fra":{"f":"Congolaise","m":"Congolais"}}},{"name":{"common":"Republic of the Congo","official":"Republic of the Congo","native":{"fra":{"official":"R\xe9publique du Congo","common":"R\xe9publique du Congo"},"kon":{"official":"Repubilika ya Kongo","common":"Repubilika ya Kongo"},"lin":{"official":"Republ\xedki ya Kong\xf3","common":"Republ\xedki ya Kong\xf3"}}},"tld":[".cg"],"cca2":"CG","ccn3":"178","cca3":"COG","cioc":"CGO","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XAF":{"name":"Central African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["42"]},"capital":["Brazzaville"],"altSpellings":["CG","Congo","Congo-Brazzaville"],"region":"Africa","subregion":"Middle Africa","languages":{"fra":"French","kon":"Kikongo","lin":"Lingala"},"translations":{"ces":{"official":"Konžsk\xe1 republika","common":"Kongo"},"cym":{"official":"Gweriniaeth y Congo","common":"Gweriniaeth y Congo"},"deu":{"official":"Republik Kongo","common":"Kongo"},"est":{"official":"Kongo Vabariik","common":"Kongo Vabariik"},"fin":{"official":"Kongon tasavalta","common":"Kongo-Brazzaville"},"fra":{"official":"R\xe9publique du Congo","common":"Congo"},"hrv":{"official":"Republika Kongo","common":"Kongo"},"hun":{"official":"Kong\xf3i K\xf6zt\xe1rsas\xe1g","common":"Kong\xf3i K\xf6zt\xe1rsas\xe1g"},"ita":{"official":"Repubblica del Congo","common":"Congo"},"jpn":{"official":"コンゴ共和国","common":"コンゴ共和国"},"kor":{"official":"콩고","common":"콩고"},"nld":{"official":"Republiek Congo","common":"Congo"},"per":{"official":"جمهوری برازاویل کُنگو","common":"جمهوری کُنگو"},"pol":{"official":"Republika Konga","common":"Kongo"},"por":{"official":"Rep\xfablica do Congo","common":"Congo"},"rus":{"official":"Республика Конго","common":"Республика Конго"},"slk":{"official":"Konžsk\xe1 republika","common":"Kongo"},"spa":{"official":"Rep\xfablica del Congo","common":"Congo"},"swe":{"official":"Republiken Kongo","common":"Kongo-Brazzaville"},"urd":{"official":"جمہوریہ کانگو","common":"جمہوریہ کانگو"},"zho":{"official":"刚果共和国","common":"刚果"}},"latlng":[-1,15],"landlocked":false,"borders":["AGO","CMR","CAF","COD","GAB"],"area":342000,"flag":"\uD83C\uDDE8\uD83C\uDDEC","demonyms":{"eng":{"f":"Congolese","m":"Congolese"},"fra":{"f":"Congolaise","m":"Congolais"}}},{"name":{"common":"Cook Islands","official":"Cook Islands","native":{"eng":{"official":"Cook Islands","common":"Cook Islands"},"rar":{"official":"Kūki \'Āirani","common":"Kūki \'Āirani"}}},"tld":[".ck"],"cca2":"CK","ccn3":"184","cca3":"COK","cioc":"COK","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"CKD":{"name":"Cook Islands dollar","symbol":"$"},"NZD":{"name":"New Zealand dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["82"]},"capital":["Avarua"],"altSpellings":["CK","Kūki \'Āirani"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English","rar":"Cook Islands Māori"},"translations":{"ces":{"official":"Cookovy ostrovy","common":"Cookovy ostrovy"},"cym":{"official":"Ynysoedd Cook","common":"Ynysoedd Cook"},"deu":{"official":"Cookinseln","common":"Cookinseln"},"est":{"official":"Cooki saared","common":"Cooki saared"},"fin":{"official":"Cookinsaaret","common":"Cookinsaaret"},"fra":{"official":"\xceles Cook","common":"\xceles Cook"},"hrv":{"official":"Cook Islands","common":"Cookovo Otočje"},"hun":{"official":"Cook-szigetek","common":"Cook-szigetek"},"ita":{"official":"Isole Cook","common":"Isole Cook"},"jpn":{"official":"クック諸島","common":"クック諸島"},"kor":{"official":"쿡 제도","common":"쿡 제도"},"nld":{"official":"Cook eilanden","common":"Cookeilanden"},"per":{"official":"جزایر کوک","common":"جزایر کوک"},"pol":{"official":"Wyspy Cooka","common":"Wyspy Cooka"},"por":{"official":"Ilhas Cook","common":"Ilhas Cook"},"rus":{"official":"острова Кука","common":"Острова Кука"},"slk":{"official":"Cookove ostrovy","common":"Cookove ostrovy"},"spa":{"official":"Islas Cook","common":"Islas Cook"},"swe":{"official":"Cook\xf6arna","common":"Cook\xf6arna"},"urd":{"official":"جزائر کک","common":"جزائر کک"},"zho":{"official":"库克群岛","common":"库克群岛"}},"latlng":[-21.23333333,-159.76666666],"landlocked":false,"borders":[],"area":236,"flag":"\uD83C\uDDE8\uD83C\uDDF0","demonyms":{"eng":{"f":"Cook Islander","m":"Cook Islander"},"fra":{"f":"Cookienne","m":"Cookien"}}},{"name":{"common":"Colombia","official":"Republic of Colombia","native":{"spa":{"official":"Rep\xfablica de Colombia","common":"Colombia"}}},"tld":[".co"],"cca2":"CO","ccn3":"170","cca3":"COL","cioc":"COL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"COP":{"name":"Colombian peso","symbol":"$"}},"idd":{"root":"+5","suffixes":["7"]},"capital":["Bogot\xe1"],"altSpellings":["CO","Republic of Colombia","Rep\xfablica de Colombia"],"region":"Americas","subregion":"South America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Kolumbijsk\xe1 republika","common":"Kolumbie"},"cym":{"official":"Gweriniaeth Colombia","common":"Colombia"},"deu":{"official":"Republik Kolumbien","common":"Kolumbien"},"est":{"official":"Colombia Vabariik","common":"Colombia"},"fin":{"official":"Kolumbian tasavalta","common":"Kolumbia"},"fra":{"official":"R\xe9publique de Colombie","common":"Colombie"},"hrv":{"official":"Republika Kolumbija","common":"Kolumbija"},"hun":{"official":"Kolumbiai K\xf6zt\xe1rsas\xe1g","common":"Kolumbia"},"ita":{"official":"Repubblica di Colombia","common":"Colombia"},"jpn":{"official":"コロンビア共和国","common":"コロンビア"},"kor":{"official":"콜롬비아 공화국","common":"콜롬비아"},"nld":{"official":"Republiek Colombia","common":"Colombia"},"per":{"official":"جمهوری کلمبیا","common":"کلمبیا"},"pol":{"official":"Republika Kolumbii","common":"Kolumbia"},"por":{"official":"Rep\xfablica da Col\xf4mbia","common":"Col\xf4mbia"},"rus":{"official":"Республика Колумбия","common":"Колумбия"},"slk":{"official":"Kolumbijsk\xe1 republika","common":"Kolumbia"},"spa":{"official":"Rep\xfablica de Colombia","common":"Colombia"},"swe":{"official":"Republiken Colombia","common":"Colombia"},"urd":{"official":"جمہوریہ کولمبیا","common":"کولمبیا"},"zho":{"official":"哥伦比亚共和国","common":"哥伦比亚"}},"latlng":[4,-72],"landlocked":false,"borders":["BRA","ECU","PAN","PER","VEN"],"area":1141748,"flag":"\uD83C\uDDE8\uD83C\uDDF4","demonyms":{"eng":{"f":"Colombian","m":"Colombian"},"fra":{"f":"Colombienne","m":"Colombien"}}},{"name":{"common":"Comoros","official":"Union of the Comoros","native":{"ara":{"official":"الاتحاد القمري","common":"القمر‎"},"fra":{"official":"Union des Comores","common":"Comores"},"zdj":{"official":"Udzima wa Komori","common":"Komori"}}},"tld":[".km"],"cca2":"KM","ccn3":"174","cca3":"COM","cioc":"COM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KMF":{"name":"Comorian franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["69"]},"capital":["Moroni"],"altSpellings":["KM","Union of the Comoros","Union des Comores","Udzima wa Komori","al-Ittiḥād al-Qumurī"],"region":"Africa","subregion":"Eastern Africa","languages":{"ara":"Arabic","fra":"French","zdj":"Comorian"},"translations":{"ces":{"official":"Komorsk\xfd svaz","common":"Komory"},"cym":{"official":"Undeb y Comoros","common":"Y Comoros"},"deu":{"official":"Union der Komoren","common":"Komoren"},"est":{"official":"Komoori Liit","common":"Komoorid"},"fin":{"official":"Komorien liitto","common":"Komorit"},"fra":{"official":"Union des Comores","common":"Comores"},"hrv":{"official":"Savez Komori","common":"Komori"},"hun":{"official":"Comore-szigeteki Uni\xf3","common":"Comore-szigetek"},"ita":{"official":"Unione delle Comore","common":"Comore"},"jpn":{"official":"コモロ連合","common":"コモロ"},"kor":{"official":"코모로 연방","common":"코모로"},"nld":{"official":"Unie van de Comoren","common":"Comoren"},"per":{"official":"مجمع‌الجزایر قمر","common":"اتحاد قُمُر"},"pol":{"official":"Związek Komor\xf3w","common":"Komory"},"por":{"official":"Uni\xe3o das Comores","common":"Comores"},"rus":{"official":"Союз Коморских Островов","common":"Коморы"},"slk":{"official":"Komorsk\xe1 \xfania","common":"Komory"},"spa":{"official":"Uni\xf3n de las Comoras","common":"Comoras"},"swe":{"official":"Unionen Komorerna","common":"Komorerna"},"urd":{"official":"اتحاد القمری","common":"القمری"},"zho":{"official":"科摩罗联盟","common":"科摩罗"}},"latlng":[-12.16666666,44.25],"landlocked":false,"borders":[],"area":1862,"flag":"\uD83C\uDDF0\uD83C\uDDF2","demonyms":{"eng":{"f":"Comoran","m":"Comoran"},"fra":{"f":"Comorienne","m":"Comorien"}}},{"name":{"common":"Cape Verde","official":"Republic of Cabo Verde","native":{"por":{"official":"Rep\xfablica de Cabo Verde","common":"Cabo Verde"}}},"tld":[".cv"],"cca2":"CV","ccn3":"132","cca3":"CPV","cioc":"CPV","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CVE":{"name":"Cape Verdean escudo","symbol":"Esc"}},"idd":{"root":"+2","suffixes":["38"]},"capital":["Praia"],"altSpellings":["CV","Republic of Cabo Verde","Rep\xfablica de Cabo Verde"],"region":"Africa","subregion":"Western Africa","languages":{"por":"Portuguese"},"translations":{"ces":{"official":"Kapverdsk\xe1 republika","common":"Kapverdy"},"cym":{"official":"Gweriniaeth Cabo Verde","common":"Penrhyn Verde"},"deu":{"official":"Republik Cabo Verde","common":"Kap Verde"},"est":{"official":"Cabo Verde Vabariik","common":"Roheneemesaared"},"fin":{"official":"Kap Verden tasavalta","common":"Kap Verde"},"fra":{"official":"R\xe9publique du Cap-Vert","common":"\xceles du Cap-Vert"},"hrv":{"official":"Republika Cabo Verde","common":"Zelenortska Republika"},"hun":{"official":"Z\xf6ld-foki K\xf6zt\xe1rsas\xe1g","common":"Z\xf6ld-foki K\xf6zt\xe1rsas\xe1g"},"ita":{"official":"Repubblica di Capo Verde","common":"Capo Verde"},"jpn":{"official":"カーボベルデ共和国","common":"カーボベルデ"},"kor":{"official":"카보베르데 공화국","common":"카보베르데"},"nld":{"official":"Republiek van Cabo Verde","common":"Kaapverdi\xeb"},"per":{"official":"جمهوری کبو ورد","common":"دماغهٔ سبز"},"pol":{"official":"Republika Zielonego Przylądka","common":"Republika Zielonego Przylądka"},"por":{"official":"Rep\xfablica de Cabo Verde","common":"Cabo Verde"},"rus":{"official":"Республика Кабо -Верде","common":"Кабо-Верде"},"slk":{"official":"Kapverdsk\xe1 republika","common":"Kapverdy"},"spa":{"official":"Rep\xfablica de Cabo Verde","common":"Cabo Verde"},"swe":{"official":"Republiken Kap Verde","common":"Kap Verde"},"urd":{"official":"جمہوریہ کیپ ورڈی","common":"کیپ ورڈی"},"zho":{"official":"佛得角共和国","common":"佛得角"}},"latlng":[16,-24],"landlocked":false,"borders":[],"area":4033,"flag":"\uD83C\uDDE8\uD83C\uDDFB","demonyms":{"eng":{"f":"Cape Verdian","m":"Cape Verdian"},"fra":{"f":"Cap-verdienne","m":"Cap-verdien"}}},{"name":{"common":"Costa Rica","official":"Republic of Costa Rica","native":{"spa":{"official":"Rep\xfablica de Costa Rica","common":"Costa Rica"}}},"tld":[".cr"],"cca2":"CR","ccn3":"188","cca3":"CRI","cioc":"CRC","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CRC":{"name":"Costa Rican col\xf3n","symbol":"₡"}},"idd":{"root":"+5","suffixes":["06"]},"capital":["San Jos\xe9"],"altSpellings":["CR","Republic of Costa Rica","Rep\xfablica de Costa Rica"],"region":"Americas","subregion":"Central America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Kostarick\xe1 republika","common":"Kostarika"},"cym":{"official":"Gweriniaeth Costa Rica","common":"Costa Rica"},"deu":{"official":"Republik Costa Rica","common":"Costa Rica"},"est":{"official":"Costa Rica Vabariik","common":"Costa Rica"},"fin":{"official":"Costa Rican tasavalta","common":"Costa Rica"},"fra":{"official":"R\xe9publique du Costa Rica","common":"Costa Rica"},"hrv":{"official":"Republika Kostarika","common":"Kostarika"},"hun":{"official":"Costa Rica-i K\xf6zt\xe1rsas\xe1g","common":"Costa Rica"},"ita":{"official":"Repubblica di Costa Rica","common":"Costa Rica"},"jpn":{"official":"コスタリカ共和国","common":"コスタリカ"},"kor":{"official":"코스타리카 공화국","common":"코스타리카"},"nld":{"official":"Republiek Costa Rica","common":"Costa Rica"},"per":{"official":"جمهوری کاستاریکا","common":"کاستاریکا"},"pol":{"official":"Republika Kostaryki","common":"Kostaryka"},"por":{"official":"Rep\xfablica da Costa Rica","common":"Costa Rica"},"rus":{"official":"Республика Коста-Рика","common":"Коста-Рика"},"slk":{"official":"Kostarick\xe1 republika","common":"Kostarika"},"spa":{"official":"Rep\xfablica de Costa Rica","common":"Costa Rica"},"swe":{"official":"Republiken Costa Rica","common":"Costa Rica"},"urd":{"official":"جمہوریہ کوسٹاریکا","common":"کوسٹاریکا"},"zho":{"official":"哥斯达黎加共和国","common":"哥斯达黎加"}},"latlng":[10,-84],"landlocked":false,"borders":["NIC","PAN"],"area":51100,"flag":"\uD83C\uDDE8\uD83C\uDDF7","demonyms":{"eng":{"f":"Costa Rican","m":"Costa Rican"},"fra":{"f":"Costaricaine","m":"Costaricain"}}},{"name":{"common":"Cuba","official":"Republic of Cuba","native":{"spa":{"official":"Rep\xfablica de Cuba","common":"Cuba"}}},"tld":[".cu"],"cca2":"CU","ccn3":"192","cca3":"CUB","cioc":"CUB","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CUC":{"name":"Cuban convertible peso","symbol":"$"},"CUP":{"name":"Cuban peso","symbol":"$"}},"idd":{"root":"+5","suffixes":["3"]},"capital":["Havana"],"altSpellings":["CU","Republic of Cuba","Rep\xfablica de Cuba"],"region":"Americas","subregion":"Caribbean","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Kub\xe1nsk\xe1 republika","common":"Kuba"},"cym":{"official":"Gweriniaeth Ciwba","common":"Ciwba"},"deu":{"official":"Republik Kuba","common":"Kuba"},"est":{"official":"Kuuba Vabariik","common":"Kuuba"},"fin":{"official":"Kuuban tasavalta","common":"Kuuba"},"fra":{"official":"R\xe9publique de Cuba","common":"Cuba"},"hrv":{"official":"Republika Kuba","common":"Kuba"},"hun":{"official":"Kubai K\xf6zt\xe1rsas\xe1g","common":"Kuba"},"ita":{"official":"Repubblica di Cuba","common":"Cuba"},"jpn":{"official":"キューバ共和国","common":"キューバ"},"kor":{"official":"쿠바 공화국","common":"쿠바"},"nld":{"official":"Republiek Cuba","common":"Cuba"},"per":{"official":"جمهوری کوبا","common":"کوبا"},"pol":{"official":"Republika Kuby","common":"Kuba"},"por":{"official":"Rep\xfablica de Cuba","common":"Cuba"},"rus":{"official":"Республика Куба","common":"Куба"},"slk":{"official":"Kub\xe1nska republika","common":"Kuba"},"spa":{"official":"Rep\xfablica de Cuba","common":"Cuba"},"swe":{"official":"Republiken Kuba","common":"Kuba"},"urd":{"official":"جمہوریہ کیوبا","common":"کیوبا"},"zho":{"official":"古巴共和国","common":"古巴"}},"latlng":[21.5,-80],"landlocked":false,"borders":[],"area":109884,"flag":"\uD83C\uDDE8\uD83C\uDDFA","demonyms":{"eng":{"f":"Cuban","m":"Cuban"},"fra":{"f":"Cubaine","m":"Cubain"}}},{"name":{"common":"Cura\xe7ao","official":"Country of Cura\xe7ao","native":{"eng":{"official":"Country of Cura\xe7ao","common":"Cura\xe7ao"},"nld":{"official":"Land Cura\xe7ao","common":"Cura\xe7ao"},"pap":{"official":"Pais K\xf2rsou","common":"Pais K\xf2rsou"}}},"tld":[".cw"],"cca2":"CW","ccn3":"531","cca3":"CUW","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"ANG":{"name":"Netherlands Antillean guilder","symbol":"ƒ"}},"idd":{"root":"+5","suffixes":["99"]},"capital":["Willemstad"],"altSpellings":["CW","Curacao","K\xf2rsou","Country of Cura\xe7ao","Land Cura\xe7ao","Pais K\xf2rsou"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English","nld":"Dutch","pap":"Papiamento"},"translations":{"ces":{"official":"Autonomn\xed země Cura\xe7ao","common":"Cura\xe7ao"},"deu":{"official":"Land Cura\xe7ao","common":"Cura\xe7ao"},"est":{"official":"Cura\xe7ao","common":"Cura\xe7ao"},"fin":{"official":"Cura\xe7ao","common":"Cura\xe7ao"},"fra":{"official":"Pays de Cura\xe7ao","common":"Cura\xe7ao"},"hun":{"official":"Cura\xe7ao","common":"Cura\xe7ao"},"ita":{"official":"Paese di Cura\xe7ao","common":"Cura\xe7ao"},"kor":{"official":"퀴라소","common":"퀴라소"},"nld":{"official":"Land Cura\xe7ao","common":"Cura\xe7ao"},"per":{"official":"کوراسائو","common":"کوراسائو"},"pol":{"official":"Cura\xe7ao","common":"Cura\xe7ao"},"por":{"official":"Pa\xeds de Cura\xe7ao","common":"ilha da Cura\xe7\xe3o"},"rus":{"official":"Страна Кюрасао","common":"Кюрасао"},"slk":{"official":"Curacao","common":"Curacao"},"spa":{"official":"Pa\xeds de Curazao","common":"Curazao"},"swe":{"official":"Cura\xe7ao","common":"Cura\xe7ao"},"urd":{"official":"مملکتِ کیوراساؤ","common":"کیوراساؤ"},"zho":{"official":"库拉索","common":"库拉索"}},"latlng":[12.116667,-68.933333],"landlocked":false,"borders":[],"area":444,"flag":"\uD83C\uDDE8\uD83C\uDDFC","demonyms":{"eng":{"f":"Cura\xe7aoan","m":"Cura\xe7aoan"},"fra":{"f":"Curacienne","m":"Curacien"}}},{"name":{"common":"Christmas Island","official":"Territory of Christmas Island","native":{"eng":{"official":"Territory of Christmas Island","common":"Christmas Island"}}},"tld":[".cx"],"cca2":"CX","ccn3":"162","cca3":"CXR","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"AUD":{"name":"Australian dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["1"]},"capital":["Flying Fish Cove"],"altSpellings":["CX","Territory of Christmas Island"],"region":"Oceania","subregion":"Australia and New Zealand","languages":{"eng":"English"},"translations":{"ces":{"official":"Teritorium V\xe1nočn\xedho ostrova","common":"V\xe1nočn\xed ostrov"},"cym":{"official":"Tiriogaeth yr Ynys y Nadolig","common":"Ynys y Nadolig"},"deu":{"official":"Gebiet der Weihnachtsinsel","common":"Weihnachtsinsel"},"est":{"official":"J\xf5ulusaare ala","common":"J\xf5ulusaar"},"fin":{"official":"Joulusaaren alue","common":"Joulusaari"},"fra":{"official":"Territoire de l\'\xeele Christmas","common":"\xcele Christmas"},"hrv":{"official":"Teritorij Božićni otok","common":"Božićni otok"},"hun":{"official":"Kar\xe1csony-sziget","common":"Kar\xe1csony-sziget"},"ita":{"official":"Territorio di Christmas Island","common":"Isola di Natale"},"jpn":{"official":"クリスマス島の領土","common":"クリスマス島"},"kor":{"official":"크리스마스 섬","common":"크리스마스 섬"},"nld":{"official":"Grondgebied van Christmas Island","common":"Christmaseiland"},"per":{"official":"جزیرهٔ کریسمس","common":"جزیرهٔ کریسمس"},"pol":{"official":"Wyspa Bożego Narodzenia","common":"Wyspa Bożego Narodzenia"},"por":{"official":"Territ\xf3rio da Ilha Christmas","common":"Ilha do Natal"},"rus":{"official":"Территория острова Рождества","common":"Остров Рождества"},"slk":{"official":"Terit\xf3rium Vianočn\xe9ho ostrova","common":"Vianočn\xfa ostrov"},"spa":{"official":"Territorio de la Isla de Navidad","common":"Isla de Navidad"},"swe":{"official":"Jul\xf6n","common":"Jul\xf6n"},"urd":{"official":"ریاستِ جزیرہ کرسمس","common":"جزیرہ کرسمس"},"zho":{"official":"圣诞岛","common":"圣诞岛"}},"latlng":[-10.5,105.66666666],"landlocked":false,"borders":[],"area":135,"flag":"\uD83C\uDDE8\uD83C\uDDFD","demonyms":{"eng":{"f":"Christmas Islander","m":"Christmas Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Cayman Islands","official":"Cayman Islands","native":{"eng":{"official":"Cayman Islands","common":"Cayman Islands"}}},"tld":[".ky"],"cca2":"KY","ccn3":"136","cca3":"CYM","cioc":"CAY","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"KYD":{"name":"Cayman Islands dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["345"]},"capital":["George Town"],"altSpellings":["KY"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Kajmansk\xe9 ostrovy","common":"Kajmansk\xe9 ostrovy"},"cym":{"official":"Ynysoedd Cayman","common":"Ynysoedd Cayman"},"deu":{"official":"Cayman-Inseln","common":"Kaimaninseln"},"est":{"official":"Kaimanisaared","common":"Kaimanisaared"},"fin":{"official":"Caymansaaret","common":"Caymansaaret"},"fra":{"official":"\xceles Ca\xefmans","common":"\xceles Ca\xefmans"},"hrv":{"official":"Kajmanski otoci","common":"Kajmanski otoci"},"hun":{"official":"Kajm\xe1n-szigetek","common":"Kajm\xe1n-szigetek"},"ita":{"official":"Isole Cayman","common":"Isole Cayman"},"jpn":{"official":"ケイマン諸島","common":"ケイマン諸島"},"kor":{"official":"케이맨 제도","common":"케이맨 제도"},"nld":{"official":"Caymaneilanden","common":"Caymaneilanden"},"per":{"official":"جزایر کیمن","common":"جزایر کیمن"},"pol":{"official":"Kajmany","common":"Kajmany"},"por":{"official":"Ilhas Cayman","common":"Ilhas Caim\xe3o"},"rus":{"official":"Каймановы острова","common":"Каймановы острова"},"slk":{"official":"Kajmanie ostrovy","common":"Kajmanie ostrovy"},"spa":{"official":"Islas Caim\xe1n","common":"Islas Caim\xe1n"},"swe":{"official":"Cayman\xf6arna","common":"Cayman\xf6arna"},"urd":{"official":"جزائر کیمین","common":"جزائر کیمین"},"zho":{"official":"开曼群岛","common":"开曼群岛"}},"latlng":[19.5,-80.5],"landlocked":false,"borders":[],"area":264,"flag":"\uD83C\uDDF0\uD83C\uDDFE","demonyms":{"eng":{"f":"Caymanian","m":"Caymanian"},"fra":{"f":"Ca\xefmanienne","m":"Ca\xefmanien"}}},{"name":{"common":"Cyprus","official":"Republic of Cyprus","native":{"ell":{"official":"Δημοκρατία της Κύπρος","common":"Κύπρος"},"tur":{"official":"Kıbrıs Cumhuriyeti","common":"Kıbrıs"}}},"tld":[".cy"],"cca2":"CY","ccn3":"196","cca3":"CYP","cioc":"CYP","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["57"]},"capital":["Nicosia"],"altSpellings":["CY","K\xfdpros","Kıbrıs","Republic of Cyprus","Κυπριακή Δημοκρατία","Kıbrıs Cumhuriyeti"],"region":"Europe","subregion":"Southern Europe","languages":{"ell":"Greek","tur":"Turkish"},"translations":{"ces":{"official":"Kypersk\xe1 republika","common":"Kypr"},"cym":{"official":"Gweriniaeth Cyprus","common":"Cyprus"},"deu":{"official":"Republik Zypern","common":"Zypern"},"est":{"official":"K\xfcprose Vabariik","common":"K\xfcpros"},"fin":{"official":"Kyproksen tasavalta","common":"Kypros"},"fra":{"official":"R\xe9publique de Chypre","common":"Chypre"},"hrv":{"official":"Republika Cipar","common":"Cipar"},"hun":{"official":"Ciprusi K\xf6zt\xe1rsas\xe1g","common":"Ciprus"},"ita":{"official":"Repubblica di Cipro","common":"Cipro"},"jpn":{"official":"キプロス共和国","common":"キプロス"},"kor":{"official":"키프로스 공화국","common":"키프로스"},"nld":{"official":"Republiek Cyprus","common":"Cyprus"},"per":{"official":"جمهوری قبرس","common":"قِبرِس"},"pol":{"official":"Republika Cypryjska","common":"Cypr"},"por":{"official":"Rep\xfablica de Chipre","common":"Chipre"},"rus":{"official":"Республика Кипр","common":"Кипр"},"slk":{"official":"Cypersk\xe1 republika","common":"Cyprus"},"spa":{"official":"Rep\xfablica de Chipre","common":"Chipre"},"swe":{"official":"Republiken Cypern","common":"Cypern"},"urd":{"official":"جمہوریہ قبرص","common":"قبرص"},"zho":{"official":"塞浦路斯共和国","common":"塞浦路斯"}},"latlng":[35,33],"landlocked":false,"borders":[],"area":9251,"flag":"\uD83C\uDDE8\uD83C\uDDFE","demonyms":{"eng":{"f":"Cypriot","m":"Cypriot"},"fra":{"f":"Chypriote","m":"Chypriote"}}},{"name":{"common":"Czechia","official":"Czech Republic","native":{"ces":{"official":"Česk\xe1 republika","common":"Česko"},"slk":{"official":"Česk\xe1 republika","common":"Česko"}}},"tld":[".cz"],"cca2":"CZ","ccn3":"203","cca3":"CZE","cioc":"CZE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CZK":{"name":"Czech koruna","symbol":"Kč"}},"idd":{"root":"+4","suffixes":["20"]},"capital":["Prague"],"altSpellings":["CZ","Česk\xe1 republika","Česko"],"region":"Europe","subregion":"Central Europe","languages":{"ces":"Czech","slk":"Slovak"},"translations":{"ces":{"official":"Česk\xe1 republika","common":"Česko"},"cym":{"official":"Y Weriniaeth Tsiec","common":"Y Weriniaeth Tsiec"},"deu":{"official":"Tschechische Republik","common":"Tschechien"},"est":{"official":"Tšehhi Vabariik","common":"Tšehhi"},"fin":{"official":"Tšekin tasavalta","common":"Tšekki"},"fra":{"official":"R\xe9publique tch\xe8que","common":"Tch\xe9quie"},"hrv":{"official":"Češka","common":"Češka"},"hun":{"official":"Cseh K\xf6zt\xe1rsas\xe1g","common":"Csehorsz\xe1g"},"ita":{"official":"Repubblica Ceca","common":"Cechia"},"jpn":{"official":"チェコ共和国","common":"チェコ"},"kor":{"official":"체코","common":"체코"},"nld":{"official":"Tsjechische Republiek","common":"Tsjechi\xeb"},"per":{"official":"جمهوری چک","common":"جمهوری چک"},"pol":{"official":"Republika Czeska","common":"Czechy"},"por":{"official":"Rep\xfablica Checa","common":"Ch\xe9quia"},"rus":{"official":"Чешская Республика","common":"Чехия"},"slk":{"official":"Česk\xe1 republika","common":"Česko"},"spa":{"official":"Rep\xfablica Checa","common":"Chequia"},"swe":{"official":"Republiken Tjeckien","common":"Tjeckien"},"urd":{"official":"چيک جمہوريہ","common":"چيک"},"zho":{"official":"捷克共和国","common":"捷克"}},"latlng":[49.75,15.5],"landlocked":true,"borders":["AUT","DEU","POL","SVK"],"area":78865,"flag":"\uD83C\uDDE8\uD83C\uDDFF","demonyms":{"eng":{"f":"Czech","m":"Czech"},"fra":{"f":"Tch\xe8que","m":"Tch\xe8que"}}},{"name":{"common":"Germany","official":"Federal Republic of Germany","native":{"deu":{"official":"Bundesrepublik Deutschland","common":"Deutschland"}}},"tld":[".de"],"cca2":"DE","ccn3":"276","cca3":"DEU","cioc":"GER","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+4","suffixes":["9"]},"capital":["Berlin"],"altSpellings":["DE","Federal Republic of Germany","Bundesrepublik Deutschland"],"region":"Europe","subregion":"Western Europe","languages":{"deu":"German"},"translations":{"ces":{"official":"Spolkov\xe1 republika Německo","common":"Německo"},"deu":{"official":"Bundesrepublik Deutschland","common":"Deutschland"},"est":{"official":"Saksamaa Liitvabariik","common":"Saksamaa"},"fin":{"official":"Saksan liittotasavalta","common":"Saksa"},"fra":{"official":"R\xe9publique f\xe9d\xe9rale d\'Allemagne","common":"Allemagne"},"hrv":{"official":"Njemačka Federativna Republika","common":"Njemačka"},"hun":{"official":"N\xe9met Sz\xf6vets\xe9gi K\xf6zt\xe1rsas\xe1g","common":"N\xe9metorsz\xe1g"},"ita":{"official":"Repubblica federale di Germania","common":"Germania"},"jpn":{"official":"ドイツ連邦共和国","common":"ドイツ"},"kor":{"official":"독일 연방 공화국","common":"독일"},"nld":{"official":"Bondsrepubliek Duitsland","common":"Duitsland"},"per":{"official":"جمهوری فدرال آلمان","common":"آلمان"},"pol":{"official":"Republika Federalna Niemiec","common":"Niemcy"},"por":{"official":"Rep\xfablica Federal da Alemanha","common":"Alemanha"},"rus":{"official":"Федеративная Республика Германия","common":"Германия"},"slk":{"official":"Nemeck\xe1 spolkov\xe1 republika","common":"Nemecko"},"spa":{"official":"Rep\xfablica Federal de Alemania","common":"Alemania"},"swe":{"official":"F\xf6rbundsrepubliken Tyskland","common":"Tyskland"},"urd":{"official":"وفاقی جمہوریہ جرمنی","common":"جرمنی"},"zho":{"official":"德意志联邦共和国","common":"德国"}},"latlng":[51,9],"landlocked":false,"borders":["AUT","BEL","CZE","DNK","FRA","LUX","NLD","POL","CHE"],"area":357114,"flag":"\uD83C\uDDE9\uD83C\uDDEA","demonyms":{"eng":{"f":"German","m":"German"},"fra":{"f":"Allemande","m":"Allemand"}}},{"name":{"common":"Djibouti","official":"Republic of Djibouti","native":{"ara":{"official":"جمهورية جيبوتي","common":"جيبوتي‎"},"fra":{"official":"R\xe9publique de Djibouti","common":"Djibouti"}}},"tld":[".dj"],"cca2":"DJ","ccn3":"262","cca3":"DJI","cioc":"DJI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"DJF":{"name":"Djiboutian franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["53"]},"capital":["Djibouti"],"altSpellings":["DJ","Jabuuti","Gabuuti","Republic of Djibouti","R\xe9publique de Djibouti","Gabuutih Ummuuno","Jamhuuriyadda Jabuuti"],"region":"Africa","subregion":"Eastern Africa","languages":{"ara":"Arabic","fra":"French"},"translations":{"ces":{"official":"Džibutsk\xe1 republika","common":"Džibutsko"},"cym":{"official":"Gweriniaeth Jibwti","common":"Jibwti"},"deu":{"official":"Republik Dschibuti","common":"Dschibuti"},"est":{"official":"Djibouti Vabariik","common":"Djibouti"},"fin":{"official":"Dijiboutin tasavalta","common":"Dijibouti"},"fra":{"official":"R\xe9publique de Djibouti","common":"Djibouti"},"hrv":{"official":"Republika Džibuti","common":"Džibuti"},"hun":{"official":"Dzsibuti K\xf6zt\xe1rsas\xe1g","common":"Dzsibuti"},"ita":{"official":"Repubblica di Gibuti","common":"Gibuti"},"jpn":{"official":"ジブチ共和国","common":"ジブチ"},"kor":{"official":"지부티 공화국","common":"지부티"},"nld":{"official":"Republiek Djibouti","common":"Djibouti"},"per":{"official":"جمهوری جیبوتی","common":"جیبوتی"},"pol":{"official":"Republika Dżibuti","common":"Dżibuti"},"por":{"official":"Rep\xfablica do Djibouti","common":"Djibouti"},"rus":{"official":"Республика Джибути","common":"Джибути"},"slk":{"official":"ǅibutsk\xe1 republika","common":"ǅibutsko"},"spa":{"official":"Rep\xfablica de Djibouti","common":"Djibouti"},"swe":{"official":"Republiken Djibouti","common":"Djibouti"},"urd":{"official":"جمہوریہ جبوتی","common":"جبوتی"},"zho":{"official":"吉布提共和国","common":"吉布提"}},"latlng":[11.5,43],"landlocked":false,"borders":["ERI","ETH","SOM"],"area":23200,"flag":"\uD83C\uDDE9\uD83C\uDDEF","demonyms":{"eng":{"f":"Djibouti","m":"Djibouti"},"fra":{"f":"Djiboutienne","m":"Djiboutien"}}},{"name":{"common":"Dominica","official":"Commonwealth of Dominica","native":{"eng":{"official":"Commonwealth of Dominica","common":"Dominica"}}},"tld":[".dm"],"cca2":"DM","ccn3":"212","cca3":"DMA","cioc":"DMA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["767"]},"capital":["Roseau"],"altSpellings":["DM","Dominique","Wai‘tu kubuli","Commonwealth of Dominica"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Dominik\xe1nsk\xe9 společenstv\xed","common":"Dominika"},"cym":{"official":"Cymanwlad Dominica","common":"Dominica"},"deu":{"official":"Commonwealth von Dominica","common":"Dominica"},"est":{"official":"Dominica \xdchendus","common":"Dominica"},"fin":{"official":"Dominican liittovaltio","common":"Dominica"},"fra":{"official":"Commonwealth de la Dominique","common":"Dominique"},"hrv":{"official":"Zajednica Dominika","common":"Dominika"},"hun":{"official":"Dominikai K\xf6z\xf6ss\xe9g","common":"Dominikai K\xf6z\xf6ss\xe9g"},"ita":{"official":"Commonwealth di Dominica","common":"Dominica"},"jpn":{"official":"ドミニカ国","common":"ドミニカ国"},"kor":{"official":"도미니카 공화국","common":"도미니카 공화국"},"nld":{"official":"Gemenebest Dominica","common":"Dominica"},"per":{"official":"قلمرو همسود دومینیکا","common":"دومینیکا"},"pol":{"official":"Wsp\xf3lnota Dominiki","common":"Dominika"},"por":{"official":"Comunidade da Dominica","common":"Dominica"},"rus":{"official":"Содружество Доминики","common":"Доминика"},"slk":{"official":"Dominick\xe9 spoločenstvo","common":"Dominika"},"spa":{"official":"Mancomunidad de Dominica","common":"Dominica"},"swe":{"official":"Samv\xe4ldet Dominica","common":"Dominica"},"urd":{"official":"دولتِ مشترکہ ڈومینیکا","common":"ڈومینیکا"},"zho":{"official":"多米尼加共和国","common":"多米尼加"}},"latlng":[15.41666666,-61.33333333],"landlocked":false,"borders":[],"area":751,"flag":"\uD83C\uDDE9\uD83C\uDDF2","demonyms":{"eng":{"f":"Dominican","m":"Dominican"},"fra":{"f":"Dominiquaise","m":"Dominiquais"}}},{"name":{"common":"Denmark","official":"Kingdom of Denmark","native":{"dan":{"official":"Kongeriget Danmark","common":"Danmark"}}},"tld":[".dk"],"cca2":"DK","ccn3":"208","cca3":"DNK","cioc":"DEN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"DKK":{"name":"Danish krone","symbol":"kr"}},"idd":{"root":"+4","suffixes":["5"]},"capital":["Copenhagen"],"altSpellings":["DK","Danmark","Kingdom of Denmark","Kongeriget Danmark"],"region":"Europe","subregion":"Northern Europe","languages":{"dan":"Danish"},"translations":{"ces":{"official":"D\xe1nsk\xe9 kr\xe1lovstv\xed","common":"D\xe1nsko"},"cym":{"official":"Teyrnas Denmarc","common":"Denmarc"},"deu":{"official":"K\xf6nigreich D\xe4nemark","common":"D\xe4nemark"},"est":{"official":"Taani Kuningriik","common":"Taani"},"fin":{"official":"Tanskan kuningaskunta","common":"Tanska"},"fra":{"official":"Royaume du Danemark","common":"Danemark"},"hrv":{"official":"Kraljevina Danska","common":"Danska"},"hun":{"official":"D\xe1n Kir\xe1lys\xe1g","common":"D\xe1nia"},"ita":{"official":"Regno di Danimarca","common":"Danimarca"},"jpn":{"official":"デンマーク王国","common":"デンマーク"},"kor":{"official":"덴마크 왕국","common":"덴마크"},"nld":{"official":"Koninkrijk Denemarken","common":"Denemarken"},"per":{"official":"پادشاهی دانمارک","common":"دانمارک"},"pol":{"official":"Kr\xf3lestwo Danii","common":"Dania"},"por":{"official":"Reino da Dinamarca","common":"Dinamarca"},"rus":{"official":"Королевство Дания","common":"Дания"},"slk":{"official":"D\xe1nske kr\xe1ľovstvo","common":"D\xe1nsko"},"spa":{"official":"Reino de Dinamarca","common":"Dinamarca"},"swe":{"official":"Konungariket Danmark","common":"Danmark"},"urd":{"official":"مملکتِ ڈنمارک","common":"ڈنمارک"},"zho":{"official":"丹麦王国","common":"丹麦"}},"latlng":[56,10],"landlocked":false,"borders":["DEU"],"area":43094,"flag":"\uD83C\uDDE9\uD83C\uDDF0","demonyms":{"eng":{"f":"Danish","m":"Danish"},"fra":{"f":"Danoise","m":"Danois"}}},{"name":{"common":"Dominican Republic","official":"Dominican Republic","native":{"spa":{"official":"Rep\xfablica Dominicana","common":"Rep\xfablica Dominicana"}}},"tld":[".do"],"cca2":"DO","ccn3":"214","cca3":"DOM","cioc":"DOM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"DOP":{"name":"Dominican peso","symbol":"$"}},"idd":{"root":"+1","suffixes":["809","829","849"]},"capital":["Santo Domingo"],"altSpellings":["DO"],"region":"Americas","subregion":"Caribbean","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Dominik\xe1nsk\xe1 republika","common":"Dominik\xe1nsk\xe1 republika"},"cym":{"official":"Gweriniaeth Dominica","common":"Gweriniaeth Dominica"},"deu":{"official":"Dominikanische Republik","common":"Dominikanische Republik"},"est":{"official":"Dominikaani Vabariik","common":"Dominikaani Vabariik"},"fin":{"official":"Dominikaaninen tasavalta","common":"Dominikaaninen tasavalta"},"fra":{"official":"R\xe9publique Dominicaine","common":"R\xe9publique dominicaine"},"hrv":{"official":"Dominikanska Republika","common":"Dominikanska Republika"},"hun":{"official":"Dominikai K\xf6zt\xe1rsas\xe1g","common":"Dominikai K\xf6zt\xe1rsas\xe1g"},"ita":{"official":"Repubblica Dominicana","common":"Repubblica Dominicana"},"jpn":{"official":"ドミニカ共和国","common":"ドミニカ共和国"},"kor":{"official":"도미니카 공화국","common":"도미니카 공화국"},"nld":{"official":"Dominicaanse Republiek","common":"Dominicaanse Republiek"},"per":{"official":"جمهوری دومینیکن","common":"جمهوری دومینیکن"},"pol":{"official":"Republika Dominikańska","common":"Dominikana"},"por":{"official":"Rep\xfablica Dominicana","common":"Rep\xfablica Dominicana"},"rus":{"official":"Доминиканская Республика","common":"Доминиканская Республика"},"slk":{"official":"Dominik\xe1nska republika","common":"Dominik\xe1nska republika"},"spa":{"official":"Rep\xfablica Dominicana","common":"Rep\xfablica Dominicana"},"swe":{"official":"Dominikanska republiken","common":"Dominikanska republiken"},"urd":{"official":"جمہوریہ ڈومینیکن","common":"ڈومینیکن"},"zho":{"official":"多明尼加共和国","common":"多明尼加"}},"latlng":[19,-70.66666666],"landlocked":false,"borders":["HTI"],"area":48671,"flag":"\uD83C\uDDE9\uD83C\uDDF4","demonyms":{"eng":{"f":"Dominican","m":"Dominican"},"fra":{"f":"Dominicaine","m":"Dominicain"}}},{"name":{"common":"Algeria","official":"People\'s Democratic Republic of Algeria","native":{"ara":{"official":"الجمهورية الديمقراطية الشعبية الجزائرية","common":"الجزائر"}}},"tld":[".dz","الجزائر."],"cca2":"DZ","ccn3":"012","cca3":"DZA","cioc":"ALG","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"DZD":{"name":"Algerian dinar","symbol":"د.ج"}},"idd":{"root":"+2","suffixes":["13"]},"capital":["Algiers"],"altSpellings":["DZ","Dzayer","Alg\xe9rie"],"region":"Africa","subregion":"Northern Africa","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Alž\xedrsk\xe1 demokratick\xe1 a lidov\xe1 republika","common":"Alž\xedrsko"},"cym":{"official":"Gweriniaeth Ddemocrataidd Pobl Algeria","common":"Algeria"},"deu":{"official":"Demokratische Volksrepublik Algerien","common":"Algerien"},"est":{"official":"Alžeeria Demokraatlik Rahvavabariik","common":"Alžeeria"},"fin":{"official":"Algerian demokraattinen kansantasavalta","common":"Algeria"},"fra":{"official":"R\xe9publique d\xe9mocratique et populaire d\'Alg\xe9rie","common":"Alg\xe9rie"},"hrv":{"official":"Narodna Demokratska Republika Alžir","common":"Alžir"},"hun":{"official":"Alg\xe9riai N\xe9pi Demokratikus K\xf6zt\xe1rsas\xe1g","common":"Alg\xe9ria"},"ita":{"official":"Repubblica popolare democratica di Algeria","common":"Algeria"},"jpn":{"official":"アルジェリア人民民主共和国","common":"アルジェリア"},"kor":{"official":"알제리 인민 민주 공화국","common":"알제리"},"nld":{"official":"Democratische Volksrepubliek Algerije","common":"Algerije"},"per":{"official":"جمهوری دموکراتیک خلق الجزایر","common":"الجزایر"},"pol":{"official":"Algierska Republika Ludowo-Demokratyczna","common":"Algieria"},"por":{"official":"Rep\xfablica Argelina Democr\xe1tica e Popular","common":"Arg\xe9lia"},"rus":{"official":"Народно-Демократическая Республика Алжир","common":"Алжир"},"slk":{"official":"Alž\xedrska demokratick\xe1 ľudov\xe1 republika","common":"Alž\xedrsko"},"spa":{"official":"Rep\xfablica Argelina Democr\xe1tica y Popular","common":"Argelia"},"swe":{"official":"Demokratiska folkrepubliken Algeriet","common":"Algeriet"},"urd":{"official":"عوامی جمہوری جمہوریہ الجزائر","common":"الجزائر"},"zho":{"official":"阿尔及利亚人民民主共和国","common":"阿尔及利亚"}},"latlng":[28,3],"landlocked":false,"borders":["TUN","LBY","NER","ESH","MRT","MLI","MAR"],"area":2381741,"flag":"\uD83C\uDDE9\uD83C\uDDFF","demonyms":{"eng":{"f":"Algerian","m":"Algerian"},"fra":{"f":"Alg\xe9rienne","m":"Alg\xe9rien"}}},{"name":{"common":"Ecuador","official":"Republic of Ecuador","native":{"spa":{"official":"Rep\xfablica del Ecuador","common":"Ecuador"}}},"tld":[".ec"],"cca2":"EC","ccn3":"218","cca3":"ECU","cioc":"ECU","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+5","suffixes":["93"]},"capital":["Quito"],"altSpellings":["EC","Republic of Ecuador","Rep\xfablica del Ecuador"],"region":"Americas","subregion":"South America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Ekv\xe1dorsk\xe1 republika","common":"Ekv\xe1dor"},"cym":{"official":"Gweriniaeth Ecwador","common":"Ecwador"},"deu":{"official":"Republik Ecuador","common":"Ecuador"},"est":{"official":"Ecuadori Vabariik","common":"Ecuador"},"fin":{"official":"Ecuadorin tasavalta","common":"Ecuador"},"fra":{"official":"R\xe9publique de l\'\xc9quateur","common":"\xc9quateur"},"hrv":{"official":"Republika Ekvador","common":"Ekvador"},"hun":{"official":"Ecuadori K\xf6zt\xe1rsas\xe1g","common":"Ecuador"},"ita":{"official":"Repubblica dell\'Ecuador","common":"Ecuador"},"jpn":{"official":"エクアドル共和国","common":"エクアドル"},"kor":{"official":"에콰도르 공화국","common":"에콰도르"},"nld":{"official":"Republiek Ecuador","common":"Ecuador"},"per":{"official":"جمهوری اکوادور","common":"اکوادور"},"pol":{"official":"Ekwador","common":"Ekwador"},"por":{"official":"Rep\xfablica do Equador","common":"Equador"},"rus":{"official":"Республика Эквадор","common":"Эквадор"},"slk":{"official":"Ekv\xe1dorsk\xe1 republika","common":"Ekv\xe1dor"},"spa":{"official":"Rep\xfablica del Ecuador","common":"Ecuador"},"swe":{"official":"Republiken Ecuador","common":"Ecuador"},"urd":{"official":"جمہوریہ ایکوڈور","common":"ایکواڈور"},"zho":{"official":"厄瓜多尔共和国","common":"厄瓜多尔"}},"latlng":[-2,-77.5],"landlocked":false,"borders":["COL","PER"],"area":276841,"flag":"\uD83C\uDDEA\uD83C\uDDE8","demonyms":{"eng":{"f":"Ecuadorean","m":"Ecuadorean"},"fra":{"f":"\xc9quatorienne","m":"\xc9quatorien"}}},{"name":{"common":"Egypt","official":"Arab Republic of Egypt","native":{"ara":{"official":"جمهورية مصر العربية","common":"مصر"}}},"tld":[".eg",".مصر"],"cca2":"EG","ccn3":"818","cca3":"EGY","cioc":"EGY","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EGP":{"name":"Egyptian pound","symbol":"\xa3"}},"idd":{"root":"+2","suffixes":["0"]},"capital":["Cairo"],"altSpellings":["EG","Arab Republic of Egypt"],"region":"Africa","subregion":"Northern Africa","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Egyptsk\xe1 arabsk\xe1 republika","common":"Egypt"},"cym":{"official":"Gweriniaeth Arabaidd yr Aifft","common":"Yr Aifft"},"deu":{"official":"Arabische Republik \xc4gypten","common":"\xc4gypten"},"est":{"official":"Egiptuse Araabia Vabariik","common":"Egiptus"},"fin":{"official":"Egyptin arabitasavalta","common":"Egypti"},"fra":{"official":"R\xe9publique arabe d\'\xc9gypte","common":"\xc9gypte"},"hrv":{"official":"Arapska Republika Egipat","common":"Egipat"},"hun":{"official":"Egyiptomi Arab K\xf6zt\xe1rsas\xe1g","common":"Egyiptom"},"ita":{"official":"Repubblica araba d\'Egitto","common":"Egitto"},"jpn":{"official":"エジプト\xb7アラブ共和国","common":"エジプト"},"kor":{"official":"이집트 아랍 공화국","common":"이집트"},"nld":{"official":"Arabische Republiek Egypte","common":"Egypte"},"per":{"official":"جمهوری عربی مصر","common":"مصر"},"pol":{"official":"Arabska Republika Egiptu","common":"Egipt"},"por":{"official":"Rep\xfablica \xc1rabe do Egipto","common":"Egito"},"rus":{"official":"Арабская Республика Египет","common":"Египет"},"slk":{"official":"Egyptsk\xe1 arabsk\xe1 republika","common":"Egypt"},"spa":{"official":"Rep\xfablica \xc1rabe de Egipto","common":"Egipto"},"swe":{"official":"Arabrepubliken Egypten","common":"Egypten"},"urd":{"official":"مصری عرب جمہوریہ","common":"مصر"},"zho":{"official":"阿拉伯埃及共和国","common":"埃及"}},"latlng":[27,30],"landlocked":false,"borders":["ISR","LBY","PSE","SDN"],"area":1002450,"flag":"\uD83C\uDDEA\uD83C\uDDEC","demonyms":{"eng":{"f":"Egyptian","m":"Egyptian"},"fra":{"f":"\xc9gyptienne","m":"\xc9gyptien"}}},{"name":{"common":"Eritrea","official":"State of Eritrea","native":{"ara":{"official":"دولة إرتريا","common":"إرتريا‎"},"eng":{"official":"State of Eritrea","common":"Eritrea"},"tir":{"official":"ሃገረ ኤርትራ","common":"ኤርትራ"}}},"tld":[".er"],"cca2":"ER","ccn3":"232","cca3":"ERI","cioc":"ERI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ERN":{"name":"Eritrean nakfa","symbol":"Nfk"}},"idd":{"root":"+2","suffixes":["91"]},"capital":["Asmara"],"altSpellings":["ER","State of Eritrea","ሃገረ ኤርትራ","Dawlat Iritriy\xe1","ʾErtrā","Iritriyā"],"region":"Africa","subregion":"Eastern Africa","languages":{"ara":"Arabic","eng":"English","tir":"Tigrinya"},"translations":{"ces":{"official":"St\xe1t Eritrea","common":"Eritrea"},"cym":{"official":"Gwladwriaeth Eritrea","common":"Eritrea"},"deu":{"official":"Staat Eritrea","common":"Eritrea"},"est":{"official":"Eritrea Riik","common":"Eritrea"},"fin":{"official":"Eritrean valtio","common":"Eritrea"},"fra":{"official":"\xc9tat d\'\xc9rythr\xe9e","common":"\xc9rythr\xe9e"},"hrv":{"official":"Država Eritreji","common":"Eritreja"},"hun":{"official":"Eritrea","common":"Eritrea"},"ita":{"official":"Stato di Eritrea","common":"Eritrea"},"jpn":{"official":"エリトリア国","common":"エリトリア"},"kor":{"official":"에리트레아국","common":"에리트레아"},"nld":{"official":"Staat Eritrea","common":"Eritrea"},"per":{"official":"جمهوری اریتره","common":"اریتره"},"pol":{"official":"Państwo Erytrea","common":"Erytrea"},"por":{"official":"Estado da Eritreia","common":"Eritreia"},"rus":{"official":"Государство Эритрея","common":"Эритрея"},"slk":{"official":"Eritrejsk\xfd št\xe1t","common":"Eritrea"},"spa":{"official":"Estado de Eritrea","common":"Eritrea"},"swe":{"official":"Staten Eritrea","common":"Eritrea"},"urd":{"official":"ریاستِ ارتریا","common":"ارتریا"},"zho":{"official":"厄立特里亚","common":"厄立特里亚"}},"latlng":[15,39],"landlocked":false,"borders":["DJI","ETH","SDN"],"area":117600,"flag":"\uD83C\uDDEA\uD83C\uDDF7","demonyms":{"eng":{"f":"Eritrean","m":"Eritrean"},"fra":{"f":"\xc9rythr\xe9enne","m":"\xc9rythr\xe9en"}}},{"name":{"common":"Western Sahara","official":"Sahrawi Arab Democratic Republic","native":{"ber":{"official":"Sahrawi Arab Democratic Republic","common":"Western Sahara"},"mey":{"official":"الجمهورية العربية الصحراوية الديمقراطية","common":"الصحراء الغربية"},"spa":{"official":"Rep\xfablica \xc1rabe Saharaui Democr\xe1tica","common":"Sahara Occidental"}}},"tld":[".eh"],"cca2":"EH","ccn3":"732","cca3":"ESH","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"DZD":{"name":"Algerian dinar","symbol":"دج"},"MAD":{"name":"Moroccan dirham","symbol":"DH"},"MRU":{"name":"Mauritanian ouguiya","symbol":"UM"}},"idd":{"root":"+2","suffixes":["125288","125289"]},"capital":["El Aai\xfan"],"altSpellings":["EH","Taneẓroft Tutrimt"],"region":"Africa","subregion":"Northern Africa","languages":{"ber":"Berber","mey":"Hassaniya","spa":"Spanish"},"translations":{"ces":{"official":"Z\xe1padn\xed Sahara","common":"Z\xe1padn\xed Sahara"},"deu":{"official":"Demokratische Arabische Republik Sahara","common":"Westsahara"},"est":{"official":"L\xe4\xe4ne-Sahara","common":"L\xe4\xe4ne-Sahara"},"fin":{"official":"L\xe4nsi-Sahara","common":"L\xe4nsi-Sahara"},"fra":{"official":"R\xe9publique arabe sahraouie d\xe9mocratique","common":"Sahara Occidental"},"hrv":{"official":"Sahrawi Arab Demokratska Republika","common":"Zapadna Sahara"},"hun":{"official":"Nyugat-Szahara","common":"Nyugat-Szahara"},"ita":{"official":"Repubblica Araba Saharawi Democratica","common":"Sahara Occidentale"},"jpn":{"official":"サハラアラブ民主共和国","common":"西サハラ"},"kor":{"official":"사하라 아랍 민주 공화국","common":"서사하라"},"nld":{"official":"Sahrawi Arabische Democratische Republiek","common":"Westelijke Sahara"},"per":{"official":"صحرای غربی","common":"صحرای غربی"},"pol":{"official":"Saharyjska Arabska Republika Demokratyczna","common":"Sahara Zachodnia"},"por":{"official":"Rep\xfablica \xc1rabe Saharaui Democr\xe1tica","common":"Saara Ocidental"},"rus":{"official":"Sahrawi Арабская Демократическая Республика","common":"Западная Сахара"},"slk":{"official":"Z\xe1padn\xe1 Sahara","common":"Z\xe1padn\xe1 Sahara"},"spa":{"official":"Rep\xfablica \xc1rabe Saharaui Democr\xe1tica","common":"Sahara Occidental"},"swe":{"official":"V\xe4stsahara","common":"V\xe4stsahara"},"urd":{"official":"صحراوی عرب عوامی جمہوریہ","common":"مغربی صحارا"},"zho":{"official":"阿拉伯撒哈拉民主共和国","common":"西撒哈拉"}},"latlng":[24.5,-13],"landlocked":false,"borders":["DZA","MRT","MAR"],"area":266000,"flag":"\uD83C\uDDEA\uD83C\uDDED","demonyms":{"eng":{"f":"Sahrawi","m":"Sahrawi"},"fra":{"f":"","m":""}}},{"name":{"common":"Spain","official":"Kingdom of Spain","native":{"spa":{"official":"Reino de Espa\xf1a","common":"Espa\xf1a"}}},"tld":[".es"],"cca2":"ES","ccn3":"724","cca3":"ESP","cioc":"ESP","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["4"]},"capital":["Madrid"],"altSpellings":["ES","Kingdom of Spain","Reino de Espa\xf1a"],"region":"Europe","subregion":"Southern Europe","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Španělsk\xe9 kr\xe1lovstv\xed","common":"Španělsko"},"deu":{"official":"K\xf6nigreich Spanien","common":"Spanien"},"est":{"official":"Hispaania Kuningriik","common":"Hispaania"},"fin":{"official":"Espanjan kuningaskunta","common":"Espanja"},"fra":{"official":"Royaume d\'Espagne","common":"Espagne"},"hrv":{"official":"Kraljevina Španjolska","common":"Španjolska"},"hun":{"official":"Spanyol Kir\xe1lys\xe1g","common":"Spanyolorsz\xe1g"},"ita":{"official":"Regno di Spagna","common":"Spagna"},"jpn":{"official":"スペイン王国","common":"スペイン"},"kor":{"official":"에스파냐 왕국","common":"스페인"},"nld":{"official":"Koninkrijk Spanje","common":"Spanje"},"per":{"official":"پادشاهی اسپانیا","common":"اسپانیا"},"pol":{"official":"Kr\xf3lestwo Hiszpanii ","common":"Hiszpania"},"por":{"official":"Reino de Espanha","common":"Espanha"},"rus":{"official":"Королевство Испания","common":"Испания"},"slk":{"official":"Španielske kr\xe1ľovstvo","common":"Španielsko"},"spa":{"official":"Reino de Espa\xf1a","common":"Espa\xf1a"},"swe":{"official":"Konungariket Spanien","common":"Spanien"},"urd":{"official":"مملکتِ ہسپانیہ","common":"ہسپانیہ"},"zho":{"official":"西班牙王国","common":"西班牙"}},"latlng":[40,-4],"landlocked":false,"borders":["AND","FRA","GIB","PRT","MAR"],"area":505992,"flag":"\uD83C\uDDEA\uD83C\uDDF8","demonyms":{"eng":{"f":"Spanish","m":"Spanish"},"fra":{"f":"Espagnole","m":"Espagnol"}}},{"name":{"common":"Estonia","official":"Republic of Estonia","native":{"est":{"official":"Eesti Vabariik","common":"Eesti"}}},"tld":[".ee"],"cca2":"EE","ccn3":"233","cca3":"EST","cioc":"EST","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["72"]},"capital":["Tallinn"],"altSpellings":["EE","Eesti","Republic of Estonia","Eesti Vabariik"],"region":"Europe","subregion":"Northern Europe","languages":{"est":"Estonian"},"translations":{"ces":{"official":"Estonsk\xe1 republika","common":"Estonsko"},"cym":{"official":"Gweriniaeth Estonia","common":"Estonia"},"deu":{"official":"Republik Estland","common":"Estland"},"est":{"official":"Eesti Vabariik","common":"Eesti"},"fin":{"official":"Viron tasavalta","common":"Viro"},"fra":{"official":"R\xe9publique d\'Estonie","common":"Estonie"},"hrv":{"official":"Republika Estonija","common":"Estonija"},"hun":{"official":"\xc9szt K\xf6zt\xe1rsas\xe1g","common":"\xc9sztorsz\xe1g"},"ita":{"official":"Repubblica di Estonia","common":"Estonia"},"jpn":{"official":"エストニア共和国","common":"エストニア"},"kor":{"official":"에스토니아 공화국","common":"에스토니아"},"nld":{"official":"Republiek Estland","common":"Estland"},"per":{"official":"جمهوری استونی","common":"اِستونی"},"pol":{"official":"Republika Estońska","common":"Estonia"},"por":{"official":"Rep\xfablica da Est\xf3nia","common":"Est\xf3nia"},"rus":{"official":"Эстонская Республика","common":"Эстония"},"slk":{"official":"Est\xf3nska republika","common":"Est\xf3nsko"},"spa":{"official":"Rep\xfablica de Estonia","common":"Estonia"},"swe":{"official":"Republiken Estland","common":"Estland"},"urd":{"official":"جمہوریہ اسٹونیا","common":"اسٹونیا"},"zho":{"official":"爱沙尼亚共和国","common":"爱沙尼亚"}},"latlng":[59,26],"landlocked":false,"borders":["LVA","RUS"],"area":45227,"flag":"\uD83C\uDDEA\uD83C\uDDEA","demonyms":{"eng":{"f":"Estonian","m":"Estonian"},"fra":{"f":"Estonienne","m":"Estonien"}}},{"name":{"common":"Ethiopia","official":"Federal Democratic Republic of Ethiopia","native":{"amh":{"official":"የኢትዮጵያ ፌዴራላዊ ዲሞክራሲያዊ ሪፐብሊክ","common":"ኢትዮጵያ"}}},"tld":[".et"],"cca2":"ET","ccn3":"231","cca3":"ETH","cioc":"ETH","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ETB":{"name":"Ethiopian birr","symbol":"Br"}},"idd":{"root":"+2","suffixes":["51"]},"capital":["Addis Ababa"],"altSpellings":["ET","ʾĪtyōṗṗyā","Federal Democratic Republic of Ethiopia","የኢትዮጵያ ፌዴራላዊ ዲሞክራሲያዊ ሪፐብሊክ"],"region":"Africa","subregion":"Eastern Africa","languages":{"amh":"Amharic"},"translations":{"ces":{"official":"Etiopsk\xe1 federativn\xed demokratick\xe1 republika","common":"Etiopie"},"cym":{"official":"Gweriniaeth Ddemocrataidd Ffederal Ethiopia","common":"Ethiopia"},"deu":{"official":"Demokratische Bundesrepublik \xc4thiopien","common":"\xc4thiopien"},"est":{"official":"Etioopia Demokraatlik Liitvabariik","common":"Etioopia"},"fin":{"official":"Etiopian demokraattinen liittotasavalta","common":"Etiopia"},"fra":{"official":"R\xe9publique f\xe9d\xe9rale d\xe9mocratique d\'\xc9thiopie","common":"\xc9thiopie"},"hrv":{"official":"Savezna Demokratska Republika Etiopija","common":"Etiopija"},"hun":{"official":"Eti\xf3p Sz\xf6vets\xe9gi Demokratikus K\xf6zt\xe1rsas\xe1g","common":"Eti\xf3pia"},"ita":{"official":"Repubblica federale democratica di Etiopia","common":"Etiopia"},"jpn":{"official":"エチオピア連邦民主共和国","common":"エチオピア"},"kor":{"official":"에티오피아 연방 민주 공화국","common":"에티오피아"},"nld":{"official":"Federale Democratische Republiek Ethiopi\xeb","common":"Ethiopi\xeb"},"per":{"official":"جمهوری فدرال دموکراتیک اتیوپی","common":"اِتیوپی"},"pol":{"official":"Federalna Demokratyczna Republika Etiopii","common":"Etiopia"},"por":{"official":"Rep\xfablica Federal Democr\xe1tica da Eti\xf3pia","common":"Eti\xf3pia"},"rus":{"official":"Федеративная Демократическая Республика Эфиопия","common":"Эфиопия"},"slk":{"official":"Eti\xf3pska federat\xedvna demokratick\xe1 republika","common":"Eti\xf3pia"},"spa":{"official":"Rep\xfablica Democr\xe1tica Federal de Etiop\xeda","common":"Etiop\xeda"},"swe":{"official":"Demokratiska f\xf6rbundsrepubliken Etiopien","common":"Etiopien"},"urd":{"official":"وفاقی جمہوری جمہوریہ ایتھوپیا","common":"ایتھوپیا"},"zho":{"official":"埃塞俄比亚联邦民主共和国","common":"埃塞俄比亚"}},"latlng":[8,38],"landlocked":true,"borders":["DJI","ERI","KEN","SOM","SSD","SDN"],"area":1104300,"flag":"\uD83C\uDDEA\uD83C\uDDF9","demonyms":{"eng":{"f":"Ethiopian","m":"Ethiopian"},"fra":{"f":"\xc9thiopienne","m":"\xc9thiopien"}}},{"name":{"common":"Finland","official":"Republic of Finland","native":{"fin":{"official":"Suomen tasavalta","common":"Suomi"},"swe":{"official":"Republiken Finland","common":"Finland"}}},"tld":[".fi"],"cca2":"FI","ccn3":"246","cca3":"FIN","cioc":"FIN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["58"]},"capital":["Helsinki"],"altSpellings":["FI","Suomi","Republic of Finland","Suomen tasavalta","Republiken Finland"],"region":"Europe","subregion":"Northern Europe","languages":{"fin":"Finnish","swe":"Swedish"},"translations":{"ces":{"official":"Finsk\xe1 republika","common":"Finsko"},"deu":{"official":"Republik Finnland","common":"Finnland"},"est":{"official":"Soome Vabariik","common":"Soome"},"fin":{"official":"Suomen tasavalta","common":"Suomi"},"fra":{"official":"R\xe9publique de Finlande","common":"Finlande"},"hrv":{"official":"Republika Finska","common":"Finska"},"hun":{"official":"Finn K\xf6zt\xe1rsas\xe1g","common":"Finnorsz\xe1g"},"ita":{"official":"Repubblica di Finlandia","common":"Finlandia"},"jpn":{"official":"フィンランド共和国","common":"フィンランド"},"kor":{"official":"핀란드 공화국","common":"핀란드"},"nld":{"official":"Republiek Finland","common":"Finland"},"per":{"official":"جمهوری فنلاند","common":"فنلاند"},"pol":{"official":"Republika Finlandii","common":"Finlandia"},"por":{"official":"Rep\xfablica da Finl\xe2ndia","common":"Finl\xe2ndia"},"rus":{"official":"Финляндская Республика","common":"Финляндия"},"slk":{"official":"F\xednska republika","common":"F\xednsko"},"spa":{"official":"Rep\xfablica de Finlandia","common":"Finlandia"},"swe":{"official":"Republiken Finland","common":"Finland"},"urd":{"official":"جمہوریہ فن لینڈ","common":"فن لینڈ"},"zho":{"official":"芬兰共和国","common":"芬兰"}},"latlng":[64,26],"landlocked":false,"borders":["NOR","SWE","RUS"],"area":338424,"flag":"\uD83C\uDDEB\uD83C\uDDEE","demonyms":{"eng":{"f":"Finnish","m":"Finnish"},"fra":{"f":"Finlandaise","m":"Finlandais"}}},{"name":{"common":"Fiji","official":"Republic of Fiji","native":{"eng":{"official":"Republic of Fiji","common":"Fiji"},"fij":{"official":"Matanitu Tugalala o Viti","common":"Viti"},"hif":{"official":"रिपब्लिक ऑफ फीजी","common":"फिजी"}}},"tld":[".fj"],"cca2":"FJ","ccn3":"242","cca3":"FJI","cioc":"FIJ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"FJD":{"name":"Fijian dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["79"]},"capital":["Suva"],"altSpellings":["FJ","Viti","Republic of Fiji","Matanitu ko Viti","Fijī Gaṇarājya"],"region":"Oceania","subregion":"Melanesia","languages":{"eng":"English","fij":"Fijian","hif":"Fiji Hindi"},"translations":{"ces":{"official":"Republika Fidžijsk\xfdch ostrovů","common":"Fidži"},"deu":{"official":"Republik Fidschi","common":"Fidschi"},"est":{"official":"Fidži Vabariik","common":"Fidži"},"fin":{"official":"Fidžin tasavalta","common":"Fidži"},"fra":{"official":"R\xe9publique des Fidji","common":"Fidji"},"hrv":{"official":"Republika Fidži","common":"Fiđi"},"hun":{"official":"Fidzsi-szigeteki K\xf6zt\xe1rsas\xe1g","common":"Fidzsi-szigetek"},"ita":{"official":"Repubblica di Figi","common":"Figi"},"jpn":{"official":"フィジー共和国","common":"フィジー"},"kor":{"official":"피지 공화국","common":"피지"},"nld":{"official":"Republiek Fiji","common":"Fiji"},"per":{"official":"جمهوری جزایر فیجی","common":"فیجی"},"pol":{"official":"Republika Fidżi","common":"Fidżi"},"por":{"official":"Rep\xfablica de Fiji","common":"Fiji"},"rus":{"official":"Республика Фиджи","common":"Фиджи"},"slk":{"official":"Fiǆijsk\xe1 republika","common":"Fiǆi"},"spa":{"official":"Rep\xfablica de Fiji","common":"Fiyi"},"swe":{"official":"Republiken Fiji","common":"Fiji"},"urd":{"official":"جمہوریہ فجی","common":"فجی"},"zho":{"official":"斐济共和国","common":"斐济"}},"latlng":[-18,175],"landlocked":false,"borders":[],"area":18272,"flag":"\uD83C\uDDEB\uD83C\uDDEF","demonyms":{"eng":{"f":"Fijian","m":"Fijian"},"fra":{"f":"Fidjienne","m":"Fidjien"}}},{"name":{"common":"Falkland Islands","official":"Falkland Islands","native":{"eng":{"official":"Falkland Islands","common":"Falkland Islands"}}},"tld":[".fk"],"cca2":"FK","ccn3":"238","cca3":"FLK","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"FKP":{"name":"Falkland Islands pound","symbol":"\xa3"}},"idd":{"root":"+5","suffixes":["00"]},"capital":["Stanley"],"altSpellings":["FK","Islas Malvinas","Falkland Islands (Malvinas)"],"region":"Americas","subregion":"South America","languages":{"eng":"English"},"translations":{"ces":{"official":"Falklandsk\xe9 ostrovy","common":"Falklandy"},"deu":{"official":"Falklandinseln","common":"Falklandinseln"},"est":{"official":"Falklandi saared","common":"Falklandi saared"},"fin":{"official":"Falkandinsaaret","common":"Falkandinsaaret"},"fra":{"official":"\xceles Malouines","common":"\xceles Malouines"},"hrv":{"official":"Falklandski otoci","common":"Falklandski Otoci"},"hun":{"official":"Falkland-szigetek","common":"Falkland-szigetek"},"ita":{"official":"Isole Falkland","common":"Isole Falkland o Isole Malvine"},"jpn":{"official":"フォークランド","common":"フォークランド（マルビナス）諸島"},"kor":{"official":"포클랜드 제도","common":"포클랜드 제도"},"nld":{"official":"Falkland eilanden","common":"Falklandeilanden"},"per":{"official":"جزایر فالکلند","common":"جزایر فالکلند"},"pol":{"official":"Falklandy","common":"Falklandy"},"por":{"official":"Ilhas Malvinas","common":"Ilhas Malvinas"},"rus":{"official":"Фолклендские острова","common":"Фолклендские острова"},"slk":{"official":"Falklandsk\xe9 ostrovy","common":"Falklandy"},"spa":{"official":"islas Malvinas","common":"Islas Malvinas"},"swe":{"official":"Falklands\xf6arna","common":"Falklands\xf6arna"},"urd":{"official":"جزائر فاکلینڈ","common":"جزائر فاکلینڈ"},"zho":{"official":"福克兰群岛","common":"福克兰群岛"}},"latlng":[-51.75,-59],"landlocked":false,"borders":[],"area":12173,"flag":"\uD83C\uDDEB\uD83C\uDDF0","demonyms":{"eng":{"f":"Falkland Islander","m":"Falkland Islander"},"fra":{"f":"Malouinne","m":"Malouin"}}},{"name":{"common":"France","official":"French Republic","native":{"fra":{"official":"R\xe9publique fran\xe7aise","common":"France"}}},"tld":[".fr"],"cca2":"FR","ccn3":"250","cca3":"FRA","cioc":"FRA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["3"]},"capital":["Paris"],"altSpellings":["FR","French Republic","R\xe9publique fran\xe7aise"],"region":"Europe","subregion":"Western Europe","languages":{"fra":"French"},"translations":{"ces":{"official":"Francouzsk\xe1 republika","common":"Francie"},"deu":{"official":"Franz\xf6sische Republik","common":"Frankreich"},"est":{"official":"Prantsuse Vabariik","common":"Prantsusmaa"},"fin":{"official":"Ranskan tasavalta","common":"Ranska"},"fra":{"official":"R\xe9publique fran\xe7aise","common":"France"},"hrv":{"official":"Francuska Republika","common":"Francuska"},"hun":{"official":"Francia K\xf6zt\xe1rsas\xe1g","common":"Franciaorsz\xe1g"},"ita":{"official":"Repubblica francese","common":"Francia"},"jpn":{"official":"フランス共和国","common":"フランス"},"kor":{"official":"프랑스 공화국","common":"프랑스"},"nld":{"official":"Franse Republiek","common":"Frankrijk"},"per":{"official":"جمهوری فرانسه","common":"فرانسه"},"pol":{"official":"Republika Francuska","common":"Francja"},"por":{"official":"Rep\xfablica Francesa","common":"Fran\xe7a"},"rus":{"official":"Французская Республика","common":"Франция"},"slk":{"official":"Franc\xfazska republika","common":"Franc\xfazsko"},"spa":{"official":"Rep\xfablica franc\xe9s","common":"Francia"},"swe":{"official":"Republiken Frankrike","common":"Frankrike"},"urd":{"official":"جمہوریہ فرانس","common":"فرانس"},"zho":{"official":"法兰西共和国","common":"法国"}},"latlng":[46,2],"landlocked":false,"borders":["AND","BEL","DEU","ITA","LUX","MCO","ESP","CHE"],"area":551695,"flag":"\uD83C\uDDEB\uD83C\uDDF7","demonyms":{"eng":{"f":"French","m":"French"},"fra":{"f":"Fran\xe7aise","m":"Fran\xe7ais"}}},{"name":{"common":"Faroe Islands","official":"Faroe Islands","native":{"dan":{"official":"F\xe6r\xf8erne","common":"F\xe6r\xf8erne"},"fao":{"official":"F\xf8royar","common":"F\xf8royar"}}},"tld":[".fo"],"cca2":"FO","ccn3":"234","cca3":"FRO","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"DKK":{"name":"Danish krone","symbol":"kr"},"FOK":{"name":"Faroese kr\xf3na","symbol":"kr"}},"idd":{"root":"+2","suffixes":["98"]},"capital":["T\xf3rshavn"],"altSpellings":["FO","F\xf8royar","F\xe6r\xf8erne"],"region":"Europe","subregion":"Northern Europe","languages":{"dan":"Danish","fao":"Faroese"},"translations":{"ces":{"official":"Faersk\xe9 ostrovy","common":"Faersk\xe9 ostrovy"},"deu":{"official":"F\xe4r\xf6er","common":"F\xe4r\xf6er-Inseln"},"est":{"official":"F\xe4\xe4ri saared","common":"F\xe4\xe4ri saared"},"fin":{"official":"F\xe4rsaaret","common":"F\xe4rsaaret"},"fra":{"official":"\xceles F\xe9ro\xe9","common":"\xceles F\xe9ro\xe9"},"hrv":{"official":"Farski Otoci","common":"Farski Otoci"},"hun":{"official":"Fer\xf6er","common":"Fer\xf6er"},"ita":{"official":"Isole Faroe","common":"Isole Far Oer"},"jpn":{"official":"フェロー諸島","common":"フェロー諸島"},"kor":{"official":"페로 제도","common":"페로 제도"},"nld":{"official":"Faer\xf6er","common":"Faer\xf6er"},"per":{"official":"جزایر فاروئه","common":"جزایر فاروئه"},"pol":{"official":"Wyspy Owcze","common":"Wyspy Owcze"},"por":{"official":"Ilhas Faroe","common":"Ilhas Faro\xe9"},"rus":{"official":"Фарерские острова","common":"Фарерские острова"},"slk":{"official":"Faersk\xe9 ostrovy","common":"Faersk\xe9 ostrovy"},"spa":{"official":"Islas Feroe","common":"Islas Faroe"},"swe":{"official":"F\xe4r\xf6arna","common":"F\xe4r\xf6arna"},"urd":{"official":"جزائر فارو","common":"جزائر فارو"},"zho":{"official":"法罗群岛","common":"法罗群岛"}},"latlng":[62,-7],"landlocked":false,"borders":[],"area":1393,"flag":"\uD83C\uDDEB\uD83C\uDDF4","demonyms":{"eng":{"f":"Faroese","m":"Faroese"},"fra":{"f":"F\xe9ro\xefenne","m":"F\xe9ro\xefen"}}},{"name":{"common":"Micronesia","official":"Federated States of Micronesia","native":{"eng":{"official":"Federated States of Micronesia","common":"Micronesia"}}},"tld":[".fm"],"cca2":"FM","ccn3":"583","cca3":"FSM","cioc":"FSM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{},"idd":{"root":"+6","suffixes":["91"]},"capital":["Palikir"],"altSpellings":["FM","Federated States of Micronesia","Micronesia, Federated States of"],"region":"Oceania","subregion":"Micronesia","languages":{"eng":"English"},"translations":{"ces":{"official":"Federativn\xed st\xe1ty Mikron\xe9sie","common":"Mikron\xe9sie"},"deu":{"official":"F\xf6derierte Staaten von Mikronesien","common":"Mikronesien"},"est":{"official":"Mikroneesia Liiduriigid","common":"Mikroneesia"},"fin":{"official":"Mikronesian liittovaltio","common":"Mikronesia"},"fra":{"official":"\xc9tats f\xe9d\xe9r\xe9s de Micron\xe9sie","common":"Micron\xe9sie"},"hrv":{"official":"Savezne Države Mikronezije","common":"Mikronezija"},"hun":{"official":"Mikron\xe9ziai Sz\xf6vets\xe9gi \xc1llamok","common":"Mikron\xe9ziai Sz\xf6vets\xe9gi \xc1llamok"},"ita":{"official":"Stati federati di Micronesia","common":"Micronesia"},"jpn":{"official":"ミクロネシア連邦","common":"ミクロネシア連邦"},"kor":{"official":"미크로네시아 연방","common":"미크로네시아"},"nld":{"official":"Federale Staten van Micronesia","common":"Micronesi\xeb"},"per":{"official":"ایالات فدرال میکرونزی","common":"میکرونزی"},"pol":{"official":"Sfederowane Stany Mikronezji","common":"Mikronezja"},"por":{"official":"Estados Federados da Micron\xe9sia","common":"Micron\xe9sia"},"rus":{"official":"Федеративные Штаты Микронезии","common":"Федеративные Штаты Микронезии"},"slk":{"official":"Mikron\xe9zske federat\xedvne št\xe1ty","common":"Mikron\xe9zia"},"spa":{"official":"Estados Federados de Micronesia","common":"Micronesia"},"swe":{"official":"Mikronesiska federationen","common":"Mikronesiska federationen"},"urd":{"official":"ریاستہائے وفاقیہ مائکرونیشیا","common":"مائکرونیشیا"},"zho":{"official":"密克罗尼西亚联邦","common":"密克罗尼西亚"}},"latlng":[6.91666666,158.25],"landlocked":false,"borders":[],"area":702,"flag":"\uD83C\uDDEB\uD83C\uDDF2","demonyms":{"eng":{"f":"Micronesian","m":"Micronesian"},"fra":{"f":"Micron\xe9sienne","m":"Micron\xe9sien"}}},{"name":{"common":"Gabon","official":"Gabonese Republic","native":{"fra":{"official":"R\xe9publique gabonaise","common":"Gabon"}}},"tld":[".ga"],"cca2":"GA","ccn3":"266","cca3":"GAB","cioc":"GAB","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XAF":{"name":"Central African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["41"]},"capital":["Libreville"],"altSpellings":["GA","Gabonese Republic","R\xe9publique Gabonaise"],"region":"Africa","subregion":"Middle Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Gabonsk\xe1 republika","common":"Gabon"},"deu":{"official":"Gabunische Republik","common":"Gabun"},"est":{"official":"Gaboni Vabariik","common":"Gabon"},"fin":{"official":"Gabonin tasavalta","common":"Gabon"},"fra":{"official":"R\xe9publique gabonaise","common":"Gabon"},"hrv":{"official":"Gabon Republika","common":"Gabon"},"hun":{"official":"Gaboni K\xf6zt\xe1rsas\xe1g","common":"Gabon"},"ita":{"official":"Repubblica gabonese","common":"Gabon"},"jpn":{"official":"ガボン共和国","common":"ガボン"},"kor":{"official":"가봉 공화국","common":"가봉"},"nld":{"official":"Republiek Gabon","common":"Gabon"},"per":{"official":"جمهوری گابُن","common":"گابن"},"pol":{"official":"Republika Gabońska","common":"Gabon"},"por":{"official":"Rep\xfablica do Gab\xe3o","common":"Gab\xe3o"},"rus":{"official":"Габона Республика","common":"Габон"},"slk":{"official":"Gabonsk\xe1 republika","common":"Gabon"},"spa":{"official":"Rep\xfablica de Gab\xf3n","common":"Gab\xf3n"},"swe":{"official":"Republiken Gabon","common":"Gabon"},"urd":{"official":"جمہوریہ گیبون","common":"گیبون"},"zho":{"official":"加蓬共和国","common":"加蓬"}},"latlng":[-1,11.75],"landlocked":false,"borders":["CMR","COG","GNQ"],"area":267668,"flag":"\uD83C\uDDEC\uD83C\uDDE6","demonyms":{"eng":{"f":"Gabonese","m":"Gabonese"},"fra":{"f":"Gabonaise","m":"Gabonais"}}},{"name":{"common":"United Kingdom","official":"United Kingdom of Great Britain and Northern Ireland","native":{"eng":{"official":"United Kingdom of Great Britain and Northern Ireland","common":"United Kingdom"}}},"tld":[".uk"],"cca2":"GB","ccn3":"826","cca3":"GBR","cioc":"GBR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"GBP":{"name":"British pound","symbol":"\xa3"}},"idd":{"root":"+4","suffixes":["4"]},"capital":["London"],"altSpellings":["GB","UK","Great Britain"],"region":"Europe","subregion":"Northern Europe","languages":{"eng":"English"},"translations":{"ces":{"official":"Spojen\xe9 kr\xe1lovstv\xed Velk\xe9 Brit\xe1nie a Severn\xedho Irska","common":"Spojen\xe9 kr\xe1lovstv\xed"},"deu":{"official":"Vereinigtes K\xf6nigreich Gro\xdfbritannien und Nordirland","common":"Vereinigtes K\xf6nigreich"},"est":{"official":"Suurbritannia ja P\xf5hja-Iiri \xdchendkuningriik","common":"Suurbritannia"},"fin":{"official":"Ison-Britannian ja Pohjois-Irlannin yhdistynyt kuningaskunta","common":"Yhdistynyt kuningaskunta"},"fra":{"official":"Royaume-Uni de Grande-Bretagne et d\'Irlande du Nord","common":"Royaume-Uni"},"hrv":{"official":"Ujedinjeno Kraljevstvo Velike Britanije i Sjeverne Irske","common":"Ujedinjeno Kraljevstvo"},"hun":{"official":"Nagy-Britannia \xe9s \xc9szak-\xcdrorsz\xe1g Egyes\xfclt Kir\xe1lys\xe1ga","common":"Egyes\xfclt Kir\xe1lys\xe1g"},"ita":{"official":"Regno Unito di Gran Bretagna e Irlanda del Nord","common":"Regno Unito"},"jpn":{"official":"グレート\xb7ブリテンおよび北アイルランド連合王国","common":"イギリス"},"kor":{"official":"그레이트브리튼 북아일랜드 연합 왕국","common":"영국"},"nld":{"official":"Verenigd Koninkrijk van Groot-Brittanni\xeb en Noord-Ierland","common":"Verenigd Koninkrijk"},"per":{"official":"پادشاهی متحد بریتانیای کبیر و ایرلند شمالی","common":"انگلیس"},"pol":{"official":"Zjednoczone Kr\xf3lestwo Wielkiej Brytanii i Irlandii P\xf3łnocnej","common":"Zjednoczone Kr\xf3lestwo"},"por":{"official":"Reino Unido da Gr\xe3-Bretanha e Irlanda do Norte","common":"Reino Unido"},"rus":{"official":"Соединенное Королевство Великобритании и Северной Ирландии","common":"Великобритания"},"slk":{"official":"Spojen\xe9 kr\xe1ľovstvo Veľkej Brit\xe1nie a Severn\xe9ho\xccrska","common":"Veľk\xe1 Brit\xe1nia (Spojen\xe9 kr\xe1ľovstvo)"},"spa":{"official":"Reino Unido de Gran Breta\xf1a e Irlanda del Norte","common":"Reino Unido"},"swe":{"official":"F\xf6renade konungariket Storbritannien och Nordirland","common":"Storbritannien"},"urd":{"official":"مملکتِ متحدہ برطانیہ عظمی و شمالی آئرلینڈ","common":"مملکتِ متحدہ"},"zho":{"official":"大不列颠及北爱尔兰联合王国","common":"英国"}},"latlng":[54,-2],"landlocked":false,"borders":["IRL"],"area":242900,"flag":"\uD83C\uDDEC\uD83C\uDDE7","demonyms":{"eng":{"f":"British","m":"British"},"fra":{"f":"Britannique","m":"Britannique"}}},{"name":{"common":"Georgia","official":"Georgia","native":{"kat":{"official":"საქართველო","common":"საქართველო"}}},"tld":[".ge"],"cca2":"GE","ccn3":"268","cca3":"GEO","cioc":"GEO","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"GEL":{"name":"lari","symbol":"₾"}},"idd":{"root":"+9","suffixes":["95"]},"capital":["Tbilisi"],"altSpellings":["GE","Sakartvelo"],"region":"Asia","subregion":"Western Asia","languages":{"kat":"Georgian"},"translations":{"ces":{"official":"Gruzie","common":"Gruzie"},"deu":{"official":"Georgien","common":"Georgien"},"est":{"official":"Gruusia","common":"Gruusia"},"fin":{"official":"Georgia","common":"Georgia"},"fra":{"official":"R\xe9publique de G\xe9orgie","common":"G\xe9orgie"},"hrv":{"official":"Gruzija","common":"Gruzija"},"hun":{"official":"Gr\xfazia","common":"Gr\xfazia"},"ita":{"official":"Georgia","common":"Georgia"},"jpn":{"official":"グルジア","common":"グルジア"},"kor":{"official":"조지아","common":"조지아"},"nld":{"official":"Georgia","common":"Georgi\xeb"},"per":{"official":"گرجستان","common":"گرجستان"},"pol":{"official":"Gruzja","common":"Gruzja"},"por":{"official":"Georgia","common":"Ge\xf3rgia"},"rus":{"official":"Грузия","common":"Грузия"},"slk":{"official":"Gruz\xednsko","common":"Gruz\xednsko"},"spa":{"official":"Georgia","common":"Georgia"},"swe":{"official":"Georgien","common":"Georgien"},"urd":{"official":"جارجیا","common":"جارجیا"},"zho":{"official":"格鲁吉亚","common":"格鲁吉亚"}},"latlng":[42,43.5],"landlocked":false,"borders":["ARM","AZE","RUS","TUR"],"area":69700,"flag":"\uD83C\uDDEC\uD83C\uDDEA","demonyms":{"eng":{"f":"Georgian","m":"Georgian"},"fra":{"f":"G\xe9orgienne","m":"G\xe9orgien"}}},{"name":{"common":"Guernsey","official":"Bailiwick of Guernsey","native":{"eng":{"official":"Bailiwick of Guernsey","common":"Guernsey"},"fra":{"official":"Bailliage de Guernesey","common":"Guernesey"},"nfr":{"official":"Dg\xe8rn\xe9siais","common":"Dg\xe8rn\xe9siais"}}},"tld":[".gg"],"cca2":"GG","ccn3":"831","cca3":"GGY","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"GBP":{"name":"British pound","symbol":"\xa3"},"GGP":{"name":"Guernsey pound","symbol":"\xa3"}},"idd":{"root":"+4","suffixes":["4"]},"capital":["St. Peter Port"],"altSpellings":["GG","Bailiwick of Guernsey","Bailliage de Guernesey"],"region":"Europe","subregion":"Northern Europe","languages":{"eng":"English","fra":"French","nfr":"Guern\xe9siais"},"translations":{"ces":{"official":"Rycht\xe1řstv\xed Guernsey","common":"Guernsey"},"deu":{"official":"Vogtei Guernsey","common":"Guernsey"},"est":{"official":"Guernsey foogtkond","common":"Guernsey"},"fin":{"official":"Guernsey","common":"Guernsey"},"fra":{"official":"Bailliage de Guernesey","common":"Guernesey"},"hrv":{"official":"Struka Guernsey","common":"Guernsey"},"hun":{"official":"Guernsey","common":"Guernsey"},"ita":{"official":"Baliato di Guernsey","common":"Guernsey"},"jpn":{"official":"ガーンジーの得意分野","common":"ガーンジー"},"kor":{"official":"건지 섬","common":"건지 섬"},"nld":{"official":"Baljuwschap Guernsey","common":"Guernsey"},"per":{"official":"گرنزی","common":"گرنزی"},"pol":{"official":"Baliwat Guernsey","common":"Guernsey"},"por":{"official":"Bailiado de Guernsey","common":"Guernsey"},"rus":{"official":"Коронное владение Гернси","common":"Гернси"},"slk":{"official":"Guernsey","common":"Guernsey"},"spa":{"official":"Bail\xeda de Guernsey","common":"Guernsey"},"swe":{"official":"Guernsey","common":"Guernsey"},"urd":{"official":"گرنزی رودبار","common":"گرنزی"},"zho":{"official":"根西岛","common":"根西岛"}},"latlng":[49.46666666,-2.58333333],"landlocked":false,"borders":[],"area":78,"flag":"\uD83C\uDDEC\uD83C\uDDEC","demonyms":{"eng":{"f":"Channel Islander","m":"Channel Islander"},"fra":{"f":"Guernesiaise","m":"Guernesiais"}}},{"name":{"common":"Ghana","official":"Republic of Ghana","native":{"eng":{"official":"Republic of Ghana","common":"Ghana"}}},"tld":[".gh"],"cca2":"GH","ccn3":"288","cca3":"GHA","cioc":"GHA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"GHS":{"name":"Ghanaian cedi","symbol":"₵"}},"idd":{"root":"+2","suffixes":["33"]},"capital":["Accra"],"altSpellings":["GH"],"region":"Africa","subregion":"Western Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Ghansk\xe1 republika","common":"Ghana"},"deu":{"official":"Republik Ghana","common":"Ghana"},"est":{"official":"Ghana Vabariik","common":"Ghana"},"fin":{"official":"Ghanan tasavalta","common":"Ghana"},"fra":{"official":"R\xe9publique du Ghana","common":"Ghana"},"hrv":{"official":"Republika Gana","common":"Gana"},"hun":{"official":"Gh\xe1nai K\xf6zt\xe1rsas\xe1g","common":"Gh\xe1na"},"ita":{"official":"Repubblica del Ghana","common":"Ghana"},"jpn":{"official":"ガーナ共和国","common":"ガーナ"},"kor":{"official":"가나 공화국","common":"가나"},"nld":{"official":"Republiek Ghana","common":"Ghana"},"per":{"official":"جمهوری غنا","common":"غنا"},"pol":{"official":"Republika Ghany","common":"Ghana"},"por":{"official":"Rep\xfablica do Gana","common":"Gana"},"rus":{"official":"Республика Гана","common":"Гана"},"slk":{"official":"Ghansk\xe1 republika","common":"Ghana"},"spa":{"official":"Rep\xfablica de Ghana","common":"Ghana"},"swe":{"official":"Republiken Ghana","common":"Ghana"},"urd":{"official":"جمہوریہ گھانا","common":"گھانا"},"zho":{"official":"加纳共和国","common":"加纳"}},"latlng":[8,-2],"landlocked":false,"borders":["BFA","CIV","TGO"],"area":238533,"flag":"\uD83C\uDDEC\uD83C\uDDED","demonyms":{"eng":{"f":"Ghanaian","m":"Ghanaian"},"fra":{"f":"Ghan\xe9enne","m":"Ghan\xe9en"}}},{"name":{"common":"Gibraltar","official":"Gibraltar","native":{"eng":{"official":"Gibraltar","common":"Gibraltar"}}},"tld":[".gi"],"cca2":"GI","ccn3":"292","cca3":"GIB","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"GIP":{"name":"Gibraltar pound","symbol":"\xa3"}},"idd":{"root":"+3","suffixes":["50"]},"capital":["Gibraltar"],"altSpellings":["GI"],"region":"Europe","subregion":"Southern Europe","languages":{"eng":"English"},"translations":{"ces":{"official":"Gibraltar","common":"Gibraltar"},"deu":{"official":"Gibraltar","common":"Gibraltar"},"est":{"official":"Gibraltar","common":"Gibraltar"},"fin":{"official":"Gibraltar","common":"Gibraltar"},"fra":{"official":"Gibraltar","common":"Gibraltar"},"hrv":{"official":"Gibraltar","common":"Gibraltar"},"hun":{"official":"Gibralt\xe1r","common":"Gibralt\xe1r"},"ita":{"official":"Gibilterra","common":"Gibilterra"},"jpn":{"official":"ジブラルタル","common":"ジブラルタル"},"kor":{"official":"지브롤터","common":"지브롤터"},"nld":{"official":"Gibraltar","common":"Gibraltar"},"per":{"official":"جبل طارق","common":"جبل طارق"},"pol":{"official":"Gibraltar","common":"Gibraltar"},"por":{"official":"Gibraltar","common":"Gibraltar"},"rus":{"official":"Гибралтар","common":"Гибралтар"},"slk":{"official":"Gibralt\xe1r","common":"Gibralt\xe1r"},"spa":{"official":"Gibraltar","common":"Gibraltar"},"swe":{"official":"Gibraltar","common":"Gibraltar"},"urd":{"official":"جبل الطارق","common":"جبل الطارق"},"zho":{"official":"直布罗陀","common":"直布罗陀"}},"latlng":[36.13333333,-5.35],"landlocked":false,"borders":["ESP"],"area":6,"flag":"\uD83C\uDDEC\uD83C\uDDEE","demonyms":{"eng":{"f":"Gibraltar","m":"Gibraltar"},"fra":{"f":"Gibraltarienne","m":"Gibraltarien"}}},{"name":{"common":"Guinea","official":"Republic of Guinea","native":{"fra":{"official":"R\xe9publique de Guin\xe9e","common":"Guin\xe9e"}}},"tld":[".gn"],"cca2":"GN","ccn3":"324","cca3":"GIN","cioc":"GUI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"GNF":{"name":"Guinean franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["24"]},"capital":["Conakry"],"altSpellings":["GN","Republic of Guinea","R\xe9publique de Guin\xe9e"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Guinejsk\xe1 republika","common":"Guinea"},"deu":{"official":"Republik Guinea","common":"Guinea"},"est":{"official":"Guinea Vabariik","common":"Guinea"},"fin":{"official":"Guinean tasavalta","common":"Guinea"},"fra":{"official":"R\xe9publique de Guin\xe9e","common":"Guin\xe9e"},"hrv":{"official":"Republika Gvineja","common":"Gvineja"},"hun":{"official":"Guineai K\xf6zt\xe1rsas\xe1g","common":"Guinea"},"ita":{"official":"Repubblica di Guinea","common":"Guinea"},"jpn":{"official":"ギニア共和国","common":"ギニア"},"kor":{"official":"기니 공화국","common":"기니"},"nld":{"official":"Republiek Guinee","common":"Guinee"},"per":{"official":"مملکت مستقل پاپوآ گینه نو","common":"پاپوآ گینه نو"},"pol":{"official":"Republika Gwinei","common":"Gwinea"},"por":{"official":"Rep\xfablica da Guin\xe9","common":"Guin\xe9"},"rus":{"official":"Республика Гвинея","common":"Гвинея"},"slk":{"official":"Guinejsk\xe1 republika","common":"Guinea"},"spa":{"official":"Rep\xfablica de Guinea","common":"Guinea"},"swe":{"official":"Republiken Guinea","common":"Guinea"},"urd":{"official":"جمہوریہ گنی","common":"گنی"},"zho":{"official":"几内亚共和国","common":"几内亚"}},"latlng":[11,-10],"landlocked":false,"borders":["CIV","GNB","LBR","MLI","SEN","SLE"],"area":245857,"flag":"\uD83C\uDDEC\uD83C\uDDF3","demonyms":{"eng":{"f":"Guinean","m":"Guinean"},"fra":{"f":"Guin\xe9enne","m":"Guin\xe9en"}}},{"name":{"common":"Guadeloupe","official":"Guadeloupe","native":{"fra":{"official":"Guadeloupe","common":"Guadeloupe"}}},"tld":[".gp"],"cca2":"GP","ccn3":"312","cca3":"GLP","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+5","suffixes":["90"]},"capital":["Basse-Terre"],"altSpellings":["GP","Gwadloup"],"region":"Americas","subregion":"Caribbean","languages":{"fra":"French"},"translations":{"ces":{"official":"Guadeloupe","common":"Guadeloupe"},"deu":{"official":"Guadeloupe","common":"Guadeloupe"},"est":{"official":"Guadeloupe’i ja s\xf5ltkondade departemang","common":"Guadeloupe"},"fin":{"official":"Guadeloupen departmentti","common":"Guadeloupe"},"fra":{"official":"Guadeloupe","common":"Guadeloupe"},"hrv":{"official":"Gvadalupa","common":"Gvadalupa"},"hun":{"official":"Guadeloupe","common":"Guadeloupe"},"ita":{"official":"Guadeloupe","common":"Guadeloupa"},"jpn":{"official":"グアドループ島","common":"グアドループ"},"kor":{"official":"과들루프","common":"과들루프"},"nld":{"official":"Guadeloupe","common":"Guadeloupe"},"per":{"official":"گوادلوپ","common":"گوادلوپ"},"pol":{"official":"Gwadelupa","common":"Gwadelupa"},"por":{"official":"Guadalupe","common":"Guadalupe"},"rus":{"official":"Гваделупа","common":"Гваделупа"},"slk":{"official":"Guadeloupe","common":"Guadeloupe"},"spa":{"official":"Guadalupe","common":"Guadalupe"},"swe":{"official":"Guadeloupe","common":"Guadeloupe"},"urd":{"official":"گواڈیلوپ","common":"گواڈیلوپ"},"zho":{"official":"瓜德罗普岛","common":"瓜德罗普岛"}},"latlng":[16.25,-61.583333],"landlocked":false,"borders":[],"area":1628,"flag":"\uD83C\uDDEC\uD83C\uDDF5","demonyms":{"eng":{"f":"Guadeloupian","m":"Guadeloupian"},"fra":{"f":"Guadeloup\xe9enne","m":"Guadeloup\xe9en"}}},{"name":{"common":"Gambia","official":"Republic of the Gambia","native":{"eng":{"official":"Republic of the Gambia","common":"Gambia"}}},"tld":[".gm"],"cca2":"GM","ccn3":"270","cca3":"GMB","cioc":"GAM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"GMD":{"name":"dalasi","symbol":"D"}},"idd":{"root":"+2","suffixes":["20"]},"capital":["Banjul"],"altSpellings":["GM","Republic of the Gambia"],"region":"Africa","subregion":"Western Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Gambijsk\xe1 republika","common":"Gambie"},"deu":{"official":"Republik Gambia","common":"Gambia"},"est":{"official":"Gambia Vabariik","common":"Gambia"},"fin":{"official":"Gambian tasavalta","common":"Gambia"},"fra":{"official":"R\xe9publique de Gambie","common":"Gambie"},"hrv":{"official":"Republika Gambija","common":"Gambija"},"hun":{"official":"Gambiai K\xf6zt\xe1rsas\xe1g","common":"Gambia"},"ita":{"official":"Repubblica del Gambia","common":"Gambia"},"jpn":{"official":"ガンビア共和国","common":"ガンビア"},"kor":{"official":"감비아 공화국","common":"감비아"},"nld":{"official":"Republiek Gambia","common":"Gambia"},"per":{"official":"جمهوری گامبیا","common":"گامبیا"},"pol":{"official":"Republika Gambii","common":"Gambia"},"por":{"official":"Rep\xfablica da G\xe2mbia","common":"G\xe2mbia"},"rus":{"official":"Республика Гамбия","common":"Гамбия"},"slk":{"official":"Gambijsk\xe1 republika","common":"Gambia"},"spa":{"official":"Rep\xfablica de Gambia","common":"Gambia"},"swe":{"official":"Republiken Gambia","common":"Gambia"},"urd":{"official":"جمہوریہ گیمبیا","common":"گیمبیا"},"zho":{"official":"冈比亚共和国","common":"冈比亚"}},"latlng":[13.46666666,-16.56666666],"landlocked":false,"borders":["SEN"],"area":10689,"flag":"\uD83C\uDDEC\uD83C\uDDF2","demonyms":{"eng":{"f":"Gambian","m":"Gambian"},"fra":{"f":"Gambienne","m":"Gambien"}}},{"name":{"common":"Guinea-Bissau","official":"Republic of Guinea-Bissau","native":{"por":{"official":"Rep\xfablica da Guin\xe9-Bissau","common":"Guin\xe9-Bissau"},"pov":{"official":"Rep\xfablica da Guin\xe9-Bissau","common":"Guin\xe9-Bissau"}}},"tld":[".gw"],"cca2":"GW","ccn3":"624","cca3":"GNB","cioc":"GBS","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["45"]},"capital":["Bissau"],"altSpellings":["GW","Republic of Guinea-Bissau","Rep\xfablica da Guin\xe9-Bissau"],"region":"Africa","subregion":"Western Africa","languages":{"por":"Portuguese","pov":"Upper Guinea Creole"},"translations":{"ces":{"official":"Republika Guinea-Bissau","common":"Guinea-Bissau"},"deu":{"official":"Republik Guinea-Bissau","common":"Guinea-Bissau"},"est":{"official":"Guinea-Bissau Vabariik","common":"Guinea-Bissau"},"fin":{"official":"Guinea-Bissaun tasavalta","common":"Guinea-Bissau"},"fra":{"official":"R\xe9publique de Guin\xe9e-Bissau","common":"Guin\xe9e-Bissau"},"hrv":{"official":"Republika Gvineja Bisau","common":"Gvineja Bisau"},"hun":{"official":"Bissau-Guineai K\xf6zt\xe1rsas\xe1g","common":"Bissau-Guinea"},"ita":{"official":"Repubblica di Guinea-Bissau","common":"Guinea-Bissau"},"jpn":{"official":"ギニアビサウ共和国","common":"ギニアビサウ"},"kor":{"official":"기니비사우 공화국","common":"기니비사우"},"nld":{"official":"Republiek Guinee-Bissau","common":"Guinee-Bissau"},"per":{"official":"جمهوری گینه بیسائو","common":"گینه بیسائو"},"pol":{"official":"Republika Gwinei Bissau","common":"Gwinea Bissau"},"por":{"official":"Rep\xfablica da Guin\xe9-Bissau","common":"Guin\xe9-Bissau"},"rus":{"official":"Республика Гвинея -Бисау","common":"Гвинея-Бисау"},"slk":{"official":"Guinejsko-bissausk\xe1 republika","common":"Guinea-Bissau"},"spa":{"official":"Rep\xfablica de Guinea-Bissau","common":"Guinea-Bis\xe1u"},"swe":{"official":"Republiken Guinea-Bissau","common":"Guinea-Bissau"},"urd":{"official":"جمہوریہ گنی بساؤ","common":"گنی بساؤ"},"zho":{"official":"几内亚比绍共和国","common":"几内亚比绍"}},"latlng":[12,-15],"landlocked":false,"borders":["GIN","SEN"],"area":36125,"flag":"\uD83C\uDDEC\uD83C\uDDFC","demonyms":{"eng":{"f":"Guinea-Bissauan","m":"Guinea-Bissauan"},"fra":{"f":"Bissau-Guin\xe9enne","m":"Bissau-Guin\xe9en"}}},{"name":{"common":"Equatorial Guinea","official":"Republic of Equatorial Guinea","native":{"fra":{"official":"R\xe9publique de la Guin\xe9e \xc9quatoriale","common":"Guin\xe9e \xe9quatoriale"},"por":{"official":"Rep\xfablica da Guin\xe9 Equatorial","common":"Guin\xe9 Equatorial"},"spa":{"official":"Rep\xfablica de Guinea Ecuatorial","common":"Guinea Ecuatorial"}}},"tld":[".gq"],"cca2":"GQ","ccn3":"226","cca3":"GNQ","cioc":"GEQ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XAF":{"name":"Central African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["40"]},"capital":["Malabo"],"altSpellings":["GQ","Republic of Equatorial Guinea","Rep\xfablica de Guinea Ecuatorial","R\xe9publique de Guin\xe9e \xe9quatoriale","Rep\xfablica da Guin\xe9 Equatorial"],"region":"Africa","subregion":"Middle Africa","languages":{"fra":"French","por":"Portuguese","spa":"Spanish"},"translations":{"ces":{"official":"Republika Rovn\xedkov\xe1 Guinea","common":"Rovn\xedkov\xe1 Guinea"},"cym":{"official":"Gweriniaeth Gini Gyhydeddol","common":"Gini Gyhydeddol"},"deu":{"official":"Republik \xc4quatorialguinea","common":"\xc4quatorialguinea"},"est":{"official":"Ekvatoriaal-Guinea Vabariik","common":"Ekvatoriaal-Guinea"},"fin":{"official":"P\xe4iv\xe4ntasaajan Guinean tasavalta","common":"P\xe4iv\xe4ntasaajan Guinea"},"fra":{"official":"R\xe9publique de Guin\xe9e \xe9quatoriale","common":"Guin\xe9e \xe9quatoriale"},"hrv":{"official":"Republika Ekvatorska Gvineja","common":"Ekvatorijalna Gvineja"},"hun":{"official":"Egyenl\xedtői-Guinea-i K\xf6zt\xe1rsas\xe1g","common":"Egyenl\xedtői-Guinea"},"ita":{"official":"Repubblica della Guinea Equatoriale","common":"Guinea Equatoriale"},"jpn":{"official":"赤道ギニア共和国","common":"赤道ギニア"},"kor":{"official":"적도 기니 공화국","common":"적도 기니"},"nld":{"official":"Republiek Equatoriaal-Guinea","common":"Equatoriaal-Guinea"},"per":{"official":"جمهوری گینه استوایی","common":"گینه استوایی"},"pol":{"official":"Republika Gwinei R\xf3wnikowej","common":"Gwinea R\xf3wnikowa"},"por":{"official":"Rep\xfablica da Guin\xe9 Equatorial","common":"Guin\xe9 Equatorial"},"rus":{"official":"Республика Экваториальная Гвинея","common":"Экваториальная Гвинея"},"slk":{"official":"Republika rovn\xedkovej Guiney","common":"Rovn\xedkov\xe1 Guinea"},"spa":{"official":"Rep\xfablica de Guinea Ecuatorial","common":"Guinea Ecuatorial"},"swe":{"official":"Republiken Ekvatorialguinea","common":"Ekvatorialguinea"},"urd":{"official":"جمہوریہ استوائی گنی","common":"استوائی گنی"},"zho":{"official":"赤道几内亚共和国","common":"赤道几内亚"}},"latlng":[2,10],"landlocked":false,"borders":["CMR","GAB"],"area":28051,"flag":"\uD83C\uDDEC\uD83C\uDDF6","demonyms":{"eng":{"f":"Equatorial Guinean","m":"Equatorial Guinean"},"fra":{"f":"\xc9quato-guin\xe9enne","m":"\xc9quato-guin\xe9en"}}},{"name":{"common":"Greece","official":"Hellenic Republic","native":{"ell":{"official":"Ελληνική Δημοκρατία","common":"Ελλάδα"}}},"tld":[".gr"],"cca2":"GR","ccn3":"300","cca3":"GRC","cioc":"GRE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["0"]},"capital":["Athens"],"altSpellings":["GR","Ell\xe1da","Hellenic Republic","Ελληνική Δημοκρατία"],"region":"Europe","subregion":"Southern Europe","languages":{"ell":"Greek"},"translations":{"ces":{"official":"Řeck\xe1 republika","common":"Řecko"},"deu":{"official":"Hellenische Republik","common":"Griechenland"},"est":{"official":"Kreeka Vabariik","common":"Kreeka"},"fin":{"official":"Helleenien tasavalta","common":"Kreikka"},"fra":{"official":"R\xe9publique hell\xe9nique","common":"Gr\xe8ce"},"hrv":{"official":"Helenska Republika","common":"Grčka"},"hun":{"official":"G\xf6r\xf6g K\xf6zt\xe1rsas\xe1g","common":"G\xf6r\xf6gorsz\xe1g"},"ita":{"official":"Repubblica ellenica","common":"Grecia"},"jpn":{"official":"ギリシャ共和国","common":"ギリシャ"},"kor":{"official":"그리스 공화국","common":"그리스"},"nld":{"official":"Helleense Republiek","common":"Griekenland"},"per":{"official":"جمهوری یونان","common":"یونان"},"pol":{"official":"Republika Grecka","common":"Grecja"},"por":{"official":"Rep\xfablica Hel\xe9nica","common":"Gr\xe9cia"},"rus":{"official":"Греческая Республика","common":"Греция"},"slk":{"official":"Gr\xe9cka republika","common":"Gre\xe9cko"},"spa":{"official":"Rep\xfablica Hel\xe9nica","common":"Grecia"},"swe":{"official":"Republiken Grekland","common":"Grekland"},"urd":{"official":"جمہوریہ ہیلینیہ","common":"یونان"},"zho":{"official":"希腊共和国","common":"希腊"}},"latlng":[39,22],"landlocked":false,"borders":["ALB","BGR","TUR","MKD"],"area":131990,"flag":"\uD83C\uDDEC\uD83C\uDDF7","demonyms":{"eng":{"f":"Greek","m":"Greek"},"fra":{"f":"Grecque","m":"Grec"}}},{"name":{"common":"Grenada","official":"Grenada","native":{"eng":{"official":"Grenada","common":"Grenada"}}},"tld":[".gd"],"cca2":"GD","ccn3":"308","cca3":"GRD","cioc":"GRN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["473"]},"capital":["St. George\'s"],"altSpellings":["GD"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Grenada","common":"Grenada"},"deu":{"official":"Grenada","common":"Grenada"},"est":{"official":"Grenada","common":"Grenada"},"fin":{"official":"Grenada","common":"Grenada"},"fra":{"official":"Grenade","common":"Grenade"},"hrv":{"official":"Grenada","common":"Grenada"},"hun":{"official":"Grenada","common":"Grenada"},"ita":{"official":"Grenada","common":"Grenada"},"jpn":{"official":"グレナダ","common":"グレナダ"},"kor":{"official":"그레나다","common":"그레나다"},"nld":{"official":"Grenada","common":"Grenada"},"per":{"official":"گرنادا","common":"گرنادا"},"pol":{"official":"Grenada","common":"Grenada"},"por":{"official":"Grenada","common":"Granada"},"rus":{"official":"Гренада","common":"Гренада"},"slk":{"official":"Grenada","common":"Grenada"},"spa":{"official":"Granada","common":"Grenada"},"swe":{"official":"Grenada","common":"Grenada"},"urd":{"official":"گریناڈا","common":"گریناڈا"},"zho":{"official":"格林纳达","common":"格林纳达"}},"latlng":[12.11666666,-61.66666666],"landlocked":false,"borders":[],"area":344,"flag":"\uD83C\uDDEC\uD83C\uDDE9","demonyms":{"eng":{"f":"Grenadian","m":"Grenadian"},"fra":{"f":"Grenadienne","m":"Grenadien"}}},{"name":{"common":"Greenland","official":"Greenland","native":{"kal":{"official":"Kalaallit Nunaat","common":"Kalaallit Nunaat"}}},"tld":[".gl"],"cca2":"GL","ccn3":"304","cca3":"GRL","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"DKK":{"name":"krone","symbol":"kr."}},"idd":{"root":"+2","suffixes":["99"]},"capital":["Nuuk"],"altSpellings":["GL","Gr\xf8nland"],"region":"Americas","subregion":"North America","languages":{"kal":"Greenlandic"},"translations":{"ces":{"official":"Gr\xf3nsko","common":"Gr\xf3nsko"},"deu":{"official":"Gr\xf6nland","common":"Gr\xf6nland"},"est":{"official":"Gr\xf6\xf6nimaa","common":"Gr\xf6\xf6nimaa"},"fin":{"official":"Gro\xf6nlanti","common":"Gro\xf6nlanti"},"fra":{"official":"Groenland","common":"Groenland"},"hrv":{"official":"Grenland","common":"Grenland"},"hun":{"official":"Gr\xf6nland","common":"Gr\xf6nland"},"ita":{"official":"Groenlandia","common":"Groenlandia"},"jpn":{"official":"グリーンランド","common":"グリーンランド"},"kor":{"official":"그린란드","common":"그린란드"},"nld":{"official":"Groenland","common":"Groenland"},"per":{"official":"گروئنلند","common":"گرینلند"},"pol":{"official":"Grenlandia","common":"Grenlandia"},"por":{"official":"Groenl\xe2ndia","common":"Gronel\xe2ndia"},"rus":{"official":"Гренландия","common":"Гренландия"},"slk":{"official":"Gr\xf3nsko","common":"Gr\xf3nsko"},"spa":{"official":"Groenlandia","common":"Groenlandia"},"swe":{"official":"Gr\xf6nland","common":"Gr\xf6nland"},"urd":{"official":"گرین لینڈ","common":"گرین لینڈ"},"zho":{"official":"格陵兰","common":"格陵兰"}},"latlng":[72,-40],"landlocked":false,"borders":[],"area":2166086,"flag":"\uD83C\uDDEC\uD83C\uDDF1","demonyms":{"eng":{"f":"Greenlandic","m":"Greenlandic"},"fra":{"f":"Groenlandaise","m":"Groenlandais"}}},{"name":{"common":"Guatemala","official":"Republic of Guatemala","native":{"spa":{"official":"Rep\xfablica de Guatemala","common":"Guatemala"}}},"tld":[".gt"],"cca2":"GT","ccn3":"320","cca3":"GTM","cioc":"GUA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"GTQ":{"name":"Guatemalan quetzal","symbol":"Q"}},"idd":{"root":"+5","suffixes":["02"]},"capital":["Guatemala City"],"altSpellings":["GT"],"region":"Americas","subregion":"Central America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Republika Guatemala","common":"Guatemala"},"deu":{"official":"Republik Guatemala","common":"Guatemala"},"est":{"official":"Guatemala Vabariik","common":"Guatemala"},"fin":{"official":"Guatemalan tasavalta","common":"Guatemala"},"fra":{"official":"R\xe9publique du Guatemala","common":"Guatemala"},"hrv":{"official":"Republika Gvatemala","common":"Gvatemala"},"hun":{"official":"Guatemalai K\xf6zt\xe1rsas\xe1g","common":"Guatemala"},"ita":{"official":"Repubblica del Guatemala","common":"Guatemala"},"jpn":{"official":"グアテマラ共和国","common":"グアテマラ"},"kor":{"official":"과테말라 공화국","common":"과테말라"},"nld":{"official":"Republiek Guatemala","common":"Guatemala"},"per":{"official":"جمهوری گواتِمالا","common":"گواتِمالا"},"pol":{"official":"Republika Gwatemali","common":"Gwatemala"},"por":{"official":"Rep\xfablica da Guatemala","common":"Guatemala"},"rus":{"official":"Республика Гватемала","common":"Гватемала"},"slk":{"official":"Guatemalsk\xe1 republika","common":"Guatemala"},"spa":{"official":"Rep\xfablica de Guatemala","common":"Guatemala"},"swe":{"official":"Republiken Guatemala","common":"Guatemala"},"urd":{"official":"جمہوریہ گواتیمالا","common":"گواتیمالا"},"zho":{"official":"危地马拉共和国","common":"危地马拉"}},"latlng":[15.5,-90.25],"landlocked":false,"borders":["BLZ","SLV","HND","MEX"],"area":108889,"flag":"\uD83C\uDDEC\uD83C\uDDF9","demonyms":{"eng":{"f":"Guatemalan","m":"Guatemalan"},"fra":{"f":"Guat\xe9malt\xe8que","m":"Guat\xe9malt\xe8que"}}},{"name":{"common":"French Guiana","official":"Guiana","native":{"fra":{"official":"Guyane","common":"Guyane fran\xe7aise"}}},"tld":[".gf"],"cca2":"GF","ccn3":"254","cca3":"GUF","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+5","suffixes":["94"]},"capital":["Cayenne"],"altSpellings":["GF","Guiana","Guyane"],"region":"Americas","subregion":"South America","languages":{"fra":"French"},"translations":{"ces":{"official":"Francouzsk\xe1 Guyana","common":"Francouzsk\xe1 Guyana"},"deu":{"official":"Franz\xf6sisch-Guayana","common":"Franz\xf6sisch-Guayana"},"est":{"official":"Guajaana departemang","common":"Prantsuse Guajaana"},"fin":{"official":"Ranskan Guayana","common":"Ranskan Guayana"},"fra":{"official":"Guyane","common":"Guyane"},"hrv":{"official":"Gijana","common":"Francuska Gvajana"},"hun":{"official":"Francia Guyana","common":"Francia Guyana"},"ita":{"official":"Guiana","common":"Guyana francese"},"jpn":{"official":"ギアナ","common":"フランス領ギアナ"},"kor":{"official":"프랑스령 기아나","common":"프랑스령 기아나"},"nld":{"official":"Guyana","common":"Frans-Guyana"},"per":{"official":"گویان فرانسه","common":"گویان فرانسه"},"pol":{"official":"Gujana Francuska","common":"Gujana Francuska"},"por":{"official":"Guiana","common":"Guiana Francesa"},"rus":{"official":"Гвиана","common":"Французская Гвиана"},"slk":{"official":"Franc\xfazska Guyana","common":"Guyana"},"spa":{"official":"Guayana","common":"Guayana Francesa"},"swe":{"official":"Franska Guyana","common":"Franska Guyana"},"urd":{"official":"گیانا","common":"فرانسیسی گیانا"},"zho":{"official":"法属圭亚那","common":"法属圭亚那"}},"latlng":[4,-53],"landlocked":false,"borders":["BRA","SUR"],"area":83534,"flag":"\uD83C\uDDEC\uD83C\uDDEB","demonyms":{"eng":{"f":"Guianan","m":"Guianan"},"fra":{"f":"Guyanaise","m":"Guyanais"}}},{"name":{"common":"Guam","official":"Guam","native":{"cha":{"official":"Gu\xe5h\xe5n","common":"Gu\xe5h\xe5n"},"eng":{"official":"Guam","common":"Guam"},"spa":{"official":"Guam","common":"Guam"}}},"tld":[".gu"],"cca2":"GU","ccn3":"316","cca3":"GUM","cioc":"GUM","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["671"]},"capital":["Hag\xe5t\xf1a"],"altSpellings":["GU","Gu\xe5h\xe5n"],"region":"Oceania","subregion":"Micronesia","languages":{"cha":"Chamorro","eng":"English","spa":"Spanish"},"translations":{"ces":{"official":"Guam","common":"Guam"},"deu":{"official":"Guam","common":"Guam"},"est":{"official":"Guami ala","common":"Guam"},"fin":{"official":"Guam","common":"Guam"},"fra":{"official":"Guam","common":"Guam"},"hrv":{"official":"Guam","common":"Guam"},"hun":{"official":"Guam","common":"Guam"},"ita":{"official":"Guam","common":"Guam"},"jpn":{"official":"グアム","common":"グアム"},"kor":{"official":"괌","common":"괌"},"nld":{"official":"Guam","common":"Guam"},"per":{"official":"گوآم","common":"گوآم"},"pol":{"official":"Terytorium Guamu","common":"Guam"},"por":{"official":"Guam","common":"Guam"},"rus":{"official":"Гуам","common":"Гуам"},"slk":{"official":"Guam","common":"Guam"},"spa":{"official":"Guam","common":"Guam"},"swe":{"official":"Guam","common":"Guam"},"urd":{"official":"گوام","common":"گوام"},"zho":{"official":"关岛","common":"关岛"}},"latlng":[13.46666666,144.78333333],"landlocked":false,"borders":[],"area":549,"flag":"\uD83C\uDDEC\uD83C\uDDFA","demonyms":{"eng":{"f":"Guamanian","m":"Guamanian"},"fra":{"f":"","m":""}}},{"name":{"common":"Guyana","official":"Co-operative Republic of Guyana","native":{"eng":{"official":"Co-operative Republic of Guyana","common":"Guyana"}}},"tld":[".gy"],"cca2":"GY","ccn3":"328","cca3":"GUY","cioc":"GUY","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"GYD":{"name":"Guyanese dollar","symbol":"$"}},"idd":{"root":"+5","suffixes":["92"]},"capital":["Georgetown"],"altSpellings":["GY","Co-operative Republic of Guyana"],"region":"Americas","subregion":"South America","languages":{"eng":"English"},"translations":{"ces":{"official":"Kooperativn\xed republika Guyana","common":"Guyana"},"deu":{"official":"Kooperative Republik Guyana","common":"Guyana"},"est":{"official":"Guyana Vabariik","common":"Guyana"},"fin":{"official":"Guayanan osuustoiminnallinen tasavalta","common":"Guayana"},"fra":{"official":"R\xe9publique coop\xe9rative de Guyana","common":"Guyana"},"hrv":{"official":"Zadruga Republika Gvajana","common":"Gvajana"},"hun":{"official":"Guyanai Sz\xf6vetkezeti K\xf6zt\xe1rsas\xe1g","common":"Guyana"},"ita":{"official":"Co -operative Republic of Guyana","common":"Guyana"},"jpn":{"official":"ガイアナの協同共和国","common":"ガイアナ"},"kor":{"official":"가이아나 협동 공화국","common":"가이아나"},"nld":{"official":"Co\xf6peratieve Republiek Guyana","common":"Guyana"},"per":{"official":"جمهوری تعاونی گویان","common":"گویان"},"pol":{"official":"Kooperacyjna Republika Gujany","common":"Gujana"},"por":{"official":"Co -operative Rep\xfablica da Guiana","common":"Guiana"},"rus":{"official":"Кооперативная Республика Гайана","common":"Гайана"},"slk":{"official":"Guyansk\xe1 kooperat\xedvna republika","common":"Guyana"},"spa":{"official":"Rep\xfablica Cooperativa de Guyana","common":"Guyana"},"swe":{"official":"Kooperativa republiken Guyana","common":"Guyana"},"urd":{"official":"تعاونی جمہوریہ گیانا","common":"گیانا"},"zho":{"official":"圭亚那共和国","common":"圭亚那"}},"latlng":[5,-59],"landlocked":false,"borders":["BRA","SUR","VEN"],"area":214969,"flag":"\uD83C\uDDEC\uD83C\uDDFE","demonyms":{"eng":{"f":"Guyanese","m":"Guyanese"},"fra":{"f":"Guyanienne","m":"Guyanien"}}},{"name":{"common":"Hong Kong","official":"Hong Kong Special Administrative Region of the People\'s Republic of China","native":{"eng":{"official":"Hong Kong Special Administrative Region of the People\'s Republic of China","common":"Hong Kong"},"zho":{"official":"中华人民共和国香港特别行政区","common":"香港"}}},"tld":[".hk",".香港"],"cca2":"HK","ccn3":"344","cca3":"HKG","cioc":"HKG","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"HKD":{"name":"Hong Kong dollar","symbol":"$"}},"idd":{"root":"+8","suffixes":["52"]},"capital":["City of Victoria"],"altSpellings":["HK"],"region":"Asia","subregion":"Eastern Asia","languages":{"eng":"English","zho":"Chinese"},"translations":{"ces":{"official":"Zvl\xe1štn\xed administrativn\xed oblast Č\xednsk\xe9 lidov\xe9 republiky Hongkong","common":"Hongkong"},"deu":{"official":"Sonderverwaltungszone Hongkong der Volksrepublik China","common":"Hongkong"},"est":{"official":"Hongkongi erihalduspiirkond","common":"Hongkong"},"fin":{"official":"Hong Kongin erityishallintoalue","common":"Hongkong"},"fra":{"official":"R\xe9gion administrative sp\xe9ciale de Hong Kong de la R\xe9publique populaire de Chine","common":"Hong Kong"},"hrv":{"official":"Hong Kong Posebnog upravnog područjaNarodne Republike Kine","common":"Hong Kong"},"hun":{"official":"Hongkong","common":"Hongkong"},"ita":{"official":"Hong Kong Regione amministrativa speciale della Repubblica Popolare Cinese","common":"Hong Kong"},"jpn":{"official":"中華人民共和国香港特別行政区","common":"香港"},"kor":{"official":"중화인민공화국 홍콩 특별행정구","common":"홍콩"},"nld":{"official":"Hong Kong Speciale Administratieve Regio van de Volksrepubliek China","common":"Hongkong"},"per":{"official":"هُنگ کُنگ","common":"هُنگ کُنگ"},"pol":{"official":"Specjalny Region Administracyjny Chińskiej Republiki Ludowej Hongkong","common":"Hongkong"},"por":{"official":"Hong Kong Regi\xe3o Administrativa Especial da Rep\xfablica Popular da China","common":"Hong Kong"},"rus":{"official":"Hong Kong Специальный административный район Китайской Народной Республики Китая","common":"Гонконг"},"slk":{"official":"Špeci\xe1lna administrat\xedvna oblasťČ\xednskej ľudovej republiky Hongkong","common":"Hongkong"},"spa":{"official":"Hong Kong Regi\xf3n Administrativa Especial de la Rep\xfablica Popular China","common":"Hong Kong"},"swe":{"official":"Hongkong","common":"Hongkong"},"urd":{"official":"ہانگ کانگ عوامی جمہوریہ چین کا خصوصی انتظامی علاقہ","common":"ہانگ کانگ"}},"latlng":[22.267,114.188],"landlocked":false,"borders":["CHN"],"area":1104,"flag":"\uD83C\uDDED\uD83C\uDDF0","demonyms":{"eng":{"f":"Hong Konger","m":"Hong Konger"},"fra":{"f":"Hongkongaise","m":"Hongkongais"}}},{"name":{"common":"Heard Island and McDonald Islands","official":"Heard Island and McDonald Islands","native":{"eng":{"official":"Heard Island and McDonald Islands","common":"Heard Island and McDonald Islands"}}},"tld":[".hm",".aq"],"cca2":"HM","ccn3":"334","cca3":"HMD","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{},"idd":{"root":"","suffixes":[]},"capital":[],"altSpellings":["HM","Heard Island and McDonald Islands"],"region":"Antarctic","subregion":"","languages":{"eng":"English"},"translations":{"ces":{"official":"Heardův ostrov a McDonaldovy ostrovy","common":"Heardův ostrov a McDonaldovy ostrovy"},"deu":{"official":"Heard und McDonaldinseln","common":"Heard und die McDonaldinseln"},"est":{"official":"Heardi ja McDonaldi saarte ala","common":"Heard ja McDonald"},"fin":{"official":"Heard ja McDonaldinsaaret","common":"Heard ja McDonaldinsaaret"},"fra":{"official":"\xceles Heard-et-MacDonald","common":"\xceles Heard-et-MacDonald"},"hrv":{"official":"Otok Heard i otočje McDonald","common":"Otok Heard i otočje McDonald"},"hun":{"official":"Heard-sziget \xe9s McDonald-szigetek","common":"Heard-sziget \xe9s McDonald-szigetek"},"ita":{"official":"Isole Heard e McDonald","common":"Isole Heard e McDonald"},"jpn":{"official":"ハード島とマクドナルド諸島","common":"ハード島とマクドナルド諸島"},"kor":{"official":"허드 맥도널드 제도","common":"허드 맥도널드 제도"},"nld":{"official":"Heard en McDonaldeilanden","common":"Heard-en McDonaldeilanden"},"per":{"official":"جزیره هرد و جزایر مک‌دونالد","common":"جزیره هرد و جزایر مک‌دونالد"},"pol":{"official":"Terytorium Wysp Heard i McDonalda","common":"Wyspy Heard i McDonalda"},"por":{"official":"Ilha Heard e Ilhas McDonald","common":"Ilha Heard e Ilhas McDonald"},"rus":{"official":"Остров Херд и острова Макдональд","common":"Остров Херд и острова Макдональд"},"slk":{"official":"Terit\xf3rium Heardovho ostrova a Macdonaldov\xfdch ostrovov","common":"Heardov ostrov"},"spa":{"official":"Islas Heard y McDonald","common":"Islas Heard y McDonald"},"swe":{"official":"Heard- och McDonald\xf6arna","common":"Heard- och McDonald\xf6arna"},"urd":{"official":"جزیرہ ہرڈ و جزائر مکڈونلڈ","common":"جزیرہ ہرڈ و جزائر مکڈونلڈ"},"zho":{"official":"赫德岛和麦当劳群岛","common":"赫德岛和麦当劳群岛"}},"latlng":[-53.1,72.51666666],"landlocked":false,"borders":[],"area":412,"flag":"\uD83C\uDDED\uD83C\uDDF2","demonyms":{"eng":{"f":"Heard and McDonald Islander","m":"Heard and McDonald Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Honduras","official":"Republic of Honduras","native":{"spa":{"official":"Rep\xfablica de Honduras","common":"Honduras"}}},"tld":[".hn"],"cca2":"HN","ccn3":"340","cca3":"HND","cioc":"HON","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"HNL":{"name":"Honduran lempira","symbol":"L"}},"idd":{"root":"+5","suffixes":["04"]},"capital":["Tegucigalpa"],"altSpellings":["HN","Republic of Honduras","Rep\xfablica de Honduras"],"region":"Americas","subregion":"Central America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Hondurask\xe1 republika","common":"Honduras"},"deu":{"official":"Republik Honduras","common":"Honduras"},"est":{"official":"Hondurase Vabariik","common":"Honduras"},"fin":{"official":"Hondurasin tasavalta","common":"Honduras"},"fra":{"official":"R\xe9publique du Honduras","common":"Honduras"},"hrv":{"official":"Republika Honduras","common":"Honduras"},"hun":{"official":"Hondurasi K\xf6zt\xe1rsas\xe1g","common":"Honduras"},"ita":{"official":"Repubblica di Honduras","common":"Honduras"},"jpn":{"official":"ホンジュラス共和国","common":"ホンジュラス"},"kor":{"official":"온두라스 공화국","common":"온두라스"},"nld":{"official":"Republiek Honduras","common":"Honduras"},"per":{"official":"جمهوری هندوراس","common":"هُندوراس"},"pol":{"official":"Republika Hondurasu","common":"Honduras"},"por":{"official":"Rep\xfablica de Honduras","common":"Honduras"},"rus":{"official":"Республика Гондурас","common":"Гондурас"},"slk":{"official":"Hondurask\xe1 republika","common":"Honduras"},"spa":{"official":"Rep\xfablica de Honduras","common":"Honduras"},"swe":{"official":"Republiken Honduras","common":"Honduras"},"urd":{"official":"جمہوریہ ہونڈوراس","common":"ہونڈوراس"},"zho":{"official":"洪都拉斯共和国","common":"洪都拉斯"}},"latlng":[15,-86.5],"landlocked":false,"borders":["GTM","SLV","NIC"],"area":112492,"flag":"\uD83C\uDDED\uD83C\uDDF3","demonyms":{"eng":{"f":"Honduran","m":"Honduran"},"fra":{"f":"Hondurienne","m":"Hondurien"}}},{"name":{"common":"Croatia","official":"Republic of Croatia","native":{"hrv":{"official":"Republika Hrvatska","common":"Hrvatska"}}},"tld":[".hr"],"cca2":"HR","ccn3":"191","cca3":"HRV","cioc":"CRO","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["85"]},"capital":["Zagreb"],"altSpellings":["HR","Hrvatska","Republic of Croatia","Republika Hrvatska"],"region":"Europe","subregion":"Southeast Europe","languages":{"hrv":"Croatian"},"translations":{"ces":{"official":"Chorvatsk\xe1 republika","common":"Chorvatsko"},"cym":{"official":"Gweriniaeth Croatia","common":"Croatia"},"deu":{"official":"Republik Kroatien","common":"Kroatien"},"est":{"official":"Horvaatia Vabariik","common":"Horvaatia"},"fin":{"official":"Kroatian tasavalta","common":"Kroatia"},"fra":{"official":"R\xe9publique de Croatie","common":"Croatie"},"hrv":{"official":"Republika Hrvatska","common":"Hrvatska"},"hun":{"official":"Horv\xe1t K\xf6zt\xe1rsas\xe1g","common":"Horv\xe1torsz\xe1g"},"ita":{"official":"Repubblica di Croazia","common":"Croazia"},"jpn":{"official":"クロアチア共和国","common":"クロアチア"},"kor":{"official":"크로아티아 공화국","common":"크로아티아"},"nld":{"official":"Republiek Kroati\xeb","common":"Kroati\xeb"},"per":{"official":"جمهوری کرواسی","common":"کرُواسی"},"pol":{"official":"Republika Chorwacji","common":"Chorwacja"},"por":{"official":"Rep\xfablica da Cro\xe1cia","common":"Cro\xe1cia"},"rus":{"official":"Республика Хорватия","common":"Хорватия"},"slk":{"official":"Chorv\xe1tska republika","common":"Chorv\xe1tsko"},"spa":{"official":"Rep\xfablica de Croacia","common":"Croacia"},"swe":{"official":"Republiken Kroatien","common":"Kroatien"},"urd":{"official":"جمہوریہ کرویئشا","common":"کرویئشا"},"zho":{"official":"克罗地亚共和国","common":"克罗地亚"}},"latlng":[45.16666666,15.5],"landlocked":false,"borders":["BIH","HUN","MNE","SRB","SVN"],"area":56594,"flag":"\uD83C\uDDED\uD83C\uDDF7","demonyms":{"eng":{"f":"Croatian","m":"Croatian"},"fra":{"f":"Croate","m":"Croate"}}},{"name":{"common":"Haiti","official":"Republic of Haiti","native":{"fra":{"official":"R\xe9publique d\'Ha\xefti","common":"Ha\xefti"},"hat":{"official":"Repiblik Ayiti","common":"Ayiti"}}},"tld":[".ht"],"cca2":"HT","ccn3":"332","cca3":"HTI","cioc":"HAI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"HTG":{"name":"Haitian gourde","symbol":"G"}},"idd":{"root":"+5","suffixes":["09"]},"capital":["Port-au-Prince"],"altSpellings":["HT","Republic of Haiti","R\xe9publique d\'Ha\xefti","Repiblik Ayiti"],"region":"Americas","subregion":"Caribbean","languages":{"fra":"French","hat":"Haitian Creole"},"translations":{"ces":{"official":"Republika Haiti","common":"Haiti"},"deu":{"official":"Republik Haiti","common":"Haiti"},"est":{"official":"Haiti Vabariik","common":"Haiti"},"fin":{"official":"Haitin tasavalta","common":"Haiti"},"fra":{"official":"R\xe9publique d\'Ha\xefti","common":"Ha\xefti"},"hrv":{"official":"Republika Haiti","common":"Haiti"},"hun":{"official":"Haiti K\xf6zt\xe1rsas\xe1g","common":"Haiti"},"ita":{"official":"Repubblica di Haiti","common":"Haiti"},"jpn":{"official":"ハイチ共和国","common":"ハイチ"},"kor":{"official":"아이티 공화국","common":"아이티"},"nld":{"official":"Republiek Ha\xefti","common":"Ha\xefti"},"per":{"official":"جمهوری هائیتی","common":"هائیتی"},"pol":{"official":"Republika Haiti","common":"Haiti"},"por":{"official":"Rep\xfablica do Haiti","common":"Haiti"},"rus":{"official":"Республика Гаити","common":"Гаити"},"slk":{"official":"Haitsk\xe1 republika","common":"Haiti"},"spa":{"official":"Rep\xfablica de Hait\xed","common":"Hait\xed"},"swe":{"official":"Republiken Haiti","common":"Haiti"},"urd":{"official":"جمہوریہ ہیٹی","common":"ہیٹی"},"zho":{"official":"海地共和国","common":"海地"}},"latlng":[19,-72.41666666],"landlocked":false,"borders":["DOM"],"area":27750,"flag":"\uD83C\uDDED\uD83C\uDDF9","demonyms":{"eng":{"f":"Haitian","m":"Haitian"},"fra":{"f":"Ha\xeftienne","m":"Ha\xeftien"}}},{"name":{"common":"Hungary","official":"Hungary","native":{"hun":{"official":"Magyarorsz\xe1g","common":"Magyarorsz\xe1g"}}},"tld":[".hu"],"cca2":"HU","ccn3":"348","cca3":"HUN","cioc":"HUN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"HUF":{"name":"Hungarian forint","symbol":"Ft"}},"idd":{"root":"+3","suffixes":["6"]},"capital":["Budapest"],"altSpellings":["HU"],"region":"Europe","subregion":"Central Europe","languages":{"hun":"Hungarian"},"translations":{"ces":{"official":"Maďarsko","common":"Maďarsko"},"deu":{"official":"Ungarn","common":"Ungarn"},"est":{"official":"Ungari","common":"Ungari"},"fin":{"official":"Unkari","common":"Unkari"},"fra":{"official":"Hongrie","common":"Hongrie"},"hrv":{"official":"Madžarska","common":"Mađarska"},"hun":{"official":"Magyarorsz\xe1g","common":"Magyarorsz\xe1g"},"ita":{"official":"Ungheria","common":"Ungheria"},"jpn":{"official":"ハンガリー","common":"ハンガリー"},"kor":{"official":"헝가리","common":"헝가리"},"nld":{"official":"Hongarije","common":"Hongarije"},"per":{"official":"مجارستان","common":"مجارستان"},"pol":{"official":"Węgry","common":"Węgry"},"por":{"official":"Hungria","common":"Hungria"},"rus":{"official":"Венгрия","common":"Венгрия"},"slk":{"official":"Maďarsko","common":"Maďarsko"},"spa":{"official":"Hungr\xeda","common":"Hungr\xeda"},"swe":{"official":"Ungern","common":"Ungern"},"urd":{"official":"مجارستان","common":"مجارستان"},"zho":{"official":"匈牙利","common":"匈牙利"}},"latlng":[47,20],"landlocked":true,"borders":["AUT","HRV","ROU","SRB","SVK","SVN","UKR"],"area":93028,"flag":"\uD83C\uDDED\uD83C\uDDFA","demonyms":{"eng":{"f":"Hungarian","m":"Hungarian"},"fra":{"f":"Hongroise","m":"Hongrois"}}},{"name":{"common":"Indonesia","official":"Republic of Indonesia","native":{"ind":{"official":"Republik Indonesia","common":"Indonesia"}}},"tld":[".id"],"cca2":"ID","ccn3":"360","cca3":"IDN","cioc":"INA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"IDR":{"name":"Indonesian rupiah","symbol":"Rp"}},"idd":{"root":"+6","suffixes":["2"]},"capital":["Jakarta"],"altSpellings":["ID","Republic of Indonesia","Republik Indonesia"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"ind":"Indonesian"},"translations":{"ces":{"official":"Indon\xe9sk\xe1 republika","common":"Indon\xe9sie"},"deu":{"official":"Republik Indonesien","common":"Indonesien"},"est":{"official":"Indoneesia Vabariik","common":"Indoneesia"},"fin":{"official":"Indonesian tasavalta","common":"Indonesia"},"fra":{"official":"R\xe9publique d\'Indon\xe9sie","common":"Indon\xe9sie"},"hrv":{"official":"Republika Indonezija","common":"Indonezija"},"hun":{"official":"Indon\xe9z K\xf6zt\xe1rsas\xe1g","common":"Indon\xe9zia"},"ita":{"official":"Repubblica di Indonesia","common":"Indonesia"},"jpn":{"official":"インドネシア共和国","common":"インドネシア"},"kor":{"official":"인도네시아 공화국","common":"인도네시아"},"nld":{"official":"Republiek Indonesi\xeb","common":"Indonesi\xeb"},"per":{"official":"جمهوری اندونزی","common":"اندونزی"},"pol":{"official":"Republika Indonezji","common":"Indonezja"},"por":{"official":"Rep\xfablica da Indon\xe9sia","common":"Indon\xe9sia"},"rus":{"official":"Республика Индонезия","common":"Индонезия"},"slk":{"official":"Indon\xe9zska republika","common":"Indon\xe9zia"},"spa":{"official":"Rep\xfablica de Indonesia","common":"Indonesia"},"swe":{"official":"Republiken Indonesien","common":"Indonesien"},"urd":{"official":"جمہوریہ انڈونیشیا","common":"انڈونیشیا"},"zho":{"official":"印度尼西亚共和国","common":"印度尼西亚"}},"latlng":[-5,120],"landlocked":false,"borders":["TLS","MYS","PNG"],"area":1904569,"flag":"\uD83C\uDDEE\uD83C\uDDE9","demonyms":{"eng":{"f":"Indonesian","m":"Indonesian"},"fra":{"f":"Indon\xe9sienne","m":"Indon\xe9sien"}}},{"name":{"common":"Isle of Man","official":"Isle of Man","native":{"eng":{"official":"Isle of Man","common":"Isle of Man"},"glv":{"official":"Ellan Vannin or Mannin","common":"Mannin"}}},"tld":[".im"],"cca2":"IM","ccn3":"833","cca3":"IMN","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"GBP":{"name":"British pound","symbol":"\xa3"},"IMP":{"name":"Manx pound","symbol":"\xa3"}},"idd":{"root":"+4","suffixes":["4"]},"capital":["Douglas"],"altSpellings":["IM","Ellan Vannin","Mann","Mannin"],"region":"Europe","subregion":"Northern Europe","languages":{"eng":"English","glv":"Manx"},"translations":{"ces":{"official":"Ostrov Man","common":"Ostrov Man"},"deu":{"official":"Isle of Man","common":"Insel Man"},"est":{"official":"Mani saar","common":"Mani saar"},"fin":{"official":"Mansaari","common":"Mansaari"},"fra":{"official":"Isle of Man","common":"\xcele de Man"},"hrv":{"official":"Mana ostrvo","common":"Otok Man"},"hun":{"official":"Man","common":"Man"},"ita":{"official":"Isola di Man","common":"Isola di Man"},"jpn":{"official":"マン島","common":"マン島"},"kor":{"official":"맨섬","common":"맨섬"},"nld":{"official":"Isle of Man","common":"Isle of Man"},"per":{"official":"جزیرهٔ مَن","common":"جزیرهٔ مَن"},"pol":{"official":"Wyspa Man","common":"Wyspa Man"},"por":{"official":"Isle of Man","common":"Ilha de Man"},"rus":{"official":"Остров Мэн","common":"Остров Мэн"},"slk":{"official":"Ostrov Man","common":"Man"},"spa":{"official":"Isla de Man","common":"Isla de Man"},"swe":{"official":"Isle of Man","common":"Isle of Man"},"urd":{"official":"آئل آف مین","common":"آئل آف مین"},"zho":{"official":"马恩岛","common":"马恩岛"}},"latlng":[54.25,-4.5],"landlocked":false,"borders":[],"area":572,"flag":"\uD83C\uDDEE\uD83C\uDDF2","demonyms":{"eng":{"f":"Manx","m":"Manx"},"fra":{"f":"","m":""}}},{"name":{"common":"India","official":"Republic of India","native":{"eng":{"official":"Republic of India","common":"India"},"hin":{"official":"भारत गणराज्य","common":"भारत"},"tam":{"official":"இந்தியக் குடியரசு","common":"இந்தியா"}}},"tld":[".in"],"cca2":"IN","ccn3":"356","cca3":"IND","cioc":"IND","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"INR":{"name":"Indian rupee","symbol":"₹"}},"idd":{"root":"+9","suffixes":["1"]},"capital":["New Delhi"],"altSpellings":["IN","Bhārat","Republic of India","Bharat Ganrajya","இந்தியா"],"region":"Asia","subregion":"Southern Asia","languages":{"eng":"English","hin":"Hindi","tam":"Tamil"},"translations":{"ces":{"official":"Indick\xe1 republika","common":"Indie"},"deu":{"official":"Republik Indien","common":"Indien"},"est":{"official":"India Vabariik","common":"India"},"fin":{"official":"Intian tasavalta","common":"Intia"},"fra":{"official":"R\xe9publique de l\'Inde","common":"Inde"},"hrv":{"official":"Republika Indija","common":"Indija"},"hun":{"official":"Indiai K\xf6zt\xe1rsas\xe1g","common":"India"},"ita":{"official":"Repubblica dell\'India","common":"India"},"jpn":{"official":"インド共和国","common":"インド"},"kor":{"official":"인도 공화국","common":"인도"},"nld":{"official":"Republiek India","common":"India"},"per":{"official":"جمهوری هندوستان","common":"هند"},"pol":{"official":"Republika Indii","common":"Indie"},"por":{"official":"Rep\xfablica da \xcdndia","common":"\xcdndia"},"rus":{"official":"Республика Индия","common":"Индия"},"slk":{"official":"Indick\xe1 republika","common":"India"},"spa":{"official":"Rep\xfablica de la India","common":"India"},"swe":{"official":"Republiken Indien","common":"Indien"},"urd":{"official":"جمہوریہ بھارت","common":"بھارت"},"zho":{"official":"印度共和国","common":"印度"}},"latlng":[20,77],"landlocked":false,"borders":["BGD","BTN","MMR","CHN","NPL","PAK"],"area":3287590,"flag":"\uD83C\uDDEE\uD83C\uDDF3","demonyms":{"eng":{"f":"Indian","m":"Indian"},"fra":{"f":"Indienne","m":"Indien"}}},{"name":{"common":"British Indian Ocean Territory","official":"British Indian Ocean Territory","native":{"eng":{"official":"British Indian Ocean Territory","common":"British Indian Ocean Territory"}}},"tld":[".io"],"cca2":"IO","ccn3":"086","cca3":"IOT","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+2","suffixes":["46"]},"capital":["Diego Garcia"],"altSpellings":["IO"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Britsk\xe9 indickooce\xe1nsk\xe9 \xfazem\xed","common":"Britsk\xe9 indickooce\xe1nsk\xe9 \xfazem\xed"},"cym":{"official":"Tiriogaeth Brydeinig Cefnfor India","common":"Tiriogaeth Brydeinig Cefnfor India"},"deu":{"official":"Britisches Territorium im Indischen Ozean","common":"Britisches Territorium im Indischen Ozean"},"est":{"official":"Briti India ookeani ala","common":"Briti India ookeani ala"},"fin":{"official":"Brittil\xe4inen Intian valtameren alue","common":"Brittil\xe4inen Intian valtameren alue"},"fra":{"official":"Territoire britannique de l\' oc\xe9an Indien","common":"Territoire britannique de l\'oc\xe9an Indien"},"hrv":{"official":"British Indian Ocean Territory","common":"Britanski Indijskooceanski teritorij"},"hun":{"official":"Brit Indiai-\xf3ce\xe1ni Ter\xfclet","common":"Brit Indiai-\xf3ce\xe1ni Ter\xfclet"},"ita":{"official":"Territorio britannico dell\'Oceano Indiano","common":"Territorio britannico dell\'oceano indiano"},"jpn":{"official":"イギリス領インド洋地域","common":"イギリス領インド洋地域"},"kor":{"official":"인도 공화국","common":"인도"},"nld":{"official":"Brits Indische Oceaan Territorium","common":"Britse Gebieden in de Indische Oceaan"},"per":{"official":"قلمرو بریتانیا در اقیانوس هند","common":"قلمرو بریتانیا در اقیانوس هند"},"pol":{"official":"Brytyjskie Terytorium Oceanu Indyjskiego","common":"Brytyjskie Terytorium Oceanu Indyjskiego"},"por":{"official":"British Indian Ocean Territory","common":"Territ\xf3rio Brit\xe2nico do Oceano \xcdndico"},"rus":{"official":"Британская территория Индийского океана","common":"Британская территория в Индийском океане"},"slk":{"official":"Britsk\xe9 indickooce\xe1nske \xfazemie","common":"Britsk\xe9 indickooce\xe1nske \xfazemie"},"spa":{"official":"Territorio Brit\xe1nico del Oc\xe9ano \xcdndico","common":"Territorio Brit\xe1nico del Oc\xe9ano \xcdndico"},"swe":{"official":"Brittiska territoriet i Indiska Oceanen","common":"Brittiska territoriet i Indiska Oceanen"},"urd":{"official":"برطانوی بحرہند خطہ","common":"برطانوی بحرہند خطہ"},"zho":{"official":"英属印度洋领地","common":"英属印度洋领地"}},"latlng":[-6,71.5],"landlocked":false,"borders":[],"area":60,"flag":"\uD83C\uDDEE\uD83C\uDDF4","demonyms":{"eng":{"f":"Indian","m":"Indian"},"fra":{"f":"","m":""}}},{"name":{"common":"Ireland","official":"Republic of Ireland","native":{"eng":{"official":"Republic of Ireland","common":"Ireland"},"gle":{"official":"Poblacht na h\xc9ireann","common":"\xc9ire"}}},"tld":[".ie"],"cca2":"IE","ccn3":"372","cca3":"IRL","cioc":"IRL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["53"]},"capital":["Dublin"],"altSpellings":["IE","\xc9ire","Republic of Ireland","Poblacht na h\xc9ireann"],"region":"Europe","subregion":"Northern Europe","languages":{"eng":"English","gle":"Irish"},"translations":{"ces":{"official":"Irsko","common":"Irsko"},"deu":{"official":"Republik Irland","common":"Irland"},"est":{"official":"Iirimaa","common":"Iirimaa"},"fin":{"official":"Irlannin tasavalta","common":"Irlanti"},"fra":{"official":"R\xe9publique d\'Irlande","common":"Irlande"},"hrv":{"official":"Republika Irska","common":"Irska"},"hun":{"official":"\xcdr K\xf6zt\xe1rsas\xe1g","common":"\xcdrorsz\xe1g"},"ita":{"official":"Repubblica d\'Irlanda","common":"Irlanda"},"jpn":{"official":"アイルランド共和国","common":"アイルランド"},"kor":{"official":"아일랜드 공화국","common":"아일랜드"},"nld":{"official":"Republic of Ireland","common":"Ierland"},"per":{"official":"ایرلند","common":"ایرلند"},"pol":{"official":"Republika Irlandii","common":"Irlandia"},"por":{"official":"Rep\xfablica da Irlanda","common":"Irlanda"},"rus":{"official":"Ирландия","common":"Ирландия"},"slk":{"official":"\xcdrska republika","common":"\xcdrsko"},"spa":{"official":"Rep\xfablica de Irlanda","common":"Irlanda"},"swe":{"official":"Irland","common":"Irland"},"urd":{"official":"جمہوریہ جزیرہ آئرلینڈ","common":"جزیرہ آئرلینڈ"},"zho":{"official":"爱尔兰共和国","common":"爱尔兰"}},"latlng":[53,-8],"landlocked":false,"borders":["GBR"],"area":70273,"flag":"\uD83C\uDDEE\uD83C\uDDEA","demonyms":{"eng":{"f":"Irish","m":"Irish"},"fra":{"f":"Irlandaise","m":"Irlandais"}}},{"name":{"common":"Iran","official":"Islamic Republic of Iran","native":{"fas":{"official":"جمهوری اسلامی ایران","common":"ایران"}}},"tld":[".ir","ایران."],"cca2":"IR","ccn3":"364","cca3":"IRN","cioc":"IRI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"IRR":{"name":"Iranian rial","symbol":"﷼"}},"idd":{"root":"+9","suffixes":["8"]},"capital":["Tehran"],"altSpellings":["IR","Islamic Republic of Iran","Iran, Islamic Republic of","Jomhuri-ye Eslāmi-ye Irān"],"region":"Asia","subregion":"Southern Asia","languages":{"fas":"Persian (Farsi)"},"translations":{"ces":{"official":"Isl\xe1msk\xe1 republika \xcdr\xe1n","common":"\xcdr\xe1n"},"deu":{"official":"Islamische Republik Iran","common":"Iran"},"est":{"official":"Iraani Islamivabariik","common":"Iraan"},"fin":{"official":"Iranin islamilainen tasavalta","common":"Iran"},"fra":{"official":"R\xe9publique islamique d\'Iran","common":"Iran"},"hrv":{"official":"Islamska Republika Iran","common":"Iran"},"hun":{"official":"Ir\xe1ni Iszl\xe1m K\xf6zt\xe1rsas\xe1g","common":"Ir\xe1n"},"ita":{"official":"Repubblica islamica dell\'Iran","common":"Iran"},"jpn":{"official":"イラン\xb7イスラム共和国","common":"イラン・イスラム共和国"},"kor":{"official":"이란 이슬람 공화국","common":"이란"},"nld":{"official":"Islamitische Republiek Iran","common":"Iran"},"pol":{"official":"Islamska Republika Iranu","common":"Iran"},"por":{"official":"Rep\xfablica Isl\xe2mica do Ir\xe3","common":"Ir\xe3o"},"rus":{"official":"Исламская Республика Иран","common":"Иран"},"slk":{"official":"Ir\xe1nska islamsk\xe1 republika","common":"Ir\xe1n"},"spa":{"official":"Rep\xfablica Isl\xe1mica de Ir\xe1n","common":"Iran"},"swe":{"official":"Islamiska republiken Iran","common":"Iran"},"urd":{"official":"جمہوریہ ایران","common":"ایران"},"zho":{"official":"伊朗伊斯兰共和国","common":"伊朗"}},"latlng":[32,53],"landlocked":false,"borders":["AFG","ARM","AZE","IRQ","PAK","TUR","TKM"],"area":1648195,"flag":"\uD83C\uDDEE\uD83C\uDDF7","demonyms":{"eng":{"f":"Iranian","m":"Iranian"},"fra":{"f":"Iranienne","m":"Iranien"}}},{"name":{"common":"Iraq","official":"Republic of Iraq","native":{"ara":{"official":"جمهورية العراق","common":"العراق"},"arc":{"official":"ܩܘܼܛܢܵܐ ܐܝܼܪܲܩ","common":"ܩܘܼܛܢܵܐ"},"ckb":{"official":"کۆماری عێراق","common":"کۆماری"}}},"tld":[".iq"],"cca2":"IQ","ccn3":"368","cca3":"IRQ","cioc":"IRQ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"IQD":{"name":"Iraqi dinar","symbol":"ع.د"}},"idd":{"root":"+9","suffixes":["64"]},"capital":["Baghdad"],"altSpellings":["IQ","Republic of Iraq","Jumhūriyyat al-‘Irāq"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic","arc":"Aramaic","ckb":"Sorani"},"translations":{"ces":{"official":"Ir\xe1ck\xe1 republika","common":"Ir\xe1k"},"deu":{"official":"Republik Irak","common":"Irak"},"est":{"official":"Iraagi Vabariik","common":"Iraak"},"fin":{"official":"Irakin tasavalta","common":"Irak"},"fra":{"official":"R\xe9publique d\'Irak","common":"Irak"},"hrv":{"official":"Republika Irak","common":"Irak"},"hun":{"official":"Iraki K\xf6zt\xe1rsas\xe1g","common":"Irak"},"ita":{"official":"Repubblica dell\'Iraq","common":"Iraq"},"jpn":{"official":"イラク共和国","common":"イラク"},"kor":{"official":"이라크 공화국","common":"이라크"},"nld":{"official":"Republiek Irak","common":"Irak"},"per":{"official":"جمهوری عراق","common":"عراق"},"pol":{"official":"Republika Iraku","common":"Irak"},"por":{"official":"Rep\xfablica do Iraque","common":"Iraque"},"rus":{"official":"Республика Ирак","common":"Ирак"},"slk":{"official":"Irack\xe1 republika","common":"Irak"},"spa":{"official":"Rep\xfablica de Irak","common":"Irak"},"swe":{"official":"Republiken Irak","common":"Irak"},"urd":{"official":"جمہوریہ عراق","common":"عراق"},"zho":{"official":"伊拉克共和国","common":"伊拉克"}},"latlng":[33,44],"landlocked":false,"borders":["IRN","JOR","KWT","SAU","SYR","TUR"],"area":438317,"flag":"\uD83C\uDDEE\uD83C\uDDF6","demonyms":{"eng":{"f":"Iraqi","m":"Iraqi"},"fra":{"f":"Irakienne","m":"Irakien"}}},{"name":{"common":"Iceland","official":"Iceland","native":{"isl":{"official":"\xcdsland","common":"\xcdsland"}}},"tld":[".is"],"cca2":"IS","ccn3":"352","cca3":"ISL","cioc":"ISL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ISK":{"name":"Icelandic kr\xf3na","symbol":"kr"}},"idd":{"root":"+3","suffixes":["54"]},"capital":["Reykjavik"],"altSpellings":["IS","Island","Republic of Iceland","L\xfd\xf0veldi\xf0 \xcdsland"],"region":"Europe","subregion":"Northern Europe","languages":{"isl":"Icelandic"},"translations":{"ces":{"official":"Island","common":"Island"},"deu":{"official":"Island","common":"Island"},"est":{"official":"Islandi Vabariik","common":"Island"},"fin":{"official":"Islanti","common":"Islanti"},"fra":{"official":"R\xe9publique d\'Islande","common":"Islande"},"hrv":{"official":"Island","common":"Island"},"hun":{"official":"Izland","common":"Izland"},"ita":{"official":"Islanda","common":"Islanda"},"jpn":{"official":"アイスランド","common":"アイスランド"},"kor":{"official":"아이슬란드 공화국","common":"아이슬란드"},"nld":{"official":"IJsland","common":"IJsland"},"per":{"official":"جمهوری ایسلند","common":"ایسلند"},"pol":{"official":"Republika Islandii","common":"Islandia"},"por":{"official":"Isl\xe2ndia","common":"Isl\xe2ndia"},"rus":{"official":"Исландия","common":"Исландия"},"slk":{"official":"Islandsk\xe1 republika","common":"Island"},"spa":{"official":"Islandia","common":"Islandia"},"swe":{"official":"Island","common":"Island"},"urd":{"official":"آئس لینڈ","common":"آئس لینڈ"},"zho":{"official":"冰岛","common":"冰岛"}},"latlng":[65,-18],"landlocked":false,"borders":[],"area":103000,"flag":"\uD83C\uDDEE\uD83C\uDDF8","demonyms":{"eng":{"f":"Icelander","m":"Icelander"},"fra":{"f":"Islandaise","m":"Islandais"}}},{"name":{"common":"Israel","official":"State of Israel","native":{"ara":{"official":"دولة إسرائيل","common":"إسرائيل"},"heb":{"official":"מדינת ישראל","common":"ישראל"}}},"tld":[".il"],"cca2":"IL","ccn3":"376","cca3":"ISR","cioc":"ISR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ILS":{"name":"Israeli new shekel","symbol":"₪"}},"idd":{"root":"+9","suffixes":["72"]},"capital":["Jerusalem"],"altSpellings":["IL","State of Israel","Medīnat Yisrā\'el"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic","heb":"Hebrew"},"translations":{"ces":{"official":"St\xe1t Izrael","common":"Izrael"},"deu":{"official":"Staat Israel","common":"Israel"},"est":{"official":"Iisraeli Riik","common":"Iisrael"},"fin":{"official":"Israelin valtio","common":"Israel"},"fra":{"official":"\xc9tat d\'Isra\xebl","common":"Isra\xebl"},"hrv":{"official":"Država Izrael","common":"Izrael"},"hun":{"official":"Izrael","common":"Izrael"},"ita":{"official":"Stato di Israele","common":"Israele"},"jpn":{"official":"イスラエル国","common":"イスラエル"},"kor":{"official":"이스라엘국","common":"이스라엘"},"nld":{"official":"Staat Isra\xebl","common":"Isra\xebl"},"per":{"official":"فلسطين اشغالی","common":"فلسطين اشغالی"},"pol":{"official":"Państwo Izrael","common":"Izrael"},"por":{"official":"Estado de Israel","common":"Israel"},"rus":{"official":"Государство Израиль","common":"Израиль"},"slk":{"official":"Izraelsk\xfd št\xe1t","common":"Izrael"},"spa":{"official":"Estado de Israel","common":"Israel"},"swe":{"official":"Staten Israel","common":"Israel"},"urd":{"official":"ریاستِ اسرائیل","common":"اسرائیل"},"zho":{"official":"以色列国","common":"以色列"}},"latlng":[31.47,35.13],"landlocked":false,"borders":["EGY","JOR","LBN","PSE","SYR"],"area":20770,"flag":"\uD83C\uDDEE\uD83C\uDDF1","demonyms":{"eng":{"f":"Israeli","m":"Israeli"},"fra":{"f":"Isra\xe9lienne","m":"Isra\xe9lien"}}},{"name":{"common":"Italy","official":"Italian Republic","native":{"ita":{"official":"Repubblica italiana","common":"Italia"}}},"tld":[".it"],"cca2":"IT","ccn3":"380","cca3":"ITA","cioc":"ITA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["9"]},"capital":["Rome"],"altSpellings":["IT","Italian Republic","Repubblica italiana"],"region":"Europe","subregion":"Southern Europe","languages":{"ita":"Italian"},"translations":{"ces":{"official":"Italsk\xe1 republika","common":"It\xe1lie"},"deu":{"official":"Italienische Republik","common":"Italien"},"est":{"official":"Itaalia Vabariik","common":"Itaalia"},"fin":{"official":"Italian tasavalta","common":"Italia"},"fra":{"official":"R\xe9publique italienne","common":"Italie"},"hrv":{"official":"talijanska Republika","common":"Italija"},"hun":{"official":"Olasz K\xf6zt\xe1rsas\xe1g","common":"Olaszorsz\xe1g"},"ita":{"official":"Repubblica italiana","common":"Italia"},"jpn":{"official":"イタリア共和国","common":"イタリア"},"kor":{"official":"이탈리아 공화국","common":"이탈리아"},"nld":{"official":"Italiaanse Republiek","common":"Itali\xeb"},"per":{"official":"جمهوری ایتالیا","common":"ایتالیا"},"pol":{"official":"Republika Włoska","common":"Włochy"},"por":{"official":"Rep\xfablica Italiana","common":"It\xe1lia"},"rus":{"official":"итальянская Республика","common":"Италия"},"slk":{"official":"Talianska republika","common":"Taliansko"},"spa":{"official":"Rep\xfablica Italiana","common":"Italia"},"swe":{"official":"Republiken Italien","common":"Italien"},"urd":{"official":"جمہوریہ اطالیہ","common":"اطالیہ"},"zho":{"official":"意大利共和国","common":"意大利"}},"latlng":[42.83333333,12.83333333],"landlocked":false,"borders":["AUT","FRA","SMR","SVN","CHE","VAT"],"area":301336,"flag":"\uD83C\uDDEE\uD83C\uDDF9","demonyms":{"eng":{"f":"Italian","m":"Italian"},"fra":{"f":"Italienne","m":"Italien"}}},{"name":{"common":"Jamaica","official":"Jamaica","native":{"eng":{"official":"Jamaica","common":"Jamaica"},"jam":{"official":"Jamaica","common":"Jamaica"}}},"tld":[".jm"],"cca2":"JM","ccn3":"388","cca3":"JAM","cioc":"JAM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"JMD":{"name":"Jamaican dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["876"]},"capital":["Kingston"],"altSpellings":["JM"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English","jam":"Jamaican Patois"},"translations":{"ces":{"official":"Jamajka","common":"Jamajka"},"deu":{"official":"Jamaika","common":"Jamaika"},"est":{"official":"Jamaica","common":"Jamaica"},"fin":{"official":"Jamaika","common":"Jamaika"},"fra":{"official":"Jama\xefque","common":"Jama\xefque"},"hrv":{"official":"Jamajka","common":"Jamajka"},"hun":{"official":"Jamaica","common":"Jamaica"},"ita":{"official":"Giamaica","common":"Giamaica"},"jpn":{"official":"ジャマイカ","common":"ジャマイカ"},"kor":{"official":"자메이카","common":"자메이카"},"nld":{"official":"Jamaica","common":"Jamaica"},"per":{"official":"جامائیکا","common":"جامائیکا"},"pol":{"official":"Jamajka","common":"Jamajka"},"por":{"official":"Jamaica","common":"Jamaica"},"rus":{"official":"Ямайка","common":"Ямайка"},"slk":{"official":"Jamajka","common":"Jamajka"},"spa":{"official":"Jamaica","common":"Jamaica"},"swe":{"official":"Jamaica","common":"Jamaica"},"urd":{"official":"جمیکا","common":"جمیکا"},"zho":{"official":"牙买加","common":"牙买加"}},"latlng":[18.25,-77.5],"landlocked":false,"borders":[],"area":10991,"flag":"\uD83C\uDDEF\uD83C\uDDF2","demonyms":{"eng":{"f":"Jamaican","m":"Jamaican"},"fra":{"f":"Jama\xefcaine","m":"Jama\xefcain"}}},{"name":{"common":"Jersey","official":"Bailiwick of Jersey","native":{"eng":{"official":"Bailiwick of Jersey","common":"Jersey"},"fra":{"official":"Bailliage de Jersey","common":"Jersey"},"nrf":{"official":"Bailliage d\xe9 J\xe8rri","common":"J\xe8rri"}}},"tld":[".je"],"cca2":"JE","ccn3":"832","cca3":"JEY","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"GBP":{"name":"British pound","symbol":"\xa3"},"JEP":{"name":"Jersey pound","symbol":"\xa3"}},"idd":{"root":"+4","suffixes":["4"]},"capital":["Saint Helier"],"altSpellings":["JE","Bailiwick of Jersey","Bailliage de Jersey","Bailliage d\xe9 J\xe8rri"],"region":"Europe","subregion":"Northern Europe","languages":{"eng":"English","fra":"French","nrf":"J\xe8rriais"},"translations":{"ces":{"official":"Rycht\xe1řstv\xed Jersey","common":"Jersey"},"deu":{"official":"Vogtei Jersey","common":"Jersey"},"est":{"official":"Jersey foogtkond","common":"Jersey"},"fin":{"official":"Jersey","common":"Jersey"},"fra":{"official":"Bailliage de Jersey","common":"Jersey"},"hrv":{"official":"Struka od Jersey","common":"Jersey"},"hun":{"official":"Jersey","common":"Jersey"},"ita":{"official":"Baliato di Jersey","common":"Isola di Jersey"},"jpn":{"official":"ジャージの得意分野","common":"ジャージー"},"kor":{"official":"저지 섬","common":"저지 섬"},"nld":{"official":"Baljuwschap Jersey","common":"Jersey"},"per":{"official":"جرزی","common":"جرزی"},"pol":{"official":"Jersey","common":"Jersey"},"por":{"official":"Bailiado de Jersey","common":"Jersey"},"rus":{"official":"Коронное владение Джерси","common":"Джерси"},"slk":{"official":"Bailiwick Jersey","common":"Jersey"},"spa":{"official":"Bail\xeda de Jersey","common":"Jersey"},"swe":{"official":"Jersey","common":"Jersey"},"urd":{"official":"جرزی","common":"جرزی"},"zho":{"official":"泽西岛","common":"泽西岛"}},"latlng":[49.25,-2.16666666],"landlocked":false,"borders":[],"area":116,"flag":"\uD83C\uDDEF\uD83C\uDDEA","demonyms":{"eng":{"f":"Channel Islander","m":"Channel Islander"},"fra":{"f":"Jersiaise","m":"Jersiais"}}},{"name":{"common":"Jordan","official":"Hashemite Kingdom of Jordan","native":{"ara":{"official":"المملكة الأردنية الهاشمية","common":"الأردن"}}},"tld":[".jo","الاردن."],"cca2":"JO","ccn3":"400","cca3":"JOR","cioc":"JOR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"JOD":{"name":"Jordanian dinar","symbol":"د.ا"}},"idd":{"root":"+9","suffixes":["62"]},"capital":["Amman"],"altSpellings":["JO","Hashemite Kingdom of Jordan","al-Mamlakah al-Urdunīyah al-Hāshimīyah"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Jord\xe1nsk\xe9 h\xe1šimovsk\xe9 kr\xe1lovstv\xed","common":"Jord\xe1nsko"},"deu":{"official":"Haschemitisches K\xf6nigreich Jordanien","common":"Jordanien"},"est":{"official":"Jordaania Hašimiidi Kuningriik","common":"Jordaania"},"fin":{"official":"Jordanian hašemiittinen kunigaskunta","common":"Jordania"},"fra":{"official":"Royaume hach\xe9mite de Jordanie","common":"Jordanie"},"hrv":{"official":"Hašemitske Kraljevine Jordan","common":"Jordan"},"hun":{"official":"Jord\xe1nia","common":"Jord\xe1nia"},"ita":{"official":"Regno hascemita di Giordania","common":"Giordania"},"jpn":{"official":"ヨルダン\xb7ハシミテ王国","common":"ヨルダン"},"kor":{"official":"요르단 하심 왕국","common":"요르단"},"nld":{"official":"Hasjemitisch Koninkrijk Jordani\xeb","common":"Jordani\xeb"},"per":{"official":"پادشاهی اُردُن هاشمی","common":"اردن"},"pol":{"official":"Jordańskie Kr\xf3lestwo Haszymidzkie","common":"Jordania"},"por":{"official":"Reino Hachemita da Jord\xe2nia","common":"Jord\xe2nia"},"rus":{"official":"Иорданского Хашимитского Королевства","common":"Иордания"},"slk":{"official":"Jord\xe1nske h\xe1šimovsk\xe9 kr\xe1ľovstvo","common":"Jord\xe1nsko"},"spa":{"official":"Reino Hachemita de Jordania","common":"Jordania"},"swe":{"official":"Hashimitiska kungad\xf6met Jordanien","common":"Jordanien"},"urd":{"official":"ھاشمی مملکتِ اردن","common":"اردن"},"zho":{"official":"约旦哈希姆王国","common":"约旦"}},"latlng":[31,36],"landlocked":false,"borders":["IRQ","ISR","PSE","SAU","SYR"],"area":89342,"flag":"\uD83C\uDDEF\uD83C\uDDF4","demonyms":{"eng":{"f":"Jordanian","m":"Jordanian"},"fra":{"f":"Jordanienne","m":"Jordanien"}}},{"name":{"common":"Japan","official":"Japan","native":{"jpn":{"official":"日本","common":"日本"}}},"tld":[".jp",".みんな"],"cca2":"JP","ccn3":"392","cca3":"JPN","cioc":"JPN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"JPY":{"name":"Japanese yen","symbol":"\xa5"}},"idd":{"root":"+8","suffixes":["1"]},"capital":["Tokyo"],"altSpellings":["JP","Nippon","Nihon"],"region":"Asia","subregion":"Eastern Asia","languages":{"jpn":"Japanese"},"translations":{"ces":{"official":"Japonsko","common":"Japonsko"},"deu":{"official":"Japan","common":"Japan"},"est":{"official":"Jaapan","common":"Jaapan"},"fin":{"official":"Japani","common":"Japani"},"fra":{"official":"Japon","common":"Japon"},"hrv":{"official":"Japan","common":"Japan"},"hun":{"official":"Jap\xe1n","common":"Jap\xe1n"},"ita":{"official":"Giappone","common":"Giappone"},"jpn":{"official":"日本","common":"日本"},"kor":{"official":"일본국","common":"일본"},"nld":{"official":"Japan","common":"Japan"},"per":{"official":"ژاپن","common":"ژاپن"},"pol":{"official":"Japonia","common":"Japonia"},"por":{"official":"Jap\xe3o","common":"Jap\xe3o"},"rus":{"official":"Япония","common":"Япония"},"slk":{"official":"Japonsko","common":"Japonsko"},"spa":{"official":"Jap\xf3n","common":"Jap\xf3n"},"swe":{"official":"Japan","common":"Japan"},"urd":{"official":"جاپان","common":"جاپان"},"zho":{"official":"日本国","common":"日本"}},"latlng":[36,138],"landlocked":false,"borders":[],"area":377930,"flag":"\uD83C\uDDEF\uD83C\uDDF5","demonyms":{"eng":{"f":"Japanese","m":"Japanese"},"fra":{"f":"Japonaise","m":"Japonais"}}},{"name":{"common":"Kazakhstan","official":"Republic of Kazakhstan","native":{"kaz":{"official":"Қазақстан Республикасы","common":"Қазақстан"},"rus":{"official":"Республика Казахстан","common":"Казахстан"}}},"tld":[".kz",".қаз"],"cca2":"KZ","ccn3":"398","cca3":"KAZ","cioc":"KAZ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KZT":{"name":"Kazakhstani tenge","symbol":"₸"}},"idd":{"root":"+7","suffixes":["6","7"]},"capital":["Nur-Sultan"],"altSpellings":["KZ","Qazaqstan","Казахстан","Republic of Kazakhstan","Қазақстан Республикасы","Qazaqstan Respubl\xefkası","Республика Казахстан","Respublika Kazakhstan"],"region":"Asia","subregion":"Central Asia","languages":{"kaz":"Kazakh","rus":"Russian"},"translations":{"ces":{"official":"Republika Kazachst\xe1n","common":"Kazachst\xe1n"},"deu":{"official":"Republik Kasachstan","common":"Kasachstan"},"est":{"official":"Kasahstani Vabariik","common":"Kasahstan"},"fin":{"official":"Kazakstanin tasavalta","common":"Kazakstan"},"fra":{"official":"R\xe9publique du Kazakhstan","common":"Kazakhstan"},"hrv":{"official":"Republika Kazahstan","common":"Kazahstan"},"hun":{"official":"Kazah K\xf6zt\xe1rsas\xe1g","common":"Kazahszt\xe1n"},"ita":{"official":"Repubblica del Kazakhstan","common":"Kazakistan"},"jpn":{"official":"カザフスタン共和国","common":"カザフスタン"},"kor":{"official":"카자흐스탄 공화국","common":"카자흐스탄"},"nld":{"official":"Republiek Kazachstan","common":"Kazachstan"},"per":{"official":"جمهوری قزاقستان","common":"قزاقستان"},"pol":{"official":"Republika Kazachstanu","common":"Kazachstan"},"por":{"official":"Rep\xfablica do Cazaquist\xe3o","common":"Cazaquist\xe3o"},"rus":{"official":"Республика Казахстан","common":"Казахстан"},"slk":{"official":"Kazašsk\xe1 republika","common":"Kazachstan"},"spa":{"official":"Rep\xfablica de Kazajst\xe1n","common":"Kazajist\xe1n"},"swe":{"official":"Republiken Kazakstan","common":"Kazakstan"},"urd":{"official":"جمہوریہ قازقستان","common":"قازقستان"},"zho":{"official":"哈萨克斯坦共和国","common":"哈萨克斯坦"}},"latlng":[48,68],"landlocked":true,"borders":["CHN","KGZ","RUS","TKM","UZB"],"area":2724900,"flag":"\uD83C\uDDF0\uD83C\uDDFF","demonyms":{"eng":{"f":"Kazakhstani","m":"Kazakhstani"},"fra":{"f":"Kazakhstanaise","m":"Kazakhstanais"}}},{"name":{"common":"Kenya","official":"Republic of Kenya","native":{"eng":{"official":"Republic of Kenya","common":"Kenya"},"swa":{"official":"Republic of Kenya","common":"Kenya"}}},"tld":[".ke"],"cca2":"KE","ccn3":"404","cca3":"KEN","cioc":"KEN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KES":{"name":"Kenyan shilling","symbol":"Sh"}},"idd":{"root":"+2","suffixes":["54"]},"capital":["Nairobi"],"altSpellings":["KE","Republic of Kenya","Jamhuri ya Kenya"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English","swa":"Swahili"},"translations":{"ces":{"official":"Keňsk\xe1 republika","common":"Keňa"},"deu":{"official":"Republik Kenia","common":"Kenia"},"est":{"official":"Keenia Vabariik","common":"Keenia"},"fin":{"official":"Kenian tasavalta","common":"Kenia"},"fra":{"official":"R\xe9publique du Kenya","common":"Kenya"},"hrv":{"official":"Republika Kenija","common":"Kenija"},"hun":{"official":"Kenyai K\xf6zt\xe1rsas\xe1g","common":"Kenya"},"ita":{"official":"Repubblica del Kenya","common":"Kenya"},"jpn":{"official":"ケニア共和国","common":"ケニア"},"kor":{"official":"케냐 공화국","common":"케냐"},"nld":{"official":"Republiek Kenia","common":"Kenia"},"per":{"official":"جمهوری کنیا","common":"کنیا"},"pol":{"official":"Republika Kenii","common":"Kenia"},"por":{"official":"Rep\xfablica do Qu\xe9nia","common":"Qu\xe9nia"},"rus":{"official":"Республика Кения","common":"Кения"},"slk":{"official":"Kensk\xe1 republika","common":"Keňa"},"spa":{"official":"Rep\xfablica de Kenya","common":"Kenia"},"swe":{"official":"Republiken Kenya","common":"Kenya"},"urd":{"official":"جمہوریہ کینیا","common":"کینیا"},"zho":{"official":"肯尼亚共和国","common":"肯尼亚"}},"latlng":[1,38],"landlocked":false,"borders":["ETH","SOM","SSD","TZA","UGA"],"area":580367,"flag":"\uD83C\uDDF0\uD83C\uDDEA","demonyms":{"eng":{"f":"Kenyan","m":"Kenyan"},"fra":{"f":"K\xe9nyane","m":"K\xe9nyan"}}},{"name":{"common":"Kyrgyzstan","official":"Kyrgyz Republic","native":{"kir":{"official":"Кыргыз Республикасы","common":"Кыргызстан"},"rus":{"official":"Кыргызская Республика","common":"Киргизия"}}},"tld":[".kg"],"cca2":"KG","ccn3":"417","cca3":"KGZ","cioc":"KGZ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KGS":{"name":"Kyrgyzstani som","symbol":"с"}},"idd":{"root":"+9","suffixes":["96"]},"capital":["Bishkek"],"altSpellings":["KG","Киргизия","Kyrgyz Republic","Кыргыз Республикасы","Kyrgyz Respublikasy"],"region":"Asia","subregion":"Central Asia","languages":{"kir":"Kyrgyz","rus":"Russian"},"translations":{"ces":{"official":"Kyrgyzsk\xe1 republika","common":"Kyrgyzst\xe1n"},"deu":{"official":"Kirgisische Republik","common":"Kirgisistan"},"est":{"official":"Kirgiisi Vabariik","common":"K\xf5rg\xf5zstan"},"fin":{"official":"Kirgisian tasavalta","common":"Kirgisia"},"fra":{"official":"R\xe9publique kirghize","common":"Kirghizistan"},"hrv":{"official":"Kirgistanu","common":"Kirgistan"},"hun":{"official":"Kirgiz K\xf6zt\xe1rsas\xe1g","common":"Kirgiziszt\xe1n"},"ita":{"official":"Kirghizistan","common":"Kirghizistan"},"jpn":{"official":"キルギス共和国","common":"キルギス"},"kor":{"official":"키르기스 공화국","common":"키르기스스탄"},"nld":{"official":"Kirgizische Republiek","common":"Kirgizi\xeb"},"per":{"official":"جمهوری قِرقیزستان","common":"قرقیزستان"},"pol":{"official":"Republika Kirgiska","common":"Kirgistan"},"por":{"official":"Rep\xfablica do Quirguist\xe3o","common":"Quirguist\xe3o"},"rus":{"official":"Кыргызская Республика","common":"Киргизия"},"slk":{"official":"Kirgizsk\xe1 republika","common":"Kirgizsko"},"spa":{"official":"Rep\xfablica Kirguisa","common":"Kirguizist\xe1n"},"swe":{"official":"Republiken Kirgizistan","common":"Kirgizistan"},"urd":{"official":"جمہوریہ کرغیزستان","common":"کرغیزستان"},"zho":{"official":"吉尔吉斯斯坦共和国","common":"吉尔吉斯斯坦"}},"latlng":[41,75],"landlocked":true,"borders":["CHN","KAZ","TJK","UZB"],"area":199951,"flag":"\uD83C\uDDF0\uD83C\uDDEC","demonyms":{"eng":{"f":"Kirghiz","m":"Kirghiz"},"fra":{"f":"Kirghize","m":"Kirghize"}}},{"name":{"common":"Cambodia","official":"Kingdom of Cambodia","native":{"khm":{"official":"ព្រះរាជាណាចក្រកម្ពុជា","common":"K\xe2mpŭch\xe9a"}}},"tld":[".kh"],"cca2":"KH","ccn3":"116","cca3":"KHM","cioc":"CAM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KHR":{"name":"Cambodian riel","symbol":"៛"},"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+8","suffixes":["55"]},"capital":["Phnom Penh"],"altSpellings":["KH","Kingdom of Cambodia"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"khm":"Khmer"},"translations":{"ces":{"official":"Kambodžsk\xe9 kr\xe1lovstv\xed","common":"Kambodža"},"cym":{"official":"Teyrnas Cambodia","common":"Cambodia"},"deu":{"official":"K\xf6nigreich Kambodscha","common":"Kambodscha"},"est":{"official":"Kambodža Kuningriik","common":"Kambodža"},"fin":{"official":"Kambodžan kuningaskunta","common":"Kambodža"},"fra":{"official":"Royaume du Cambodge","common":"Cambodge"},"hrv":{"official":"Kraljevina Kambodža","common":"Kambodža"},"hun":{"official":"Kambodzsai Kir\xe1lys\xe1g","common":"Kambodzsa"},"ita":{"official":"Regno di Cambogia","common":"Cambogia"},"jpn":{"official":"カンボジア王国","common":"カンボジア"},"kor":{"official":"캄보디아 왕국","common":"캄보디아"},"nld":{"official":"Koninkrijk Cambodja","common":"Cambodja"},"per":{"official":"پادشاهی کامبوج","common":"کامبوج"},"pol":{"official":"Kr\xf3lestwo Kambodży","common":"Kambodża"},"por":{"official":"Reino do Camboja","common":"Camboja"},"rus":{"official":"Королевство Камбоджа","common":"Камбоджа"},"slk":{"official":"Kamboǆsk\xe9 kr\xe1ľovstvo","common":"Kamboǆa"},"spa":{"official":"Reino de Camboya","common":"Camboya"},"swe":{"official":"Konungariket Kambodja","common":"Kambodja"},"urd":{"official":"مملکتِ کمبوڈیا","common":"کمبوڈیا"},"zho":{"official":"柬埔寨王国","common":"柬埔寨"}},"latlng":[13,105],"landlocked":false,"borders":["LAO","THA","VNM"],"area":181035,"flag":"\uD83C\uDDF0\uD83C\uDDED","demonyms":{"eng":{"f":"Cambodian","m":"Cambodian"},"fra":{"f":"Cambodgienne","m":"Cambodgien"}}},{"name":{"common":"Kiribati","official":"Independent and Sovereign Republic of Kiribati","native":{"eng":{"official":"Independent and Sovereign Republic of Kiribati","common":"Kiribati"},"gil":{"official":"Ribaberiki Kiribati","common":"Kiribati"}}},"tld":[".ki"],"cca2":"KI","ccn3":"296","cca3":"KIR","cioc":"KIR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AUD":{"name":"Australian dollar","symbol":"$"},"KID":{"name":"Kiribati dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["86"]},"capital":["South Tarawa"],"altSpellings":["KI","Republic of Kiribati","Ribaberiki Kiribati"],"region":"Oceania","subregion":"Micronesia","languages":{"eng":"English","gil":"Gilbertese"},"translations":{"ces":{"official":"Republika Kiribati","common":"Kiribati"},"deu":{"official":"Republik Kiribati","common":"Kiribati"},"est":{"official":"Kiribati Vabariik","common":"Kiribati"},"fin":{"official":"Kiribatin tasavalta","common":"Kiribati"},"fra":{"official":"R\xe9publique de Kiribati","common":"Kiribati"},"hrv":{"official":"Samostalne i suverene Republike Kiribati","common":"Kiribati"},"hun":{"official":"Kiribati K\xf6zt\xe1rsas\xe1g","common":"Kiribati"},"ita":{"official":"Repubblica indipendente e sovrano di Kiribati","common":"Kiribati"},"jpn":{"official":"キリバスの独立と主権共和国","common":"キリバス"},"kor":{"official":"키리바시 공화국","common":"키리바시"},"nld":{"official":"Onafhankelijke en soevereine republiek Kiribati","common":"Kiribati"},"per":{"official":"جمهوری کیریباتی","common":"کیریباتی"},"pol":{"official":"Republika Kiribati","common":"Kiribati"},"por":{"official":"Independente e soberano Rep\xfablica de Kiribati","common":"Kiribati"},"rus":{"official":"Независимой и суверенной Республики Кирибати","common":"Кирибати"},"slk":{"official":"Kiribatsk\xe1 republika","common":"Kiribati"},"spa":{"official":"Rep\xfablica Independiente y Soberano de Kiribati","common":"Kiribati"},"swe":{"official":"Republiken Kiribati","common":"Kiribati"},"urd":{"official":"سلطنت آزاد جمہوریہ کیریباتی","common":"کیریباتی"},"zho":{"official":"基里巴斯共和国","common":"基里巴斯"}},"latlng":[1.41666666,173],"landlocked":false,"borders":[],"area":811,"flag":"\uD83C\uDDF0\uD83C\uDDEE","demonyms":{"eng":{"f":"I-Kiribati","m":"I-Kiribati"},"fra":{"f":"Kiribatienne","m":"Kiribatien"}}},{"name":{"common":"Saint Kitts and Nevis","official":"Federation of Saint Christopher and Nevis","native":{"eng":{"official":"Federation of Saint Christopher and Nevis","common":"Saint Kitts and Nevis"}}},"tld":[".kn"],"cca2":"KN","ccn3":"659","cca3":"KNA","cioc":"SKN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["869"]},"capital":["Basseterre"],"altSpellings":["KN","Federation of Saint Christopher and Nevis"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Federace Sv. Kryštof a Nevis","common":"Svat\xfd Kryštof a Nevis"},"deu":{"official":"F\xf6deration von St. Kitts und Nevis","common":"St. Kitts und Nevis"},"est":{"official":"Saint Kittsi ja Nevise F\xf6deratsioon","common":"Saint Kitts ja Nevis"},"fin":{"official":"Saint Christopherin ja Nevisin federaatio","common":"Saint Kitts ja Nevis"},"fra":{"official":"F\xe9d\xe9ration de Saint-Christophe-et-Ni\xe9v\xe8s","common":"Saint-Christophe-et-Ni\xe9v\xe8s"},"hrv":{"official":"Federacija Sv.Kristofora i Nevisa","common":"Sveti Kristof i Nevis"},"hun":{"official":"Saint Christopher \xe9s Nevis \xc1llamsz\xf6vets\xe9g","common":"Saint Kitts \xe9s Nevis"},"ita":{"official":"Federazione di Saint Christopher e Nevis","common":"Saint Kitts e Nevis"},"jpn":{"official":"セントクリストファーNevis連盟","common":"セントクリストファー・ネイビス"},"kor":{"official":"세인트키츠 네비스 연방","common":"세인트키츠 네비스"},"nld":{"official":"Federatie van Saint Kitts en Nevis","common":"Saint Kitts en Nevis"},"per":{"official":"فدراسیون سنت کیتس و نویس","common":"سنت کیتس و نویس"},"pol":{"official":"Federacja Saint Kitts i Nevis","common":"Saint Kitts i Nevis"},"por":{"official":"Federa\xe7\xe3o de S\xe3o Crist\xf3v\xe3o e Nevis","common":"S\xe3o Crist\xf3v\xe3o e Nevis"},"rus":{"official":"Федерация Сент-Кристофер и Н е в и с","common":"Сент-Китс и Невис"},"slk":{"official":"Feder໡cia Sv\xe4t\xe9ho Krištofa a Nevisu","common":"Sv\xe4t\xfd Krištof a Nevis"},"spa":{"official":"Federaci\xf3n de San Crist\xf3bal y Nevis","common":"San Crist\xf3bal y Nieves"},"swe":{"official":"Federationen Saint Kitts och Nevis","common":"Saint Kitts och Nevis"},"urd":{"official":"وفاقِ سینٹ کیٹز و ناویس","common":"سینٹ کیٹز و ناویس"},"zho":{"official":"圣克里斯托弗和尼维斯联邦","common":"圣基茨和尼维斯"}},"latlng":[17.33333333,-62.75],"landlocked":false,"borders":[],"area":261,"flag":"\uD83C\uDDF0\uD83C\uDDF3","demonyms":{"eng":{"f":"Kittitian or Nevisian","m":"Kittitian or Nevisian"},"fra":{"f":"Kittitienne-et-nevicienne","m":"Kittitien-et-nevicien"}}},{"name":{"common":"South Korea","official":"Republic of Korea","native":{"kor":{"official":"대한민국","common":"한국"}}},"tld":[".kr",".한국"],"cca2":"KR","ccn3":"410","cca3":"KOR","cioc":"KOR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KRW":{"name":"South Korean won","symbol":"₩"}},"idd":{"root":"+8","suffixes":["2"]},"capital":["Seoul"],"altSpellings":["KR","Korea, Republic of","Republic of Korea","남한","남조선"],"region":"Asia","subregion":"Eastern Asia","languages":{"kor":"Korean"},"translations":{"ces":{"official":"Korejsk\xe1 republika","common":"Jižn\xed Korea"},"deu":{"official":"Republik Korea","common":"S\xfcdkorea"},"est":{"official":"Korea Vabariik","common":"L\xf5una-Korea"},"fin":{"official":"Korean tasavalta","common":"Etel\xe4-Korea"},"fra":{"official":"R\xe9publique de Cor\xe9e","common":"Cor\xe9e du Sud"},"hrv":{"official":"Republika Koreja","common":"Južna Koreja"},"hun":{"official":"Koreai K\xf6zt\xe1rsas\xe1g","common":"D\xe9l-Korea"},"ita":{"official":"Repubblica di Corea","common":"Corea del Sud"},"jpn":{"official":"大韓民国","common":"韓国"},"kor":{"official":"대한민국","common":"한국"},"nld":{"official":"Republiek Korea","common":"Zuid-Korea"},"per":{"official":"جمهوری کره","common":"کرهٔ جنوبی"},"pol":{"official":"Republika Korei","common":"Korea Południowa"},"por":{"official":"Rep\xfablica da Coreia","common":"Coreia do Sul"},"rus":{"official":"Республика Корея","common":"Южная Корея"},"slk":{"official":"K\xf3rejsk\xe1 republika","common":"Južn\xe1 K\xf3rea"},"spa":{"official":"Rep\xfablica de Corea","common":"Corea del Sur"},"swe":{"official":"Republiken Korea","common":"Sydkorea"},"urd":{"official":"جمہوریہ کوریا ","common":"جنوبی کوریا"},"zho":{"official":"大韩民国","common":"韩国"}},"latlng":[37,127.5],"landlocked":false,"borders":["PRK"],"area":100210,"flag":"\uD83C\uDDF0\uD83C\uDDF7","demonyms":{"eng":{"f":"South Korean","m":"South Korean"},"fra":{"f":"Sud-cor\xe9enne","m":"Sud-cor\xe9en"}}},{"name":{"common":"Kosovo","official":"Republic of Kosovo","native":{"sqi":{"official":"Republika e Kosov\xebs","common":"Kosova"},"srp":{"official":"Република Косово","common":"Косово"}}},"tld":[".xk"],"cca2":"XK","ccn3":"","cca3":"UNK","cioc":"KOS","independent":null,"status":"user-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["83"]},"capital":["Pristina"],"altSpellings":["XK","Република Косово"],"region":"Europe","subregion":"Southeast Europe","languages":{"sqi":"Albanian","srp":"Serbian"},"translations":{"ces":{"official":"Kosovsk\xe1 republika","common":"Kosovo"},"deu":{"official":"Republik Kosovo","common":"Kosovo"},"est":{"official":"Kosovo Vabariik","common":"Kosovo"},"fin":{"official":"Kosovon tasavalta","common":"Kosovo"},"fra":{"official":"R\xe9publique du Kosovo","common":"Kosovo"},"hrv":{"official":"Republika Kosovo","common":"Kosovo"},"hun":{"official":"Koszov\xf3","common":"Koszov\xf3"},"ita":{"official":"Repubblica del Kosovo","common":"Kosovo"},"kor":{"official":"코소보 공화국","common":"코소보"},"nld":{"official":"Republiek Kosovo","common":"Kosovo"},"per":{"official":"جمهوری کوزوو","common":"کوزوو"},"pol":{"official":"Republika Kosowa","common":"Kosowo"},"por":{"official":"Rep\xfablica do Kosovo","common":"Kosovo"},"rus":{"official":"Республика Косово","common":"Республика Косово"},"slk":{"official":"Republika Kosovo","common":"Kosovo"},"spa":{"official":"Rep\xfablica de Kosovo","common":"Kosovo"},"swe":{"official":"Republiken Kosovo","common":"Kosovo"},"urd":{"official":"جمہوریہ کوسووہ","common":"کوسووہ"},"zho":{"official":"科索沃共和国","common":"科索沃"}},"latlng":[42.666667,21.166667],"landlocked":true,"borders":["ALB","MKD","MNE","SRB"],"area":10908,"flag":"\uD83C\uDDFD\uD83C\uDDF0","demonyms":{"eng":{"f":"Kosovar","m":"Kosovar"},"fra":{"f":"Kosovare","m":"Kosovar"}}},{"name":{"common":"Kuwait","official":"State of Kuwait","native":{"ara":{"official":"دولة الكويت","common":"الكويت"}}},"tld":[".kw"],"cca2":"KW","ccn3":"414","cca3":"KWT","cioc":"KUW","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KWD":{"name":"Kuwaiti dinar","symbol":"د.ك"}},"idd":{"root":"+9","suffixes":["65"]},"capital":["Kuwait City"],"altSpellings":["KW","State of Kuwait","Dawlat al-Kuwait"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"St\xe1t Kuvajt","common":"Kuvajt"},"deu":{"official":"Staat Kuwait","common":"Kuwait"},"est":{"official":"Kuveidi Riik","common":"Kuveit"},"fin":{"official":"Kuwaitin valtio","common":"Kuwait"},"fra":{"official":"\xc9tat du Kowe\xeft","common":"Kowe\xeft"},"hrv":{"official":"Država Kuvajt","common":"Kuvajt"},"hun":{"official":"Kuvaiti \xc1llam","common":"Kuvait"},"ita":{"official":"Stato del Kuwait","common":"Kuwait"},"jpn":{"official":"クウェート国","common":"クウェート"},"kor":{"official":"쿠웨이트국","common":"쿠웨이트"},"nld":{"official":"Staat Koeweit","common":"Koeweit"},"per":{"official":"دولت کویت","common":"کُویت"},"pol":{"official":"Państwo Kuwejt","common":"Kuwejt"},"por":{"official":"Estado do Kuwait","common":"Kuwait"},"rus":{"official":"Государство Кувейт","common":"Кувейт"},"slk":{"official":"Kuvajtsk\xfd št\xe1t","common":"Kuvajt"},"spa":{"official":"Estado de Kuwait","common":"Kuwait"},"swe":{"official":"Staten Kuwait","common":"Kuwait"},"urd":{"official":"دولتِ کویت","common":"کویت"},"zho":{"official":"科威特国","common":"科威特"}},"latlng":[29.5,45.75],"landlocked":false,"borders":["IRQ","SAU"],"area":17818,"flag":"\uD83C\uDDF0\uD83C\uDDFC","demonyms":{"eng":{"f":"Kuwaiti","m":"Kuwaiti"},"fra":{"f":"Kowe\xeftienne","m":"Kowe\xeftien"}}},{"name":{"common":"Laos","official":"Lao People\'s Democratic Republic","native":{"lao":{"official":"ສາທາລະນະ ຊາທິປະໄຕ ຄົນລາວ ຂອງ","common":"ສປປລາວ"}}},"tld":[".la"],"cca2":"LA","ccn3":"418","cca3":"LAO","cioc":"LAO","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"LAK":{"name":"Lao kip","symbol":"₭"}},"idd":{"root":"+8","suffixes":["56"]},"capital":["Vientiane"],"altSpellings":["LA","Lao","Lao People\'s Democratic Republic","Sathalanalat Paxathipatai Paxaxon Lao"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"lao":"Lao"},"translations":{"ces":{"official":"Laosk\xe1 lidově demokratick\xe1 republika","common":"Laos"},"deu":{"official":"Demokratische Volksrepublik Laos","common":"Laos"},"est":{"official":"Laose Demokraatlik Rahvavabariik","common":"Laos"},"fin":{"official":"Laosin demokraattinen kansantasavalta","common":"Laos"},"fra":{"official":"R\xe9publique d\xe9mocratique populaire lao","common":"Laos"},"hrv":{"official":"Narodna Demokratska Republika","common":"Laos"},"hun":{"official":"Laoszi N\xe9pi Demokratikus K\xf6zt\xe1rsas\xe1g","common":"Laosz"},"ita":{"official":"Repubblica democratica popolare del Laos","common":"Laos"},"jpn":{"official":"ラオス人民民主共和国","common":"ラオス人民民主共和国"},"kor":{"official":"라오 인민 민주 공화국","common":"라오스"},"nld":{"official":"Lao Democratische Volksrepubliek","common":"Laos"},"per":{"official":"جمهوری دموکراتیک خلق لائوس","common":"لائوس"},"pol":{"official":"Laotańska Republika Ludowo-Demokratyczna","common":"Laos"},"por":{"official":"Laos, Rep\xfablica Democr\xe1tica","common":"Laos"},"rus":{"official":"Лаосская Народно-Демократическая Республика","common":"Лаос"},"slk":{"official":"Laosk\xe1 ľudovodemokratick\xe1 republika","common":"Laos"},"spa":{"official":"Rep\xfablica Democr\xe1tica Popular Lao","common":"Laos"},"swe":{"official":"Demokratiska folkrepubliken Laos","common":"Laos"},"urd":{"official":"عوامی جمہوری جمہوریہ لاؤ","common":"لاؤس"},"zho":{"official":"老挝人民民主共和国","common":"老挝"}},"latlng":[18,105],"landlocked":true,"borders":["MMR","KHM","CHN","THA","VNM"],"area":236800,"flag":"\uD83C\uDDF1\uD83C\uDDE6","demonyms":{"eng":{"f":"Laotian","m":"Laotian"},"fra":{"f":"Laotienne","m":"Laotien"}}},{"name":{"common":"Lebanon","official":"Lebanese Republic","native":{"ara":{"official":"الجمهورية اللبنانية","common":"لبنان"},"fra":{"official":"R\xe9publique libanaise","common":"Liban"}}},"tld":[".lb"],"cca2":"LB","ccn3":"422","cca3":"LBN","cioc":"LBN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"LBP":{"name":"Lebanese pound","symbol":"ل.ل"}},"idd":{"root":"+9","suffixes":["61"]},"capital":["Beirut"],"altSpellings":["LB","Lebanese Republic","Al-Jumhūrīyah Al-Libnānīyah"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic","fra":"French"},"translations":{"ces":{"official":"Libanonsk\xe1 republika","common":"Libanon"},"deu":{"official":"Libanesische Republik","common":"Libanon"},"est":{"official":"Liibanoni Vabariik","common":"Liibanon"},"fin":{"official":"Libanonin tasavalta","common":"Libanon"},"fra":{"official":"R\xe9publique libanaise","common":"Liban"},"hrv":{"official":"Libanonska Republika","common":"Libanon"},"hun":{"official":"Libanoni K\xf6zt\xe1rsas\xe1g","common":"Libanon"},"ita":{"official":"Repubblica libanese","common":"Libano"},"jpn":{"official":"レバノン共和国","common":"レバノン"},"kor":{"official":"레바논 공화국","common":"레바논"},"nld":{"official":"Libanese Republiek","common":"Libanon"},"per":{"official":"جمهوری لبنان","common":"لبنان"},"pol":{"official":"Republika Libańska","common":"Liban"},"por":{"official":"Rep\xfablica Libanesa","common":"L\xedbano"},"rus":{"official":"Ливанская Республика","common":"Ливан"},"slk":{"official":"Libanonsk\xe1 republika","common":"Libanon"},"spa":{"official":"Rep\xfablica Libanesa","common":"L\xedbano"},"swe":{"official":"Republiken Libanon","common":"Libanon"},"urd":{"official":"جمہوریہ لبنان","common":"لبنان"},"zho":{"official":"黎巴嫩共和国","common":"黎巴嫩"}},"latlng":[33.83333333,35.83333333],"landlocked":false,"borders":["ISR","SYR"],"area":10452,"flag":"\uD83C\uDDF1\uD83C\uDDE7","demonyms":{"eng":{"f":"Lebanese","m":"Lebanese"},"fra":{"f":"Libanaise","m":"Libanais"}}},{"name":{"common":"Liberia","official":"Republic of Liberia","native":{"eng":{"official":"Republic of Liberia","common":"Liberia"}}},"tld":[".lr"],"cca2":"LR","ccn3":"430","cca3":"LBR","cioc":"LBR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"LRD":{"name":"Liberian dollar","symbol":"$"}},"idd":{"root":"+2","suffixes":["31"]},"capital":["Monrovia"],"altSpellings":["LR","Republic of Liberia"],"region":"Africa","subregion":"Western Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Liberijsk\xe1 republika","common":"Lib\xe9rie"},"deu":{"official":"Republik Liberia","common":"Liberia"},"est":{"official":"Libeeria Vabariik","common":"Libeeria"},"fin":{"official":"Liberian tasavalta","common":"Liberia"},"fra":{"official":"R\xe9publique du Lib\xe9ria","common":"Liberia"},"hrv":{"official":"Republika Liberija","common":"Liberija"},"hun":{"official":"Lib\xe9riai K\xf6zt\xe1rsas\xe1g","common":"Lib\xe9ria"},"ita":{"official":"Repubblica di Liberia","common":"Liberia"},"jpn":{"official":"リベリア共和国","common":"リベリア"},"kor":{"official":"라이베리아 공화국","common":"라이베리아"},"nld":{"official":"Republiek Liberia","common":"Liberia"},"per":{"official":"جمهوری لیبریا","common":"لیبـِریا"},"pol":{"official":"Republika Liberii","common":"Liberia"},"por":{"official":"Rep\xfablica da Lib\xe9ria","common":"Lib\xe9ria"},"rus":{"official":"Республика Либерия","common":"Либерия"},"slk":{"official":"Lib\xe9rijsk\xe1 republika","common":"Lib\xe9ria"},"spa":{"official":"Rep\xfablica de Liberia","common":"Liberia"},"swe":{"official":"Republiken Liberia","common":"Liberia"},"urd":{"official":"جمہوریہ لائبیریا","common":"لائبیریا"},"zho":{"official":"利比里亚共和国","common":"利比里亚"}},"latlng":[6.5,-9.5],"landlocked":false,"borders":["GIN","CIV","SLE"],"area":111369,"flag":"\uD83C\uDDF1\uD83C\uDDF7","demonyms":{"eng":{"f":"Liberian","m":"Liberian"},"fra":{"f":"Lib\xe9rienne","m":"Lib\xe9rien"}}},{"name":{"common":"Libya","official":"State of Libya","native":{"ara":{"official":"الدولة ليبيا","common":"‏ليبيا"}}},"tld":[".ly"],"cca2":"LY","ccn3":"434","cca3":"LBY","cioc":"LBA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"LYD":{"name":"Libyan dinar","symbol":"ل.د"}},"idd":{"root":"+2","suffixes":["18"]},"capital":["Tripoli"],"altSpellings":["LY","State of Libya","Dawlat Libya"],"region":"Africa","subregion":"Northern Africa","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"St\xe1t Libye","common":"Libye"},"deu":{"official":"Staat Libyen","common":"Libyen"},"est":{"official":"Liib\xfca","common":"Liib\xfca"},"fin":{"official":"Libyan valtio","common":"Libya"},"fra":{"official":"Grande R\xe9publique arabe libyenne populaire et socialiste","common":"Libye"},"hrv":{"official":"Država Libiji","common":"Libija"},"hun":{"official":"L\xedbia \xc1llam","common":"L\xedbia"},"ita":{"official":"Stato della Libia","common":"Libia"},"jpn":{"official":"リビアの国家","common":"リビア"},"kor":{"official":"리비아","common":"리비아"},"nld":{"official":"Staat van Libi\xeb","common":"Libi\xeb"},"per":{"official":"دولت لیبی","common":"لیبی"},"pol":{"official":"Państwo Libia","common":"Libia"},"por":{"official":"Estado da L\xedbia","common":"L\xedbia"},"rus":{"official":"Государство Ливии","common":"Ливия"},"slk":{"official":"L\xedbya","common":"L\xedbya"},"spa":{"official":"Estado de Libia","common":"Libia"},"swe":{"official":"Staten Libyen","common":"Libyen"},"urd":{"official":"ریاستِ لیبیا","common":"لیبیا"},"zho":{"official":"利比亚国","common":"利比亚"}},"latlng":[25,17],"landlocked":false,"borders":["DZA","TCD","EGY","NER","SDN","TUN"],"area":1759540,"flag":"\uD83C\uDDF1\uD83C\uDDFE","demonyms":{"eng":{"f":"Libyan","m":"Libyan"},"fra":{"f":"Libyenne","m":"Libyen"}}},{"name":{"common":"Saint Lucia","official":"Saint Lucia","native":{"eng":{"official":"Saint Lucia","common":"Saint Lucia"}}},"tld":[".lc"],"cca2":"LC","ccn3":"662","cca3":"LCA","cioc":"LCA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["758"]},"capital":["Castries"],"altSpellings":["LC"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Svat\xe1 Lucie","common":"Svat\xe1 Lucie"},"deu":{"official":"St. Lucia","common":"St. Lucia"},"est":{"official":"Saint Lucia","common":"Saint Lucia"},"fin":{"official":"Saint Lucia","common":"Saint Lucia"},"fra":{"official":"Sainte-Lucie","common":"Sainte-Lucie"},"hrv":{"official":"Sveta Lucija","common":"Sveta Lucija"},"hun":{"official":"Saint Lucia","common":"Saint Lucia"},"ita":{"official":"Santa Lucia","common":"Santa Lucia"},"jpn":{"official":"セントルシア","common":"セントルシア"},"kor":{"official":"세인트루시아","common":"세인트루시아"},"nld":{"official":"Saint Lucia","common":"Saint Lucia"},"per":{"official":"سنت لوسیا","common":"سنت لوسیا"},"pol":{"official":"Saint Lucia","common":"Saint Lucia"},"por":{"official":"Santa L\xfacia","common":"Santa L\xfacia"},"rus":{"official":"Сент-Люсия","common":"Сент-Люсия"},"slk":{"official":"Sv\xe4t\xe1 Lucia","common":"Sv\xe4t\xe1 Lucia"},"spa":{"official":"Santa Luc\xeda","common":"Santa Luc\xeda"},"swe":{"official":"Saint Lucia","common":"Saint Lucia"},"urd":{"official":"سینٹ لوسیا","common":"سینٹ لوسیا"},"zho":{"official":"圣卢西亚","common":"圣卢西亚"}},"latlng":[13.88333333,-60.96666666],"landlocked":false,"borders":[],"area":616,"flag":"\uD83C\uDDF1\uD83C\uDDE8","demonyms":{"eng":{"f":"Saint Lucian","m":"Saint Lucian"},"fra":{"f":"Saint-Lucienne","m":"Saint-Lucien"}}},{"name":{"common":"Liechtenstein","official":"Principality of Liechtenstein","native":{"deu":{"official":"F\xfcrstentum Liechtenstein","common":"Liechtenstein"}}},"tld":[".li"],"cca2":"LI","ccn3":"438","cca3":"LIE","cioc":"LIE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"CHF":{"name":"Swiss franc","symbol":"Fr"}},"idd":{"root":"+4","suffixes":["23"]},"capital":["Vaduz"],"altSpellings":["LI","Principality of Liechtenstein","F\xfcrstentum Liechtenstein"],"region":"Europe","subregion":"Western Europe","languages":{"deu":"German"},"translations":{"ces":{"official":"Kn\xedžectv\xed Lichtenštejnsk\xe9","common":"Lichtenštejnsko"},"deu":{"official":"F\xfcrstentum Liechtenstein","common":"Liechtenstein"},"est":{"official":"Liechtensteini V\xfcrstiriik","common":"Liechtenstein"},"fin":{"official":"Liechensteinin ruhtinaskunta","common":"Liechenstein"},"fra":{"official":"Principaut\xe9 du Liechtenstein","common":"Liechtenstein"},"hrv":{"official":"Kneževina Lihtenštajn","common":"Lihtenštajn"},"hun":{"official":"Liechtensteini Hercegs\xe9g","common":"Liechtenstein"},"ita":{"official":"Principato del Liechtenstein","common":"Liechtenstein"},"jpn":{"official":"リヒテンシュタイン公国","common":"リヒテンシュタイン"},"kor":{"official":"리히텐슈타인 공국","common":"리히텐슈타인"},"nld":{"official":"Vorstendom Liechtenstein","common":"Liechtenstein"},"per":{"official":"شاهزاده‌نشین لیختن‌اشتاین","common":"لیختن‌اشتاین"},"pol":{"official":"Księstwo Liechtensteinu","common":"Liechtenstein"},"por":{"official":"Principado de Liechtenstein","common":"Liechtenstein"},"rus":{"official":"Княжество Лихтенштейн","common":"Лихтенштейн"},"slk":{"official":"Lichtenštajnsk\xe9 kniežatstvo","common":"Lichtenštajnsko"},"spa":{"official":"Principado de Liechtenstein","common":"Liechtenstein"},"swe":{"official":"Furstend\xf6met Liechtenstein","common":"Liechtenstein"},"urd":{"official":"امارات لیختینستائن","common":"لیختینستائن"},"zho":{"official":"列支敦士登公国","common":"列支敦士登"}},"latlng":[47.26666666,9.53333333],"landlocked":true,"borders":["AUT","CHE"],"area":160,"flag":"\uD83C\uDDF1\uD83C\uDDEE","demonyms":{"eng":{"f":"Liechtensteiner","m":"Liechtensteiner"},"fra":{"f":"Liechtensteinoise","m":"Liechtensteinois"}}},{"name":{"common":"Sri Lanka","official":"Democratic Socialist Republic of Sri Lanka","native":{"sin":{"official":"ශ්‍රී ලංකා ප්‍රජාතාන්ත්‍රික සමාජවාදී ජනරජය","common":"ශ්‍රී ලංකාව"},"tam":{"official":"இலங்கை சனநாயக சோசலிசக் குடியரசு","common":"இலங்கை"}}},"tld":[".lk",".இலங்கை",".ලංකා"],"cca2":"LK","ccn3":"144","cca3":"LKA","cioc":"SRI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"LKR":{"name":"Sri Lankan rupee","symbol":"Rs  රු"}},"idd":{"root":"+9","suffixes":["4"]},"capital":["Colombo"],"altSpellings":["LK","ilaṅkai","Democratic Socialist Republic of Sri Lanka"],"region":"Asia","subregion":"Southern Asia","languages":{"sin":"Sinhala","tam":"Tamil"},"translations":{"ces":{"official":"Sr\xedlansk\xe1 demokratick\xe1 socialistick\xe1 republika","common":"Sr\xed Lanka"},"deu":{"official":"Demokratische Sozialistische Republik Sri Lanka","common":"Sri Lanka"},"est":{"official":"Sri Lanka Demokraatlik Sotsialistlik Vabariik","common":"Sri Lanka"},"fin":{"official":"Sri Lankan demokraattinen sosialistinen tasavalta","common":"Sri Lanka"},"fra":{"official":"R\xe9publique d\xe9mocratique socialiste du Sri Lanka","common":"Sri Lanka"},"hrv":{"official":"Demokratska Socijalističke Republike Šri Lanke","common":"Šri Lanka"},"hun":{"official":"Sr\xed Lanka-i Demokratikus Szocialista K\xf6zt\xe1rsas\xe1g","common":"Sr\xed Lanka"},"ita":{"official":"Repubblica democratica socialista dello Sri Lanka","common":"Sri Lanka"},"jpn":{"official":"スリランカ民主社会主義共和国","common":"スリランカ"},"kor":{"official":"스리랑카 민주 사회주의 공화국","common":"스리랑카"},"nld":{"official":"Democratische Socialistische Republiek Sri Lanka","common":"Sri Lanka"},"per":{"official":"جمهوری دموکراتیک سوسیالیستی سری‌لانکا","common":"سری‌لانکا"},"pol":{"official":"Demokratyczno-Socjalistyczna Republika Sri Lanki","common":"Sri Lanka"},"por":{"official":"Rep\xfablica Democr\xe1tica Socialista do Sri Lanka","common":"Sri Lanka"},"rus":{"official":"Демократическая Социалистическая Республика Шри-Ланка","common":"Шри-Ланка"},"slk":{"official":"Sr\xedlansk\xe1 demokratick\xe1 socialistick\xe1 republika","common":"Sr\xed Lanka"},"spa":{"official":"Rep\xfablica Democr\xe1tica Socialista de Sri Lanka","common":"Sri Lanka"},"swe":{"official":"Demokratiska socialistiska republiken Sri Lanka","common":"Sri Lanka"},"urd":{"official":"جمہوری و اشتراکی جمہوریہ سری لنکا","common":"سری لنکا"},"zho":{"official":"斯里兰卡民主社会主义共和国","common":"斯里兰卡"}},"latlng":[7,81],"landlocked":false,"borders":["IND"],"area":65610,"flag":"\uD83C\uDDF1\uD83C\uDDF0","demonyms":{"eng":{"f":"Sri Lankan","m":"Sri Lankan"},"fra":{"f":"Sri-lankaise","m":"Sri-lankais"}}},{"name":{"common":"Lesotho","official":"Kingdom of Lesotho","native":{"eng":{"official":"Kingdom of Lesotho","common":"Lesotho"},"sot":{"official":"Kingdom of Lesotho","common":"Lesotho"}}},"tld":[".ls"],"cca2":"LS","ccn3":"426","cca3":"LSO","cioc":"LES","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"LSL":{"name":"Lesotho loti","symbol":"L"},"ZAR":{"name":"South African rand","symbol":"R"}},"idd":{"root":"+2","suffixes":["66"]},"capital":["Maseru"],"altSpellings":["LS","Kingdom of Lesotho","Muso oa Lesotho"],"region":"Africa","subregion":"Southern Africa","languages":{"eng":"English","sot":"Sotho"},"translations":{"ces":{"official":"Lesothsk\xe9 kr\xe1lovstv\xed","common":"Lesotho"},"deu":{"official":"K\xf6nigreich Lesotho","common":"Lesotho"},"est":{"official":"Lesotho Kuningriik","common":"Lesotho"},"fin":{"official":"Lesothon kuningaskunta","common":"Lesotho"},"fra":{"official":"Royaume du Lesotho","common":"Lesotho"},"hrv":{"official":"Kraljevina Lesoto","common":"Lesoto"},"hun":{"official":"Lesoth\xf3i Kir\xe1lys\xe1g","common":"Lesotho"},"ita":{"official":"Regno del Lesotho","common":"Lesotho"},"jpn":{"official":"レソト王国","common":"レソト"},"kor":{"official":"레소토 왕국","common":"레소토"},"nld":{"official":"Koninkrijk Lesotho","common":"Lesotho"},"per":{"official":"پادشاهی لسوتو","common":"لسوتو"},"pol":{"official":"Kr\xf3lestwo Lesotho","common":"Lesotho"},"por":{"official":"Reino do Lesoto","common":"Lesoto"},"rus":{"official":"Королевство Лесото","common":"Лесото"},"slk":{"official":"Lesothsk\xe9 kr\xe1ľovstvo","common":"Lesotho"},"spa":{"official":"Reino de Lesotho","common":"Lesotho"},"swe":{"official":"Konungariket Lesotho","common":"Lesotho"},"urd":{"official":"مملکتِ لیسوتھو","common":"لیسوتھو"},"zho":{"official":"莱索托王国","common":"莱索托"}},"latlng":[-29.5,28.5],"landlocked":true,"borders":["ZAF"],"area":30355,"flag":"\uD83C\uDDF1\uD83C\uDDF8","demonyms":{"eng":{"f":"Mosotho","m":"Mosotho"},"fra":{"f":"L\xe9sothienne","m":"L\xe9sothien"}}},{"name":{"common":"Lithuania","official":"Republic of Lithuania","native":{"lit":{"official":"Lietuvos Respublikos","common":"Lietuva"}}},"tld":[".lt"],"cca2":"LT","ccn3":"440","cca3":"LTU","cioc":"LTU","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["70"]},"capital":["Vilnius"],"altSpellings":["LT","Republic of Lithuania","Lietuvos Respublika"],"region":"Europe","subregion":"Northern Europe","languages":{"lit":"Lithuanian"},"translations":{"ces":{"official":"Litevsk\xe1 republika","common":"Litva"},"deu":{"official":"Republik Litauen","common":"Litauen"},"est":{"official":"Leedu Vabariik","common":"Leedu"},"fin":{"official":"Liettuan tasavalta","common":"Liettua"},"fra":{"official":"R\xe9publique de Lituanie","common":"Lituanie"},"hrv":{"official":"Republika Litva","common":"Litva"},"hun":{"official":"Litv\xe1n K\xf6zt\xe1rsas\xe1g","common":"Litv\xe1nia"},"ita":{"official":"Repubblica di Lituania","common":"Lituania"},"jpn":{"official":"リトアニア共和国","common":"リトアニア"},"kor":{"official":"리투아니아 공화국","common":"리투아니아"},"nld":{"official":"Republiek Litouwen","common":"Litouwen"},"per":{"official":"لیتوانیایی‌ها","common":"لیتوانیایی‌ها"},"pol":{"official":"Republika Litewska","common":"Litwa"},"por":{"official":"Rep\xfablica da Litu\xe2nia","common":"Litu\xe2nia"},"rus":{"official":"Литовская Республика","common":"Литва"},"slk":{"official":"Litovsk\xe1 republika","common":"Litva"},"spa":{"official":"Rep\xfablica de Lituania","common":"Lituania"},"swe":{"official":"Republiken Litauen","common":"Litauen"},"urd":{"official":"جمہوریہ لتھووینیا","common":"لتھووینیا"},"zho":{"official":"立陶宛共和国","common":"立陶宛"}},"latlng":[56,24],"landlocked":false,"borders":["BLR","LVA","POL","RUS"],"area":65300,"flag":"\uD83C\uDDF1\uD83C\uDDF9","demonyms":{"eng":{"f":"Lithuanian","m":"Lithuanian"},"fra":{"f":"Lituanienne","m":"Lituanien"}}},{"name":{"common":"Luxembourg","official":"Grand Duchy of Luxembourg","native":{"deu":{"official":"Gro\xdfherzogtum Luxemburg","common":"Luxemburg"},"fra":{"official":"Grand-Duch\xe9 de Luxembourg","common":"Luxembourg"},"ltz":{"official":"Groussherzogtum L\xebtzebuerg","common":"L\xebtzebuerg"}}},"tld":[".lu"],"cca2":"LU","ccn3":"442","cca3":"LUX","cioc":"LUX","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["52"]},"capital":["Luxembourg"],"altSpellings":["LU","Grand Duchy of Luxembourg","Grand-Duch\xe9 de Luxembourg","Gro\xdfherzogtum Luxemburg","Groussherzogtum L\xebtzebuerg"],"region":"Europe","subregion":"Western Europe","languages":{"deu":"German","fra":"French","ltz":"Luxembourgish"},"translations":{"ces":{"official":"Lucembursk\xe9 velkov\xe9vodstv\xed","common":"Lucembursko"},"deu":{"official":"Gro\xdfherzogtum Luxemburg,","common":"Luxemburg"},"est":{"official":"Luksemburgi Suurhertsogiriik","common":"Luksemburg"},"fin":{"official":"Luxemburgin suurherttuakunta","common":"Luxemburg"},"fra":{"official":"Grand-Duch\xe9 de Luxembourg","common":"Luxembourg"},"hrv":{"official":"Veliko Vojvodstvo Luksemburg","common":"Luksemburg"},"hun":{"official":"Luxemburgi Nagyhercegs\xe9g","common":"Luxemburg"},"ita":{"official":"Granducato di Lussemburgo","common":"Lussemburgo"},"jpn":{"official":"ルクセンブルク大公国","common":"ルクセンブルク"},"kor":{"official":"룩셈부르크 대공국","common":"룩셈부르크"},"nld":{"official":"Groothertogdom Luxemburg","common":"Luxemburg"},"per":{"official":"دوک‌نشین لوکزامبورگ","common":"لوکزامبورگ"},"pol":{"official":"Wielkie Księstwo Luksemburga","common":"Luksemburg"},"por":{"official":"Gr\xe3o-Ducado do Luxemburgo","common":"Luxemburgo"},"rus":{"official":"Великое Герцогство Люксембург","common":"Люксембург"},"slk":{"official":"Luxembursk\xe9 veľkovojvodstvo","common":"Luxembursko"},"spa":{"official":"Gran Ducado de Luxemburgo","common":"Luxemburgo"},"swe":{"official":"Storhertigd\xf6met Luxemburg","common":"Luxemburg"},"urd":{"official":"دوقیہ کبیرلکسمبرگ","common":"لکسمبرگ"},"zho":{"official":"卢森堡大公国","common":"卢森堡"}},"latlng":[49.75,6.16666666],"landlocked":true,"borders":["BEL","FRA","DEU"],"area":2586,"flag":"\uD83C\uDDF1\uD83C\uDDFA","demonyms":{"eng":{"f":"Luxembourger","m":"Luxembourger"},"fra":{"f":"Luxembourgeoise","m":"Luxembourgeois"}}},{"name":{"common":"Latvia","official":"Republic of Latvia","native":{"lav":{"official":"Latvijas Republikas","common":"Latvija"}}},"tld":[".lv"],"cca2":"LV","ccn3":"428","cca3":"LVA","cioc":"LAT","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["71"]},"capital":["Riga"],"altSpellings":["LV","Republic of Latvia","Latvijas Republika"],"region":"Europe","subregion":"Northern Europe","languages":{"lav":"Latvian"},"translations":{"ces":{"official":"Lotyšsk\xe1 republika","common":"Lotyšsko"},"deu":{"official":"Republik Lettland","common":"Lettland"},"est":{"official":"L\xe4ti Vabariik","common":"L\xe4ti"},"fin":{"official":"Latvian tasavalta","common":"Latvia"},"fra":{"official":"R\xe9publique de Lettonie","common":"Lettonie"},"hrv":{"official":"Republika Latvija","common":"Latvija"},"hun":{"official":"Lett K\xf6zt\xe1rsas\xe1g","common":"Lettorsz\xe1g"},"ita":{"official":"Repubblica di Lettonia","common":"Lettonia"},"jpn":{"official":"ラトビア共和国","common":"ラトビア"},"kor":{"official":"라트비아 공화국","common":"라트비아"},"nld":{"official":"Republiek Letland","common":"Letland"},"per":{"official":"جمهوری لتونی","common":"لتونی"},"pol":{"official":"Republika Łotewska","common":"Łotwa"},"por":{"official":"Rep\xfablica da Let\xf3nia","common":"Let\xf3nia"},"rus":{"official":"Латвийская Республика","common":"Латвия"},"slk":{"official":"Lotyšsk\xe1 republika","common":"Lotyšsko"},"spa":{"official":"Rep\xfablica de Letonia","common":"Letonia"},"swe":{"official":"Republiken Lettland","common":"Lettland"},"urd":{"official":"جمہوریہ لٹویا","common":"لٹویا"},"zho":{"official":"拉脱维亚共和国","common":"拉脱维亚"}},"latlng":[57,25],"landlocked":false,"borders":["BLR","EST","LTU","RUS"],"area":64559,"flag":"\uD83C\uDDF1\uD83C\uDDFB","demonyms":{"eng":{"f":"Latvian","m":"Latvian"},"fra":{"f":"Lettone","m":"Letton"}}},{"name":{"common":"Macau","official":"Macao Special Administrative Region of the People\'s Republic of China","native":{"por":{"official":"Regi\xe3o Administrativa Especial de Macau da Rep\xfablica Popular da China","common":"Macau"},"zho":{"official":"中华人民共和国澳门特别行政区","common":"澳门"}}},"tld":[".mo"],"cca2":"MO","ccn3":"446","cca3":"MAC","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"MOP":{"name":"Macanese pataca","symbol":"P"}},"idd":{"root":"+8","suffixes":["53"]},"capital":[],"altSpellings":["MO","澳门","Macao","Macao Special Administrative Region of the People\'s Republic of China","中華人民共和國澳門特別行政區","Regi\xe3o Administrativa Especial de Macau da Rep\xfablica Popular da China"],"region":"Asia","subregion":"Eastern Asia","languages":{"por":"Portuguese","zho":"Chinese"},"translations":{"ces":{"official":"Zvl\xe1štn\xed spr\xe1vn\xed oblast Č\xednsk\xe9 lidov\xe9 republiky Macao","common":"Macao"},"deu":{"official":"Sonderverwaltungsregion Macau der Volksrepublik China","common":"Macao"},"est":{"official":"Macau erihalduspiirkond","common":"Macau"},"fin":{"official":"Macaon Kiinan kansantasavallan erityishallintoalue","common":"Macao"},"fra":{"official":"R\xe9gion administrative sp\xe9ciale de Macao de la R\xe9publique populaire de Chine","common":"Macao"},"hrv":{"official":"Makao Posebnog upravnog područjaNarodne Republike Kine","common":"Makao"},"hun":{"official":"Maka\xf3","common":"Maka\xf3"},"ita":{"official":"Macao Regione amministrativa speciale della Repubblica Popolare Cinese","common":"Macao"},"jpn":{"official":"中華人民共和国マカオ特別行政区","common":"マカオ"},"kor":{"official":"중화인민공화국 마카오 특별행정구","common":"마카오"},"nld":{"official":"Speciale Administratieve Regio Macau van de Volksrepubliek China","common":"Macao"},"per":{"official":"ماکائو","common":"ماکائو"},"pol":{"official":"Specjalny Region Administracyjny Chińskiej Republiki Ludowej Makau","common":"Makau"},"por":{"official":"Macau Regi\xe3o Administrativa Especial da Rep\xfablica Popular da China","common":"Macau"},"rus":{"official":"Специальный административный район Макао Китайской Народной Республики Китай","common":"Макао"},"slk":{"official":"Macao, Špeci\xe0lna administrat\xedvna oblasŦ","common":"Macao"},"spa":{"official":"Macao, Regi\xf3n Administrativa Especial de la Rep\xfablica Popular China","common":"Macao"},"swe":{"official":"Macao","common":"Macao"},"urd":{"official":"مکاؤ عوامی جمہوریہ چین کا خصوصی انتظامی علاقہ","common":"مکاؤ"}},"latlng":[22.16666666,113.55],"landlocked":false,"borders":["CHN"],"area":30,"flag":"\uD83C\uDDF2\uD83C\uDDF4","demonyms":{"eng":{"f":"Macanese","m":"Macanese"},"fra":{"f":"Macanaise","m":"Macanais"}}},{"name":{"common":"Saint Martin","official":"Saint Martin","native":{"fra":{"official":"Saint-Martin","common":"Saint-Martin"}}},"tld":[".fr",".gp"],"cca2":"MF","ccn3":"663","cca3":"MAF","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+5","suffixes":["90"]},"capital":["Marigot"],"altSpellings":["MF","Collectivity of Saint Martin","Collectivit\xe9 de Saint-Martin","Saint Martin (French part)"],"region":"Americas","subregion":"Caribbean","languages":{"fra":"French"},"translations":{"ces":{"official":"Svat\xfd Martin","common":"Svat\xfd Martin (Francie)"},"deu":{"official":"Saint-Martin","common":"Saint-Martin"},"est":{"official":"Saint-Martini \xfchendus","common":"Saint-Martin"},"fin":{"official":"Saint-Martin","common":"Saint-Martin"},"fra":{"official":"Saint-Martin","common":"Saint-Martin"},"hrv":{"official":"Saint Martin","common":"Sveti Martin"},"hun":{"official":"Saint-Martin K\xf6z\xf6ss\xe9g","common":"Saint-Martin"},"ita":{"official":"saint Martin","common":"Saint Martin"},"jpn":{"official":"サンマルタン島","common":"サン・マルタン（フランス領）"},"kor":{"official":"생마르탱","common":"생마르탱"},"nld":{"official":"Saint Martin","common":"Saint-Martin"},"per":{"official":"سن مارتن","common":"سن مارتن"},"pol":{"official":"Wsp\xf3lnota Saint-Martin","common":"Saint-Martin"},"por":{"official":"saint Martin","common":"S\xe3o Martinho"},"rus":{"official":"Сен-Мартен","common":"Сен-Мартен"},"slk":{"official":"Saint-Martin","common":"Saint-Martin"},"spa":{"official":"Saint Martin","common":"Saint Martin"},"swe":{"official":"F\xf6rvaltningsomr\xe5det Saint-Martin","common":"Saint-Martin"},"urd":{"official":"سینٹ مارٹن","common":"سینٹ مارٹن"},"zho":{"official":"圣马丁","common":"圣马丁"}},"latlng":[18.08333333,-63.95],"landlocked":false,"borders":["SXM"],"area":53,"flag":"\uD83C\uDDF2\uD83C\uDDEB","demonyms":{"eng":{"f":"Saint Martin Islander","m":"Saint Martin Islander"},"fra":{"f":"Saint-Martinoise","m":"Saint-Martinois"}}},{"name":{"common":"Morocco","official":"Kingdom of Morocco","native":{"ara":{"official":"المملكة المغربية","common":"المغرب"},"ber":{"official":"ⵜⴰⴳⵍⴷⵉⵜ ⵏ ⵍⵎⵖⵔⵉⴱ","common":"ⵍⵎⴰⵖⵔⵉⴱ"}}},"tld":[".ma","المغرب."],"cca2":"MA","ccn3":"504","cca3":"MAR","cioc":"MAR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MAD":{"name":"Moroccan dirham","symbol":"د.م."}},"idd":{"root":"+2","suffixes":["12"]},"capital":["Rabat"],"altSpellings":["MA","Kingdom of Morocco","Al-Mamlakah al-Maġribiyah"],"region":"Africa","subregion":"Northern Africa","languages":{"ara":"Arabic","ber":"Berber"},"translations":{"ces":{"official":"Marock\xe9 kr\xe1lovstv\xed","common":"Maroko"},"deu":{"official":"K\xf6nigreich Marokko","common":"Marokko"},"est":{"official":"Maroko Kuningriik","common":"Maroko"},"fin":{"official":"Marokon kuningaskunta","common":"Marokko"},"fra":{"official":"Royaume du Maroc","common":"Maroc"},"hrv":{"official":"Kraljevina Maroko","common":"Maroko"},"hun":{"official":"Marokk\xf3i Kir\xe1lys\xe1g","common":"Marokk\xf3"},"ita":{"official":"Regno del Marocco","common":"Marocco"},"jpn":{"official":"モロッコ王国","common":"モロッコ"},"kor":{"official":"모로코 왕국","common":"모로코"},"nld":{"official":"Koninkrijk Marokko","common":"Marokko"},"per":{"official":"پادشاهی مراکش","common":"مراکش"},"pol":{"official":"Kr\xf3lestwo Marokańskie","common":"Maroko"},"por":{"official":"Reino de Marrocos","common":"Marrocos"},"rus":{"official":"Королевство Марокко","common":"Марокко"},"slk":{"official":"Marock\xe9 kniežatstvo","common":"Maroko"},"spa":{"official":"Reino de Marruecos","common":"Marruecos"},"swe":{"official":"Konungariket Marocko","common":"Marocko"},"urd":{"official":"مملکتِ مراکش","common":"مراکش"},"zho":{"official":"摩洛哥王国","common":"摩洛哥"}},"latlng":[32,-5],"landlocked":false,"borders":["DZA","ESH","ESP"],"area":446550,"flag":"\uD83C\uDDF2\uD83C\uDDE6","demonyms":{"eng":{"f":"Moroccan","m":"Moroccan"},"fra":{"f":"Marocaine","m":"Marocain"}}},{"name":{"common":"Monaco","official":"Principality of Monaco","native":{"fra":{"official":"Principaut\xe9 de Monaco","common":"Monaco"}}},"tld":[".mc"],"cca2":"MC","ccn3":"492","cca3":"MCO","cioc":"MON","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["77"]},"capital":["Monaco"],"altSpellings":["MC","Principality of Monaco","Principaut\xe9 de Monaco"],"region":"Europe","subregion":"Western Europe","languages":{"fra":"French"},"translations":{"ces":{"official":"Monack\xe9 kn\xedžectv\xed","common":"Monako"},"deu":{"official":"F\xfcrstentum Monaco","common":"Monaco"},"est":{"official":"Monaco V\xfcrstiriik","common":"Monaco"},"fin":{"official":"Monacon ruhtinaskunta","common":"Monaco"},"fra":{"official":"Principaut\xe9 de Monaco","common":"Monaco"},"hrv":{"official":"Kneževina Monako","common":"Monako"},"hun":{"official":"Monac\xf3i Hercegs\xe9g","common":"Monaco"},"ita":{"official":"Principato di Monaco","common":"Principato di Monaco"},"jpn":{"official":"モナコ公国","common":"モナコ"},"kor":{"official":"모나코 공국","common":"모나코"},"nld":{"official":"Vorstendom Monaco","common":"Monaco"},"per":{"official":"شاهزاده‌نشین موناکو","common":"موناکو"},"pol":{"official":"Księstwo Monako","common":"Monako"},"por":{"official":"Principado do M\xf3naco","common":"M\xf3naco"},"rus":{"official":"Княжество Монако","common":"Монако"},"slk":{"official":"Monack\xe9 kniežatstvo","common":"Monako"},"spa":{"official":"Principado de M\xf3naco","common":"M\xf3naco"},"swe":{"official":"Furstend\xf6met Monaco","common":"Monaco"},"urd":{"official":"جمہوریہ مناکو","common":"موناکو"},"zho":{"official":"摩纳哥公国","common":"摩纳哥"}},"latlng":[43.73333333,7.4],"landlocked":false,"borders":["FRA"],"area":2.02,"flag":"\uD83C\uDDF2\uD83C\uDDE8","demonyms":{"eng":{"f":"Monegasque","m":"Monegasque"},"fra":{"f":"Mon\xe9gasque","m":"Mon\xe9gasque"}}},{"name":{"common":"Moldova","official":"Republic of Moldova","native":{"ron":{"official":"Republica Moldova","common":"Moldova"}}},"tld":[".md"],"cca2":"MD","ccn3":"498","cca3":"MDA","cioc":"MDA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MDL":{"name":"Moldovan leu","symbol":"L"}},"idd":{"root":"+3","suffixes":["73"]},"capital":["Chișinău"],"altSpellings":["MD","Moldova, Republic of","Republic of Moldova","Republica Moldova"],"region":"Europe","subregion":"Eastern Europe","languages":{"ron":"Moldavian"},"translations":{"ces":{"official":"Moldavsk\xe1 republika","common":"Moldavsko"},"deu":{"official":"Republik Moldau","common":"Moldawien"},"est":{"official":"Moldova Vabariik","common":"Moldova"},"fin":{"official":"Moldovan tasavalta","common":"Moldova"},"fra":{"official":"R\xe9publique de Moldavie","common":"Moldavie"},"hrv":{"official":"Moldavija","common":"Moldova"},"hun":{"official":"Moldovai K\xf6zt\xe1rsas\xe1g","common":"Moldova"},"ita":{"official":"Repubblica di Moldova","common":"Moldavia"},"jpn":{"official":"モルドバ共和国","common":"モルドバ共和国"},"kor":{"official":"몰도바 공화국","common":"몰도바"},"nld":{"official":"Republiek Moldavi\xeb","common":"Moldavi\xeb"},"per":{"official":"جمهوری مولداوی","common":"مولداوی"},"pol":{"official":"Republika Mołdawii","common":"Mołdawia"},"por":{"official":"Rep\xfablica da Mold\xe1via","common":"Mold\xe1via"},"rus":{"official":"Молдова","common":"Молдавия"},"slk":{"official":"Moldavsk\xe1 republika","common":"Moldavsko"},"spa":{"official":"Rep\xfablica de Moldova","common":"Moldavia"},"swe":{"official":"Republiken Moldavien","common":"Moldavien"},"urd":{"official":"جمہوریہ مالدووا","common":"مالدووا"},"zho":{"official":"摩尔多瓦共和国","common":"摩尔多瓦"}},"latlng":[47,29],"landlocked":true,"borders":["ROU","UKR"],"area":33846,"flag":"\uD83C\uDDF2\uD83C\uDDE9","demonyms":{"eng":{"f":"Moldovan","m":"Moldovan"},"fra":{"f":"Moldave","m":"Moldave"}}},{"name":{"common":"Madagascar","official":"Republic of Madagascar","native":{"fra":{"official":"R\xe9publique de Madagascar","common":"Madagascar"},"mlg":{"official":"Repoblikan\'i Madagasikara","common":"Madagasikara"}}},"tld":[".mg"],"cca2":"MG","ccn3":"450","cca3":"MDG","cioc":"MAD","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MGA":{"name":"Malagasy ariary","symbol":"Ar"}},"idd":{"root":"+2","suffixes":["61"]},"capital":["Antananarivo"],"altSpellings":["MG","Republic of Madagascar","Repoblikan\'i Madagasikara","R\xe9publique de Madagascar"],"region":"Africa","subregion":"Eastern Africa","languages":{"fra":"French","mlg":"Malagasy"},"translations":{"ces":{"official":"Madagaskarsk\xe1 republika","common":"Madagaskar"},"deu":{"official":"Republik Madagaskar","common":"Madagaskar"},"est":{"official":"Madagaskari Vabariik","common":"Madagaskar"},"fin":{"official":"Madagaskarin tasavalta","common":"Madagaskar"},"fra":{"official":"R\xe9publique de Madagascar","common":"Madagascar"},"hrv":{"official":"Republika Madagaskar","common":"Madagaskar"},"hun":{"official":"Madagaszk\xe1ri K\xf6zt\xe1rsas\xe1g","common":"Madagaszk\xe1r"},"ita":{"official":"Repubblica del Madagascar","common":"Madagascar"},"jpn":{"official":"マダガスカル共和国","common":"マダガスカル"},"kor":{"official":"마다가스카르 공화국","common":"마다가스카르"},"nld":{"official":"Republiek Madagaskar","common":"Madagaskar"},"per":{"official":"جمهوری ماداگاسکار","common":"ماداگاسکار"},"pol":{"official":"Republika Madagaskaru","common":"Madagaskar"},"por":{"official":"Rep\xfablica de Madag\xe1scar","common":"Madag\xe1scar"},"rus":{"official":"Республика Мадагаскар","common":"Мадагаскар"},"slk":{"official":"Madagaskarsk\xe1 republika","common":"Madagaskar"},"spa":{"official":"Rep\xfablica de Madagascar","common":"Madagascar"},"swe":{"official":"Republiken Madagaskar","common":"Madagaskar"},"urd":{"official":"جمہوریہ مڈغاسکر","common":"مڈغاسکر"},"zho":{"official":"马达加斯加共和国","common":"马达加斯加"}},"latlng":[-20,47],"landlocked":false,"borders":[],"area":587041,"flag":"\uD83C\uDDF2\uD83C\uDDEC","demonyms":{"eng":{"f":"Malagasy","m":"Malagasy"},"fra":{"f":"Malgache","m":"Malgache"}}},{"name":{"common":"Maldives","official":"Republic of the Maldives","native":{"div":{"official":"ދިވެހިރާއްޖޭގެ ޖުމްހޫރިއްޔާ","common":"ދިވެހިރާއްޖޭގެ"}}},"tld":[".mv"],"cca2":"MV","ccn3":"462","cca3":"MDV","cioc":"MDV","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MVR":{"name":"Maldivian rufiyaa","symbol":".ރ"}},"idd":{"root":"+9","suffixes":["60"]},"capital":["Mal\xe9"],"altSpellings":["MV","Maldive Islands","Republic of the Maldives","Dhivehi Raajjeyge Jumhooriyya"],"region":"Asia","subregion":"Southern Asia","languages":{"div":"Maldivian"},"translations":{"ces":{"official":"Maledivsk\xe1 republika","common":"Maledivy"},"deu":{"official":"Republik Malediven","common":"Malediven"},"est":{"official":"Maldiivi Vabariik","common":"Maldiivid"},"fin":{"official":"Malediivien tasavalta","common":"Malediivit"},"fra":{"official":"R\xe9publique des Maldives","common":"Maldives"},"hrv":{"official":"Republika Maldivi","common":"Maldivi"},"hun":{"official":"Mald\xedv-szigetek","common":"Mald\xedv-szigetek"},"ita":{"official":"Repubblica delle Maldive","common":"Maldive"},"jpn":{"official":"モルディブ共和国","common":"モルディブ"},"kor":{"official":"몰디브 공화국","common":"몰디브"},"nld":{"official":"Republiek van de Malediven","common":"Maldiven"},"per":{"official":"جمهوری مالدیو","common":"مالدیو"},"pol":{"official":"Republika Malediw\xf3w","common":"Malediwy"},"por":{"official":"Rep\xfablica das Maldivas","common":"Maldivas"},"rus":{"official":"Республика Мальдивы","common":"Мальдивы"},"slk":{"official":"Maldivsk\xe1 republika","common":"Maldivy"},"spa":{"official":"Rep\xfablica de las Maldivas","common":"Maldivas"},"swe":{"official":"Republiken Maldiverna","common":"Maldiverna"},"urd":{"official":"جمہوریہ مالدیپ","common":"مالدیپ"},"zho":{"official":"马尔代夫共和国","common":"马尔代夫"}},"latlng":[3.25,73],"landlocked":false,"borders":[],"area":300,"flag":"\uD83C\uDDF2\uD83C\uDDFB","demonyms":{"eng":{"f":"Maldivan","m":"Maldivan"},"fra":{"f":"Maldivienne","m":"Maldivien"}}},{"name":{"common":"Mexico","official":"United Mexican States","native":{"spa":{"official":"Estados Unidos Mexicanos","common":"M\xe9xico"}}},"tld":[".mx"],"cca2":"MX","ccn3":"484","cca3":"MEX","cioc":"MEX","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MXN":{"name":"Mexican peso","symbol":"$"}},"idd":{"root":"+5","suffixes":["2"]},"capital":["Mexico City"],"altSpellings":["MX","Mexicanos","United Mexican States","Estados Unidos Mexicanos"],"region":"Americas","subregion":"North America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Spojen\xe9 st\xe1ty mexick\xe9","common":"Mexiko"},"deu":{"official":"Vereinigte Mexikanische Staaten","common":"Mexiko"},"est":{"official":"Mehhiko \xdchendriigid","common":"Mehhiko"},"fin":{"official":"Meksikon yhdysvallat","common":"Meksiko"},"fra":{"official":"\xc9tats-Unis du Mexique","common":"Mexique"},"hrv":{"official":"Sjedinjene Meksičke Države","common":"Meksiko"},"hun":{"official":"Mexik\xf3i Egyes\xfclt \xc1llamok","common":"Mexik\xf3"},"ita":{"official":"Stati Uniti del Messico","common":"Messico"},"jpn":{"official":"メキシコ合衆国","common":"メキシコ"},"kor":{"official":"멕시코 합중국","common":"멕시코"},"nld":{"official":"Verenigde Mexicaanse Staten","common":"Mexico"},"per":{"official":"ایالات متحد مکزیک","common":"مکزیک"},"pol":{"official":"Meksykańskie Stany Zjednoczone","common":"Meksyk"},"por":{"official":"Estados Unidos Mexicanos","common":"M\xe9xico"},"rus":{"official":"Мексиканские Соединённые Штаты","common":"Мексика"},"slk":{"official":"Spojen\xe9 št\xe1šy mexick\xe9","common":"Mexiko"},"spa":{"official":"Estados Unidos Mexicanos","common":"M\xe9xico"},"swe":{"official":"Mexikos f\xf6renta stater","common":"Mexiko"},"urd":{"official":"ریاستہائے متحدہ میکسیکو","common":"میکسیکو"},"zho":{"official":"墨西哥合众国","common":"墨西哥"}},"latlng":[23,-102],"landlocked":false,"borders":["BLZ","GTM","USA"],"area":1964375,"flag":"\uD83C\uDDF2\uD83C\uDDFD","demonyms":{"eng":{"f":"Mexican","m":"Mexican"},"fra":{"f":"Mexicaine","m":"Mexicain"}}},{"name":{"common":"Marshall Islands","official":"Republic of the Marshall Islands","native":{"eng":{"official":"Republic of the Marshall Islands","common":"Marshall Islands"},"mah":{"official":"Republic of the Marshall Islands","common":"M̧ajeļ"}}},"tld":[".mh"],"cca2":"MH","ccn3":"584","cca3":"MHL","cioc":"MHL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["92"]},"capital":["Majuro"],"altSpellings":["MH","Republic of the Marshall Islands","Aolepān Aorōkin M̧ajeļ"],"region":"Oceania","subregion":"Micronesia","languages":{"eng":"English","mah":"Marshallese"},"translations":{"ces":{"official":"Republika Marshallovy ostrovy","common":"Marshallovy ostrovy"},"deu":{"official":"Republik Marshallinseln","common":"Marshallinseln"},"est":{"official":"Marshalli Saarte Vabariik","common":"Marshalli Saared"},"fin":{"official":"Marshallinsaarten tasavalta","common":"Marshallinsaaret"},"fra":{"official":"R\xe9publique des \xceles Marshall","common":"\xceles Marshall"},"hrv":{"official":"Republika Maršalovi Otoci","common":"Maršalovi Otoci"},"hun":{"official":"Marshall-szigetek","common":"Marshall-szigetek"},"ita":{"official":"Repubblica delle Isole Marshall","common":"Isole Marshall"},"jpn":{"official":"マーシャル諸島共和国","common":"マーシャル諸島"},"kor":{"official":"마셜 제도 공화국","common":"마셜 제도"},"nld":{"official":"Republiek van de Marshall-eilanden","common":"Marshalleilanden"},"per":{"official":"جمهوری جزایر مارشال","common":"جزایر مارشال"},"pol":{"official":"Republika Wysp Marshalla","common":"Wyspy Marshalla"},"por":{"official":"Rep\xfablica das Ilhas Marshall","common":"Ilhas Marshall"},"rus":{"official":"Республика Маршалловы острова","common":"Маршалловы Острова"},"slk":{"official":"Republika Marshallov\xfdch ostrovov","common":"Marshallove ostrovy"},"spa":{"official":"Rep\xfablica de las Islas Marshall","common":"Islas Marshall"},"swe":{"official":"Republiken Marshall\xf6arna","common":"Marshall\xf6arna"},"urd":{"official":"جمہوریہ جزائر مارشل","common":"جزائر مارشل"},"zho":{"official":"马绍尔群岛共和国","common":"马绍尔群岛"}},"latlng":[9,168],"landlocked":false,"borders":[],"area":181,"flag":"\uD83C\uDDF2\uD83C\uDDED","demonyms":{"eng":{"f":"Marshallese","m":"Marshallese"},"fra":{"f":"Marshallaise","m":"Marshallais"}}},{"name":{"common":"North Macedonia","official":"Republic of North Macedonia","native":{"mkd":{"official":"Република Северна Македонија","common":"Македонија"}}},"tld":[".mk"],"cca2":"MK","ccn3":"807","cca3":"MKD","cioc":"MKD","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MKD":{"name":"denar","symbol":"den"}},"idd":{"root":"+3","suffixes":["89"]},"capital":["Skopje"],"altSpellings":["MK","The former Yugoslav Republic of Macedonia","Republic of North Macedonia","Macedonia, The Former Yugoslav Republic of","Република Северна Македонија"],"region":"Europe","subregion":"Southeast Europe","languages":{"mkd":"Macedonian"},"translations":{"ces":{"official":"Republika Severn\xed Makedonie","common":"Severn\xed Makedonie"},"deu":{"official":"Republik Nordmazedonien","common":"Nordmazedonien"},"est":{"official":"P\xf5hja-Makedoonia Vabariik","common":"P\xf5hja-Makedoonia"},"fin":{"official":"Pohjois-Makedonian tasavalta","common":"Pohjois-Makedonia"},"fra":{"official":"R\xe9publique de Mac\xe9doine du Nord","common":"Mac\xe9doine du Nord"},"hrv":{"official":"Republika Sjeverna Makedonija","common":"Sjeverna Makedonija"},"hun":{"official":"\xc9szak-maced\xf3n K\xf6zt\xe1rsas\xe1g","common":"\xc9szak-Maced\xf3nia"},"ita":{"official":"Repubblica di Macedonia del Nord","common":"Macedonia del Nord"},"jpn":{"official":"北マケドニア共和国","common":"北マケドニア "},"kor":{"official":"북마케도니아 공화국","common":"북마케도니아"},"nld":{"official":"Republiek Noord-Macedoni\xeb","common":"Noord-Macedoni\xeb"},"per":{"official":"جمهوری مقدونیه شمالی","common":"مقدونیه شمالی"},"pol":{"official":"Republika Macedonii P\xf3łnocnej","common":"Macedonia P\xf3łnocna"},"por":{"official":"Rep\xfablica da Maced\xf4nia do Norte","common":"Maced\xf3nia do Norte"},"rus":{"official":"Республика Северная Македония","common":"Северная Македония"},"slk":{"official":"Severomaced\xf3nska republika","common":"Severn\xe9 Maced\xf3nsko"},"spa":{"official":"Rep\xfablica de Macedonia del Norte","common":"Macedonia del Norte"},"swe":{"official":"Republiken Nordmakedonien","common":"Nordmakedonien"},"urd":{"official":"جمہوریہ مقدونیہ","common":"شمالی مقدونیہ"},"zho":{"official":"北馬其頓共和國","common":"北馬其頓"}},"latlng":[41.83333333,22],"landlocked":true,"borders":["ALB","BGR","GRC","UNK","SRB"],"area":25713,"flag":"\uD83C\uDDF2\uD83C\uDDF0","demonyms":{"eng":{"f":"Macedonian","m":"Macedonian"},"fra":{"f":"Mac\xe9donienne","m":"Mac\xe9donien"}}},{"name":{"common":"Mali","official":"Republic of Mali","native":{"fra":{"official":"R\xe9publique du Mali","common":"Mali"}}},"tld":[".ml"],"cca2":"ML","ccn3":"466","cca3":"MLI","cioc":"MLI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["23"]},"capital":["Bamako"],"altSpellings":["ML","Republic of Mali","R\xe9publique du Mali"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Republika Mali","common":"Mali"},"deu":{"official":"Republik Mali","common":"Mali"},"est":{"official":"Mali Vabariik","common":"Mali"},"fin":{"official":"Malin tasavalta","common":"Mali"},"fra":{"official":"R\xe9publique du Mali","common":"Mali"},"hrv":{"official":"Republika Mali","common":"Mali"},"hun":{"official":"Mali K\xf6zt\xe1rsas\xe1g","common":"Mali"},"ita":{"official":"Repubblica del Mali","common":"Mali"},"jpn":{"official":"マリ共和国","common":"マリ"},"kor":{"official":"말리 공화국","common":"말리"},"nld":{"official":"Republiek Mali","common":"Mali"},"per":{"official":"جمهوری مالی","common":"مالی"},"pol":{"official":"Republika Mali","common":"Mali"},"por":{"official":"Rep\xfablica do Mali","common":"Mali"},"rus":{"official":"Республика Мали","common":"Мали"},"slk":{"official":"Malijsk\xe1 republika","common":"Mali"},"spa":{"official":"Rep\xfablica de Mal\xed","common":"Mali"},"swe":{"official":"Republiken Mali","common":"Mali"},"urd":{"official":"جمہوریہ مالی","common":"مالی"},"zho":{"official":"马里共和国","common":"马里"}},"latlng":[17,-4],"landlocked":true,"borders":["DZA","BFA","GIN","CIV","MRT","NER","SEN"],"area":1240192,"flag":"\uD83C\uDDF2\uD83C\uDDF1","demonyms":{"eng":{"f":"Malian","m":"Malian"},"fra":{"f":"Malienne","m":"Malien"}}},{"name":{"common":"Malta","official":"Republic of Malta","native":{"eng":{"official":"Republic of Malta","common":"Malta"},"mlt":{"official":"Repubblika ta \' Malta","common":"Malta"}}},"tld":[".mt"],"cca2":"MT","ccn3":"470","cca3":"MLT","cioc":"MLT","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["56"]},"capital":["Valletta"],"altSpellings":["MT","Republic of Malta","Repubblika ta\' Malta"],"region":"Europe","subregion":"Southern Europe","languages":{"eng":"English","mlt":"Maltese"},"translations":{"ces":{"official":"Maltsk\xe1 republika","common":"Malta"},"deu":{"official":"Republik Malta","common":"Malta"},"est":{"official":"Malta Vabariik","common":"Malta"},"fin":{"official":"Maltan tasavalta","common":"Malta"},"fra":{"official":"R\xe9publique de Malte","common":"Malte"},"hrv":{"official":"Republika Malta","common":"Malta"},"hun":{"official":"M\xe1ltai K\xf6zt\xe1rsas\xe1g","common":"M\xe1lta"},"ita":{"official":"Repubblica di Malta","common":"Malta"},"jpn":{"official":"マルタ共和国","common":"マルタ"},"kor":{"official":"몰타 공화국","common":"몰타"},"nld":{"official":"Republiek Malta","common":"Malta"},"per":{"official":"جمهوری مالت","common":"مالت"},"pol":{"official":"Republika Malty","common":"Malta"},"por":{"official":"Rep\xfablica de Malta","common":"Malta"},"rus":{"official":"Республика Мальта","common":"Мальта"},"slk":{"official":"Maltsk\xe1 republika","common":"Malta"},"spa":{"official":"Rep\xfablica de Malta","common":"Malta"},"swe":{"official":"Republiken Malta","common":"Malta"},"urd":{"official":"جمہوریہ مالٹا","common":"مالٹا"},"zho":{"official":"马耳他共和国","common":"马耳他"}},"latlng":[35.83333333,14.58333333],"landlocked":false,"borders":[],"area":316,"flag":"\uD83C\uDDF2\uD83C\uDDF9","demonyms":{"eng":{"f":"Maltese","m":"Maltese"},"fra":{"f":"Maltaise","m":"Maltais"}}},{"name":{"common":"Myanmar","official":"Republic of the Union of Myanmar","native":{"mya":{"official":"ပြည်ထောင်စု သမ္မတ မြန်မာနိုင်ငံတော်","common":"မြန်မာ"}}},"tld":[".mm"],"cca2":"MM","ccn3":"104","cca3":"MMR","cioc":"MYA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MMK":{"name":"Burmese kyat","symbol":"Ks"}},"idd":{"root":"+9","suffixes":["5"]},"capital":["Naypyidaw"],"altSpellings":["MM","Burma","Republic of the Union of Myanmar","Pyidaunzu Thanmăda Myăma Nainngandaw"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"mya":"Burmese"},"translations":{"ces":{"official":"Republika Myanmarsk\xfd svaz","common":"Myanmar"},"deu":{"official":"Republik der Union Myanmar","common":"Myanmar"},"est":{"official":"Myanmari Liidu Vabariik","common":"Myanmar"},"fin":{"official":"Myanmarin liiton tasavalta","common":"Myanmar"},"fra":{"official":"R\xe9publique de l\'Union du Myanmar","common":"Birmanie"},"hrv":{"official":"Republika Unije Mijanmar","common":"Mijanmar"},"hun":{"official":"Mianmari \xc1llamsz\xf6vets\xe9g K\xf6zt\xe1rsas\xe1ga","common":"Mianmar"},"ita":{"official":"Repubblica dell\'Unione di Myanmar","common":"Birmania"},"jpn":{"official":"ミャンマー連邦共和国","common":"ミャンマー"},"kor":{"official":"미얀마 연방 공화국","common":"미얀마"},"nld":{"official":"Republiek van de Unie van Myanmar","common":"Myanmar"},"per":{"official":"اتحادیه جمهوری میانمار","common":"میانمار"},"pol":{"official":"Republika Związku Mjanmy","common":"Mjanma"},"por":{"official":"Rep\xfablica da Uni\xe3o de Myanmar","common":"Myanmar"},"rus":{"official":"Республика Союза Мьянма","common":"Мьянма"},"slk":{"official":"Mjanmarsk\xe1 zv\xe4zov\xe1 republika","common":"Mjanmarsko"},"spa":{"official":"Rep\xfablica de la Uni\xf3n de Myanmar","common":"Myanmar"},"swe":{"official":"Republiken Unionen Myanmar","common":"Myanmar"},"urd":{"official":"متحدہ جمہوریہ میانمار","common":"میانمار"},"zho":{"official":"缅甸联邦共和国","common":"缅甸"}},"latlng":[22,98],"landlocked":false,"borders":["BGD","CHN","IND","LAO","THA"],"area":676578,"flag":"\uD83C\uDDF2\uD83C\uDDF2","demonyms":{"eng":{"f":"Burmese","m":"Burmese"},"fra":{"f":"Birmane","m":"Birman"}}},{"name":{"common":"Montenegro","official":"Montenegro","native":{"cnr":{"official":"Црна Гора","common":"Црна Гора"}}},"tld":[".me"],"cca2":"ME","ccn3":"499","cca3":"MNE","cioc":"MNE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["82"]},"capital":["Podgorica"],"altSpellings":["ME","Crna Gora"],"region":"Europe","subregion":"Southeast Europe","languages":{"cnr":"Montenegrin"},"translations":{"ces":{"official":"Čern\xe1 Hora","common":"Čern\xe1 Hora"},"deu":{"official":"Montenegro","common":"Montenegro"},"est":{"official":"Montenegro","common":"Montenegro"},"fin":{"official":"Montenegro","common":"Montenegro"},"fra":{"official":"Mont\xe9n\xe9gro","common":"Mont\xe9n\xe9gro"},"hrv":{"official":"Crna Gora","common":"Crna Gora"},"hun":{"official":"Montenegr\xf3","common":"Montenegr\xf3"},"ita":{"official":"Montenegro","common":"Montenegro"},"jpn":{"official":"モンテネグロ","common":"モンテネグロ"},"kor":{"official":"몬테네그로","common":"몬테네그로"},"nld":{"official":"Montenegro","common":"Montenegro"},"per":{"official":"مونته‌نگرو","common":"مونته‌نگرو"},"pol":{"official":"Czarnog\xf3ra","common":"Czarnog\xf3ra"},"por":{"official":"Montenegro","common":"Montenegro"},"rus":{"official":"Черногория","common":"Черногория"},"slk":{"official":"Čierna Hora","common":"Čierna Hora"},"spa":{"official":"Montenegro","common":"Montenegro"},"swe":{"official":"Montenegro","common":"Montenegro"},"urd":{"official":"مونٹینیگرو","common":"مونٹینیگرو"},"zho":{"official":"黑山","common":"黑山"}},"latlng":[42.5,19.3],"landlocked":false,"borders":["ALB","BIH","HRV","UNK","SRB"],"area":13812,"flag":"\uD83C\uDDF2\uD83C\uDDEA","demonyms":{"eng":{"f":"Montenegrin","m":"Montenegrin"},"fra":{"f":"Mont\xe9n\xe9grine","m":"Mont\xe9n\xe9grin"}}},{"name":{"common":"Mongolia","official":"Mongolia","native":{"mon":{"official":"Монгол улс","common":"Монгол улс"}}},"tld":[".mn"],"cca2":"MN","ccn3":"496","cca3":"MNG","cioc":"MGL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MNT":{"name":"Mongolian t\xf6gr\xf6g","symbol":"₮"}},"idd":{"root":"+9","suffixes":["76"]},"capital":["Ulan Bator"],"altSpellings":["MN"],"region":"Asia","subregion":"Eastern Asia","languages":{"mon":"Mongolian"},"translations":{"ces":{"official":"St\xe1t Mongolsko","common":"Mongolsko"},"deu":{"official":"Mongolei","common":"Mongolei"},"est":{"official":"Mongoolia","common":"Mongoolia"},"fin":{"official":"Mongolian tasavalta","common":"Mongolia"},"fra":{"official":"Mongolie","common":"Mongolie"},"hrv":{"official":"Mongolija","common":"Mongolija"},"hun":{"official":"Mong\xf3lia","common":"Mong\xf3lia"},"ita":{"official":"Mongolia","common":"Mongolia"},"jpn":{"official":"モンゴル","common":"モンゴル"},"kor":{"official":"몽골","common":"몽골국"},"nld":{"official":"Mongoli\xeb","common":"Mongoli\xeb"},"per":{"official":"مغولستان","common":"مغولستان"},"pol":{"official":"Mongolia","common":"Mongolia"},"por":{"official":"Mong\xf3lia","common":"Mong\xf3lia"},"rus":{"official":"Монголия","common":"Монголия"},"slk":{"official":"Mongolsko","common":"Mongolsko"},"spa":{"official":"Mongolia","common":"Mongolia"},"swe":{"official":"Mongoliet","common":"Mongoliet"},"urd":{"official":"منگولیا","common":"منگولیا"},"zho":{"official":"蒙古","common":"蒙古"}},"latlng":[46,105],"landlocked":true,"borders":["CHN","RUS"],"area":1564110,"flag":"\uD83C\uDDF2\uD83C\uDDF3","demonyms":{"eng":{"f":"Mongolian","m":"Mongolian"},"fra":{"f":"Mongole","m":"Mongol"}}},{"name":{"common":"Northern Mariana Islands","official":"Commonwealth of the Northern Mariana Islands","native":{"cal":{"official":"Commonwealth of the Northern Mariana Islands","common":"Northern Mariana Islands"},"cha":{"official":"Sankattan Siha Na Islas Mari\xe5nas","common":"Na Islas Mari\xe5nas"},"eng":{"official":"Commonwealth of the Northern Mariana Islands","common":"Northern Mariana Islands"}}},"tld":[".mp"],"cca2":"MP","ccn3":"580","cca3":"MNP","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["670"]},"capital":["Saipan"],"altSpellings":["MP","Commonwealth of the Northern Mariana Islands","Sankattan Siha Na Islas Mari\xe5nas"],"region":"Oceania","subregion":"Micronesia","languages":{"cal":"Carolinian","cha":"Chamorro","eng":"English"},"translations":{"ces":{"official":"Společenstv\xed Severn\xedch Marian","common":"Severn\xed Mariany"},"deu":{"official":"Commonwealth der N\xf6rdlichen Marianen","common":"N\xf6rdliche Marianen"},"est":{"official":"P\xf5hja-Mariaani \xdchendus","common":"P\xf5hja-Mariaanid"},"fin":{"official":"Pohjois-Mariaanit","common":"Pohjois-Mariaanit"},"fra":{"official":"Commonwealth des \xeeles Mariannes du Nord","common":"\xceles Mariannes du Nord"},"hrv":{"official":"Zajednica je Sjeverni Marijanski otoci","common":"Sjevernomarijanski otoci"},"hun":{"official":"\xc9szaki-Mariana-szigetek","common":"\xc9szaki-Mariana-szigetek"},"ita":{"official":"Commonwealth delle Isole Marianne Settentrionali","common":"Isole Marianne Settentrionali"},"jpn":{"official":"北マリアナ諸島","common":"北マリアナ諸島"},"kor":{"official":"북마리아나 제도","common":"북마리아나 제도"},"nld":{"official":"Commonwealth van de Noordelijke Marianen","common":"Noordelijke Marianeneilanden"},"per":{"official":"جزایر ماریانای شمالی","common":"جزایر ماریانای شمالی"},"pol":{"official":"Wsp\xf3lnota Marian\xf3w P\xf3łnocnych","common":"Mariany P\xf3łnocne"},"por":{"official":"Comunidade das Ilhas Marianas do Norte","common":"Marianas Setentrionais"},"rus":{"official":"Содружество Северных Марианских островов","common":"Северные Марианские острова"},"slk":{"official":"Spoločenstvo ostrovov Severn\xe9 Mari\xe1ny","common":"Severn\xe9 Mari\xe1ny"},"spa":{"official":"Mancomunidad de las Islas Marianas del Norte","common":"Islas Marianas del Norte"},"swe":{"official":"Nordmarianerna","common":"Nordmarianerna"},"urd":{"official":"دولتِ مشترکہ جزائر شمالی ماریانا","common":"جزائر شمالی ماریانا"},"zho":{"official":"北马里亚纳群岛","common":"北马里亚纳群岛"}},"latlng":[15.2,145.75],"landlocked":false,"borders":[],"area":464,"flag":"\uD83C\uDDF2\uD83C\uDDF5","demonyms":{"eng":{"f":"American","m":"American"},"fra":{"f":"Am\xe9ricaine","m":"Am\xe9rican"}}},{"name":{"common":"Mozambique","official":"Republic of Mozambique","native":{"por":{"official":"Rep\xfablica de Mo\xe7ambique","common":"Mo\xe7ambique"}}},"tld":[".mz"],"cca2":"MZ","ccn3":"508","cca3":"MOZ","cioc":"MOZ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MZN":{"name":"Mozambican metical","symbol":"MT"}},"idd":{"root":"+2","suffixes":["58"]},"capital":["Maputo"],"altSpellings":["MZ","Republic of Mozambique","Rep\xfablica de Mo\xe7ambique"],"region":"Africa","subregion":"Eastern Africa","languages":{"por":"Portuguese"},"translations":{"ces":{"official":"Mosambick\xe1 republika","common":"Mosambik"},"deu":{"official":"Republik Mosambik","common":"Mosambik"},"est":{"official":"Mosambiigi Vabariik","common":"Mosambiik"},"fin":{"official":"Mosambikin tasavalta","common":"Mosambik"},"fra":{"official":"R\xe9publique du Mozambique","common":"Mozambique"},"hrv":{"official":"Republika Mozambiku","common":"Mozambik"},"hun":{"official":"Mozambiki K\xf6zt\xe1rsas\xe1g","common":"Mozambik"},"ita":{"official":"Repubblica del Mozambico","common":"Mozambico"},"jpn":{"official":"モザンビーク共和国","common":"モザンビーク"},"kor":{"official":"모잠비크 공화국","common":"모잠비크"},"nld":{"official":"Republiek Mozambique","common":"Mozambique"},"per":{"official":"جمهوری موزامبیک","common":"موزامبیک"},"pol":{"official":"Republika Mozambiku","common":"Mozambik"},"por":{"official":"Rep\xfablica de Mo\xe7ambique","common":"Mo\xe7ambique"},"rus":{"official":"Республика Мозамбик","common":"Мозамбик"},"slk":{"official":"Mozambick\xe1 republika","common":"Mozambik"},"spa":{"official":"Rep\xfablica de Mozambique","common":"Mozambique"},"swe":{"official":"Republiken Mo\xe7ambique","common":"Mo\xe7ambique"},"urd":{"official":"جمہوریہ موزمبیق","common":"موزمبیق"},"zho":{"official":"莫桑比克共和国","common":"莫桑比克"}},"latlng":[-18.25,35],"landlocked":false,"borders":["MWI","ZAF","SWZ","TZA","ZMB","ZWE"],"area":801590,"flag":"\uD83C\uDDF2\uD83C\uDDFF","demonyms":{"eng":{"f":"Mozambican","m":"Mozambican"},"fra":{"f":"Mozambicaine","m":"Mozambicain"}}},{"name":{"common":"Mauritania","official":"Islamic Republic of Mauritania","native":{"ara":{"official":"الجمهورية الإسلامية الموريتانية","common":"موريتانيا"}}},"tld":[".mr"],"cca2":"MR","ccn3":"478","cca3":"MRT","cioc":"MTN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MRU":{"name":"Mauritanian ouguiya","symbol":"UM"}},"idd":{"root":"+2","suffixes":["22"]},"capital":["Nouakchott"],"altSpellings":["MR","Islamic Republic of Mauritania","al-Jumhūriyyah al-ʾIslāmiyyah al-Mūrītāniyyah"],"region":"Africa","subregion":"Western Africa","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Maurit\xe1nsk\xe1 isl\xe1msk\xe1 republika","common":"Maurit\xe1nie"},"deu":{"official":"Islamische Republik Mauretanien","common":"Mauretanien"},"est":{"official":"Mauritaania Islamivabariik","common":"Mauritaania"},"fin":{"official":"Mauritanian islamilainen tasavalta","common":"Mauritania"},"fra":{"official":"R\xe9publique islamique de Mauritanie","common":"Mauritanie"},"hrv":{"official":"Islamska Republika Mauritanija","common":"Mauritanija"},"hun":{"official":"Maurit\xe1niai Iszl\xe1m K\xf6zt\xe1rsas\xe1g","common":"Maurit\xe1nia"},"ita":{"official":"Repubblica islamica di Mauritania","common":"Mauritania"},"jpn":{"official":"モーリタニア\xb7イスラム共和国","common":"モーリタニア"},"kor":{"official":"모리타니 이슬람 공화국","common":"모리타니"},"nld":{"official":"Islamitische Republiek Mauritani\xeb","common":"Mauritani\xeb"},"per":{"official":"جمهوری اسلامی موریتانی","common":"موریتانی"},"pol":{"official":"Islamska Republika Mauretańska","common":"Mauretania"},"por":{"official":"Rep\xfablica Isl\xe2mica da Maurit\xe2nia","common":"Maurit\xe2nia"},"rus":{"official":"Исламская Республика Мавритания","common":"Мавритания"},"slk":{"official":"Maurit\xe1nska islamsk\xe1 republika","common":"Maurit\xe1nia"},"spa":{"official":"Rep\xfablica Isl\xe1mica de Mauritania","common":"Mauritania"},"swe":{"official":"Islamiska republiken Mauretanien","common":"Mauretanien"},"urd":{"official":"اسلامی جمہوریہ موریتانیہ","common":"موریتانیہ"},"zho":{"official":"毛里塔尼亚伊斯兰共和国","common":"毛里塔尼亚"}},"latlng":[20,-12],"landlocked":false,"borders":["DZA","MLI","SEN","ESH"],"area":1030700,"flag":"\uD83C\uDDF2\uD83C\uDDF7","demonyms":{"eng":{"f":"Mauritanian","m":"Mauritanian"},"fra":{"f":"Mauritanienne","m":"Mauritanien"}}},{"name":{"common":"Montserrat","official":"Montserrat","native":{"eng":{"official":"Montserrat","common":"Montserrat"}}},"tld":[".ms"],"cca2":"MS","ccn3":"500","cca3":"MSR","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["664"]},"capital":["Plymouth"],"altSpellings":["MS"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Montserrat","common":"Montserrat"},"deu":{"official":"Montserrat","common":"Montserrat"},"est":{"official":"Montserrat","common":"Montserrat"},"fin":{"official":"Montserrat","common":"Montserrat"},"fra":{"official":"Montserrat","common":"Montserrat"},"hrv":{"official":"Montserrat","common":"Montserrat"},"hun":{"official":"Montserrat","common":"Montserrat"},"ita":{"official":"Montserrat","common":"Montserrat"},"jpn":{"official":"モントセラト","common":"モントセラト"},"kor":{"official":"몬트세랫","common":"몬트세랫"},"nld":{"official":"Montserrat","common":"Montserrat"},"per":{"official":"مونتسرات","common":"مونتسرات"},"pol":{"official":"Montserrat","common":"Montserrat"},"por":{"official":"Montserrat","common":"Montserrat"},"rus":{"official":"Монтсеррат","common":"Монтсеррат"},"slk":{"official":"Montserrat","common":"Montserrat"},"spa":{"official":"Montserrat","common":"Montserrat"},"swe":{"official":"Montserrat","common":"Montserrat"},"urd":{"official":"مانٹسریٹ","common":"مانٹسریٹ"},"zho":{"official":"蒙特塞拉特","common":"蒙特塞拉特"}},"latlng":[16.75,-62.2],"landlocked":false,"borders":[],"area":102,"flag":"\uD83C\uDDF2\uD83C\uDDF8","demonyms":{"eng":{"f":"Montserratian","m":"Montserratian"},"fra":{"f":"Montserratienne","m":"Montserratien"}}},{"name":{"common":"Martinique","official":"Martinique","native":{"fra":{"official":"Martinique","common":"Martinique"}}},"tld":[".mq"],"cca2":"MQ","ccn3":"474","cca3":"MTQ","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+5","suffixes":["96"]},"capital":["Fort-de-France"],"altSpellings":["MQ"],"region":"Americas","subregion":"Caribbean","languages":{"fra":"French"},"translations":{"ces":{"official":"Martinik","common":"Martinik"},"deu":{"official":"Martinique","common":"Martinique"},"est":{"official":"Martinique’i departemang","common":"Martinique"},"fin":{"official":"Martinique","common":"Martinique"},"fra":{"official":"Martinique","common":"Martinique"},"hrv":{"official":"Martinique","common":"Martinique"},"hun":{"official":"Martinique","common":"Martinique"},"ita":{"official":"Martinique","common":"Martinica"},"jpn":{"official":"マルティニーク島","common":"マルティニーク"},"kor":{"official":"마르티니크","common":"마르티니크"},"nld":{"official":"Martinique","common":"Martinique"},"per":{"official":"مارتینیک","common":"مارتینیک"},"pol":{"official":"Martynika","common":"Martynika"},"por":{"official":"Martinique","common":"Martinica"},"rus":{"official":"Мартиника","common":"Мартиника"},"slk":{"official":"Martinique","common":"Martinique"},"spa":{"official":"Martinica","common":"Martinica"},"swe":{"official":"Martinique","common":"Martinique"},"urd":{"official":"مارٹینیک","common":"مارٹینیک"},"zho":{"official":"马提尼克","common":"马提尼克"}},"latlng":[14.666667,-61],"landlocked":false,"borders":[],"area":1128,"flag":"\uD83C\uDDF2\uD83C\uDDF6","demonyms":{"eng":{"f":"Martinican","m":"Martinican"},"fra":{"f":"Martiniquaise","m":"Martiniquais"}}},{"name":{"common":"Mauritius","official":"Republic of Mauritius","native":{"eng":{"official":"Republic of Mauritius","common":"Mauritius"},"fra":{"official":"R\xe9publique de Maurice","common":"Maurice"},"mfe":{"official":"Republik Moris","common":"Moris"}}},"tld":[".mu"],"cca2":"MU","ccn3":"480","cca3":"MUS","cioc":"MRI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MUR":{"name":"Mauritian rupee","symbol":"₨"}},"idd":{"root":"+2","suffixes":["30"]},"capital":["Port Louis"],"altSpellings":["MU","Republic of Mauritius","R\xe9publique de Maurice"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English","fra":"French","mfe":"Mauritian Creole"},"translations":{"ces":{"official":"Mauricijsk\xe1 republika","common":"Mauricius"},"deu":{"official":"Republik Mauritius","common":"Mauritius"},"est":{"official":"Mauritiuse Vabariik","common":"Mauritius"},"fin":{"official":"Mauritiuksen tasavalta","common":"Mauritius"},"fra":{"official":"R\xe9publique de Maurice","common":"\xcele Maurice"},"hrv":{"official":"Republika Mauricijus","common":"Mauricijus"},"hun":{"official":"Mauritiusi K\xf6zt\xe1rsas\xe1g","common":"Mauritius"},"ita":{"official":"Repubblica di Mauritius","common":"Mauritius"},"jpn":{"official":"モーリシャス共和国","common":"モーリシャス"},"kor":{"official":"모리셔스 공화국","common":"모리셔스"},"nld":{"official":"Republiek Mauritius","common":"Mauritius"},"per":{"official":"جمهوری موریس","common":"موریس"},"pol":{"official":"Republika Mauritiusu","common":"Mauritius"},"por":{"official":"Rep\xfablica das Maur\xedcias","common":"Maur\xedcio"},"rus":{"official":"Республика Маврикий","common":"Маврикий"},"slk":{"official":"Maur\xedcijsk\xe1 republika","common":"Maur\xedcius"},"spa":{"official":"Rep\xfablica de Mauricio","common":"Mauricio"},"swe":{"official":"Republiken Mauritius","common":"Mauritius"},"urd":{"official":"جمہوریہ موریشس","common":"موریشس"},"zho":{"official":"毛里求斯共和国","common":"毛里求斯"}},"latlng":[-20.28333333,57.55],"landlocked":false,"borders":[],"area":2040,"flag":"\uD83C\uDDF2\uD83C\uDDFA","demonyms":{"eng":{"f":"Mauritian","m":"Mauritian"},"fra":{"f":"Mauricienne","m":"Mauricien"}}},{"name":{"common":"Malawi","official":"Republic of Malawi","native":{"eng":{"official":"Republic of Malawi","common":"Malawi"},"nya":{"official":"Chalo cha Malawi, Dziko la Malaŵi","common":"Malaŵi"}}},"tld":[".mw"],"cca2":"MW","ccn3":"454","cca3":"MWI","cioc":"MAW","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MWK":{"name":"Malawian kwacha","symbol":"MK"}},"idd":{"root":"+2","suffixes":["65"]},"capital":["Lilongwe"],"altSpellings":["MW","Republic of Malawi"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English","nya":"Chewa"},"translations":{"ces":{"official":"Malawisk\xe1 republika","common":"Malawi"},"deu":{"official":"Republik Malawi","common":"Malawi"},"est":{"official":"Malawi Vabariik","common":"Malawi"},"fin":{"official":"Malawin tasavalta","common":"Malawi"},"fra":{"official":"R\xe9publique du Malawi","common":"Malawi"},"hrv":{"official":"Republika Malavi","common":"Malavi"},"hun":{"official":"Malawi K\xf6zt\xe1rsas\xe1g","common":"Malawi"},"ita":{"official":"Repubblica del Malawi","common":"Malawi"},"jpn":{"official":"マラウイ共和国","common":"マラウイ"},"kor":{"official":"말라위 공화국","common":"말라위"},"nld":{"official":"Republiek Malawi","common":"Malawi"},"per":{"official":"جمهوری مالاوی","common":"مالاوی"},"pol":{"official":"Republika Malawi","common":"Malawi"},"por":{"official":"Rep\xfablica do Malawi","common":"Malawi"},"rus":{"official":"Республика Малави","common":"Малави"},"slk":{"official":"Malawijsk\xe1 republika","common":"Malawi"},"spa":{"official":"Rep\xfablica de Malawi","common":"Malawi"},"swe":{"official":"Republiken Malawi","common":"Malawi"},"urd":{"official":"جمہوریہ ملاوی","common":"ملاوی"},"zho":{"official":"马拉维共和国","common":"马拉维"}},"latlng":[-13.5,34],"landlocked":true,"borders":["MOZ","TZA","ZMB"],"area":118484,"flag":"\uD83C\uDDF2\uD83C\uDDFC","demonyms":{"eng":{"f":"Malawian","m":"Malawian"},"fra":{"f":"Malawienne","m":"Malawien"}}},{"name":{"common":"Malaysia","official":"Malaysia","native":{"eng":{"official":"Malaysia","common":"Malaysia"},"msa":{"official":"مليسيا","common":"مليسيا"}}},"tld":[".my"],"cca2":"MY","ccn3":"458","cca3":"MYS","cioc":"MAS","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"MYR":{"name":"Malaysian ringgit","symbol":"RM"}},"idd":{"root":"+6","suffixes":["0"]},"capital":["Kuala Lumpur"],"altSpellings":["MY"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"eng":"English","msa":"Malay"},"translations":{"ces":{"official":"Malajsie","common":"Malajsie"},"deu":{"official":"Malaysia","common":"Malaysia"},"est":{"official":"Malaisia","common":"Malaisia"},"fin":{"official":"Malesia","common":"Malesia"},"fra":{"official":"F\xe9d\xe9ration de Malaisie","common":"Malaisie"},"hrv":{"official":"Malezija","common":"Malezija"},"hun":{"official":"Malajzia","common":"Malajzia"},"ita":{"official":"Malaysia","common":"Malesia"},"jpn":{"official":"マレーシア","common":"マレーシア"},"kor":{"official":"말레이시아","common":"말레이시아"},"nld":{"official":"Maleisi\xeb","common":"Maleisi\xeb"},"per":{"official":"فدراسیون مالزی","common":"مالزی"},"pol":{"official":"Malezja","common":"Malezja"},"por":{"official":"Mal\xe1sia","common":"Mal\xe1sia"},"rus":{"official":"Малайзия","common":"Малайзия"},"slk":{"official":"Malajzia","common":"Malajzia"},"spa":{"official":"Malasia","common":"Malasia"},"swe":{"official":"Malaysia","common":"Malaysia"},"urd":{"official":"ملائیشیا","common":"ملائیشیا"},"zho":{"official":"马来西亚","common":"马来西亚"}},"latlng":[2.5,112.5],"landlocked":false,"borders":["BRN","IDN","THA"],"area":330803,"flag":"\uD83C\uDDF2\uD83C\uDDFE","demonyms":{"eng":{"f":"Malaysian","m":"Malaysian"},"fra":{"f":"Malaisienne","m":"Malaisien"}}},{"name":{"common":"Mayotte","official":"Department of Mayotte","native":{"fra":{"official":"D\xe9partement de Mayotte","common":"Mayotte"}}},"tld":[".yt"],"cca2":"YT","ccn3":"175","cca3":"MYT","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+2","suffixes":["62"]},"capital":["Mamoudzou"],"altSpellings":["YT","Department of Mayotte","D\xe9partement de Mayotte"],"region":"Africa","subregion":"Eastern Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Mayotte","common":"Mayotte"},"deu":{"official":"\xdcbersee-D\xe9partement Mayotte","common":"Mayotte"},"est":{"official":"Mayotte","common":"Mayotte"},"fin":{"official":"Mayotte","common":"Mayotte"},"fra":{"official":"D\xe9partement de Mayotte","common":"Mayotte"},"hrv":{"official":"Odjel Mayotte","common":"Mayotte"},"hun":{"official":"Mayotte","common":"Mayotte"},"ita":{"official":"Dipartimento di Mayotte","common":"Mayotte"},"jpn":{"official":"マヨット科","common":"マヨット"},"kor":{"official":"마요트","common":"마요트"},"nld":{"official":"Afdeling Mayotte","common":"Mayotte"},"per":{"official":"مجموعه شهرستانی مایوت","common":"مایوت"},"pol":{"official":"Majotta","common":"Majotta"},"por":{"official":"Departamento de Mayotte","common":"Mayotte"},"rus":{"official":"Департамент Майотта","common":"Майотта"},"slk":{"official":"Department Mayotte","common":"Mayotte"},"spa":{"official":"Departamento de Mayotte","common":"Mayotte"},"swe":{"official":"Departementsomr\xe5det Mayotte","common":"Mayotte"},"urd":{"official":"مایوٹ","common":"مایوٹ"},"zho":{"official":"马约特","common":"马约特"}},"latlng":[-12.83333333,45.16666666],"landlocked":false,"borders":[],"area":374,"flag":"\uD83C\uDDFE\uD83C\uDDF9","demonyms":{"eng":{"f":"Mahoran","m":"Mahoran"},"fra":{"f":"Mahoraise","m":"Mahorais"}}},{"name":{"common":"Namibia","official":"Republic of Namibia","native":{"afr":{"official":"Republiek van Namibi\xeb","common":"Namibi\xeb"},"deu":{"official":"Republik Namibia","common":"Namibia"},"eng":{"official":"Republic of Namibia","common":"Namibia"},"her":{"official":"Republic of Namibia","common":"Namibia"},"hgm":{"official":"Republic of Namibia","common":"Namibia"},"kwn":{"official":"Republic of Namibia","common":"Namibia"},"loz":{"official":"Republic of Namibia","common":"Namibia"},"ndo":{"official":"Republic of Namibia","common":"Namibia"},"tsn":{"official":"Lefatshe la Namibia","common":"Namibia"}}},"tld":[".na"],"cca2":"NA","ccn3":"516","cca3":"NAM","cioc":"NAM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"NAD":{"name":"Namibian dollar","symbol":"$"},"ZAR":{"name":"South African rand","symbol":"R"}},"idd":{"root":"+2","suffixes":["64"]},"capital":["Windhoek"],"altSpellings":["NA","Namibi\xeb","Republic of Namibia"],"region":"Africa","subregion":"Southern Africa","languages":{"afr":"Afrikaans","deu":"German","eng":"English","her":"Herero","hgm":"Khoekhoe","kwn":"Kwangali","loz":"Lozi","ndo":"Ndonga","tsn":"Tswana"},"translations":{"ces":{"official":"Namibijsk\xe1 republika","common":"Namibie"},"deu":{"official":"Republik Namibia","common":"Namibia"},"est":{"official":"Namiibia Vabariik","common":"Namiibia"},"fin":{"official":"Namibian tasavalta","common":"Namibia"},"fra":{"official":"R\xe9publique de Namibie","common":"Namibie"},"hrv":{"official":"Republika Namibija","common":"Namibija"},"hun":{"official":"Nam\xedbiai K\xf6zt\xe1rsas\xe1g","common":"Nam\xedbia"},"ita":{"official":"Repubblica di Namibia","common":"Namibia"},"jpn":{"official":"ナミビア共和国","common":"ナミビア"},"kor":{"official":"나미비아 공화국","common":"나미비아"},"nld":{"official":"Republiek Namibi\xeb","common":"Namibi\xeb"},"per":{"official":"جمهوری نامیبیا","common":"نامیبیا"},"pol":{"official":"Republika Namibii","common":"Namibia"},"por":{"official":"Rep\xfablica da Nam\xedbia","common":"Nam\xedbia"},"rus":{"official":"Республика Намибия","common":"Намибия"},"slk":{"official":"Nam\xedbijsk\xe1 republika","common":"Nam\xedbia"},"spa":{"official":"Rep\xfablica de Namibia","common":"Namibia"},"swe":{"official":"Republiken Namibia","common":"Namibia"},"urd":{"official":"جمہوریہ نمیبیا","common":"نمیبیا"},"zho":{"official":"纳米比亚共和国","common":"纳米比亚"}},"latlng":[-22,17],"landlocked":false,"borders":["AGO","BWA","ZAF","ZMB"],"area":825615,"flag":"\uD83C\uDDF3\uD83C\uDDE6","demonyms":{"eng":{"f":"Namibian","m":"Namibian"},"fra":{"f":"Namibienne","m":"Namibien"}}},{"name":{"common":"New Caledonia","official":"New Caledonia","native":{"fra":{"official":"Nouvelle-Cal\xe9donie","common":"Nouvelle-Cal\xe9donie"}}},"tld":[".nc"],"cca2":"NC","ccn3":"540","cca3":"NCL","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"XPF":{"name":"CFP franc","symbol":"₣"}},"idd":{"root":"+6","suffixes":["87"]},"capital":["Noum\xe9a"],"altSpellings":["NC"],"region":"Oceania","subregion":"Melanesia","languages":{"fra":"French"},"translations":{"ces":{"official":"Nov\xe1 Kaledonie","common":"Nov\xe1 Kaledonie"},"deu":{"official":"Neukaledonien","common":"Neukaledonien"},"est":{"official":"Uus-Kaledoonia","common":"Uus-Kaledoonia"},"fin":{"official":"Uusi-Kaledonia","common":"Uusi-Kaledonia"},"fra":{"official":"Nouvelle-Cal\xe9donie","common":"Nouvelle-Cal\xe9donie"},"hrv":{"official":"Nova Kaledonija","common":"Nova Kaledonija"},"hun":{"official":"\xdaj-Kaled\xf3nia","common":"\xdaj-Kaled\xf3nia"},"ita":{"official":"Nuova Caledonia","common":"Nuova Caledonia"},"jpn":{"official":"ニューカレドニア","common":"ニューカレドニア"},"kor":{"official":"누벨칼레도니","common":"누벨칼레도니"},"nld":{"official":"nieuw -Caledoni\xeb","common":"Nieuw-Caledoni\xeb"},"per":{"official":"کالدونیای جدید","common":"کالدونیای جدید"},"pol":{"official":"Nowa Kaledonia","common":"Nowa Kaledonia"},"por":{"official":"New Caledonia","common":"Nova Caled\xf3nia"},"rus":{"official":"Новая Каледония","common":"Новая Каледония"},"slk":{"official":"Nov\xe1 Kaled\xf3nia","common":"Nov\xe1 Kaled\xf3nia"},"spa":{"official":"nueva Caledonia","common":"Nueva Caledonia"},"swe":{"official":"Nya Kaledonien","common":"Nya Kaledonien"},"urd":{"official":"نیو کیلیڈونیا","common":"نیو کیلیڈونیا"},"zho":{"official":"新喀里多尼亚","common":"新喀里多尼亚"}},"latlng":[-21.5,165.5],"landlocked":false,"borders":[],"area":18575,"flag":"\uD83C\uDDF3\uD83C\uDDE8","demonyms":{"eng":{"f":"New Caledonian","m":"New Caledonian"},"fra":{"f":"N\xe9o-Cal\xe9donienne","m":"N\xe9o-Cal\xe9donien"}}},{"name":{"common":"Niger","official":"Republic of Niger","native":{"fra":{"official":"R\xe9publique du Niger","common":"Niger"}}},"tld":[".ne"],"cca2":"NE","ccn3":"562","cca3":"NER","cioc":"NIG","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["27"]},"capital":["Niamey"],"altSpellings":["NE","Nijar"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Nigersk\xe1 republika","common":"Niger"},"deu":{"official":"Republik Niger","common":"Niger"},"est":{"official":"Nigeri Vabariik","common":"Niger"},"fin":{"official":"Nigerin tasavalta","common":"Niger"},"fra":{"official":"R\xe9publique du Niger","common":"Niger"},"hrv":{"official":"Republika Niger","common":"Niger"},"hun":{"official":"Nigeri K\xf6zt\xe1rsas\xe1g","common":"Niger"},"ita":{"official":"Repubblica del Niger","common":"Niger"},"jpn":{"official":"ニジェール共和国","common":"ニジェール"},"kor":{"official":"니제르 공화국","common":"니제르"},"nld":{"official":"Republiek Niger","common":"Niger"},"per":{"official":"جمهوری نیجر","common":"نیجر"},"pol":{"official":"Republika Nigru","common":"Niger"},"por":{"official":"Rep\xfablica do N\xedger","common":"N\xedger"},"rus":{"official":"Республика Нигер","common":"Нигер"},"slk":{"official":"Nig\xe9rsk\xe1 republika","common":"Niger"},"spa":{"official":"Rep\xfablica de N\xedger","common":"N\xedger"},"swe":{"official":"Republiken Niger","common":"Niger"},"urd":{"official":"جمہوریہ نائجر","common":"نائجر"},"zho":{"official":"尼日尔共和国","common":"尼日尔"}},"latlng":[16,8],"landlocked":true,"borders":["DZA","BEN","BFA","TCD","LBY","MLI","NGA"],"area":1267000,"flag":"\uD83C\uDDF3\uD83C\uDDEA","demonyms":{"eng":{"f":"Nigerien","m":"Nigerien"},"fra":{"f":"Nig\xe9rienne","m":"Nig\xe9rien"}}},{"name":{"common":"Norfolk Island","official":"Territory of Norfolk Island","native":{"eng":{"official":"Territory of Norfolk Island","common":"Norfolk Island"},"pih":{"official":"Teratri of Norf\'k Ailen","common":"Norf\'k Ailen"}}},"tld":[".nf"],"cca2":"NF","ccn3":"574","cca3":"NFK","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"AUD":{"name":"Australian dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["72"]},"capital":["Kingston"],"altSpellings":["NF","Territory of Norfolk Island","Teratri of Norf\'k Ailen"],"region":"Oceania","subregion":"Australia and New Zealand","languages":{"eng":"English","pih":"Norfuk"},"translations":{"ces":{"official":"Teritorium ostrova Norfolk","common":"Norfolk"},"deu":{"official":"Gebiet der Norfolkinsel","common":"Norfolkinsel"},"est":{"official":"Norfolki saare ala","common":"Norfolk"},"fin":{"official":"Norfolkinsaaren territorio","common":"Norfolkinsaari"},"fra":{"official":"Territoire de l\'\xeele Norfolk","common":"\xcele Norfolk"},"hrv":{"official":"Teritorij Norfolk Island","common":"Otok Norfolk"},"hun":{"official":"Norfolk-sziget","common":"Norfolk-sziget"},"ita":{"official":"Territorio di Norfolk Island","common":"Isola Norfolk"},"jpn":{"official":"ノーフォーク島の領土","common":"ノーフォーク島"},"kor":{"official":"노퍽 섬","common":"노퍽 섬"},"nld":{"official":"Grondgebied van Norfolk Island","common":"Norfolkeiland"},"per":{"official":"قلمرو جزایر نورفک","common":"جزیره نورفک"},"pol":{"official":"Terytorium Wyspy Norfolk","common":"Wyspa Norfolk"},"por":{"official":"Territ\xf3rio da Ilha Norfolk","common":"Ilha Norfolk"},"rus":{"official":"Территория острова Норфолк","common":"Норфолк"},"slk":{"official":"Terit\xf3rium ostrova Norfolk","common":"Norfolk"},"spa":{"official":"Territorio de la Isla Norfolk","common":"Isla de Norfolk"},"swe":{"official":"Norfolk\xf6n","common":"Norfolk\xf6n"},"urd":{"official":"جزیرہ نورفک خطہ","common":"جزیرہ نورفک"},"zho":{"official":"诺福克岛","common":"诺福克岛"}},"latlng":[-29.03333333,167.95],"landlocked":false,"borders":[],"area":36,"flag":"\uD83C\uDDF3\uD83C\uDDEB","demonyms":{"eng":{"f":"Norfolk Islander","m":"Norfolk Islander"},"fra":{"f":"Norfolkaise","m":"Norfolkais"}}},{"name":{"common":"Nigeria","official":"Federal Republic of Nigeria","native":{"eng":{"official":"Federal Republic of Nigeria","common":"Nigeria"}}},"tld":[".ng"],"cca2":"NG","ccn3":"566","cca3":"NGA","cioc":"NGR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"NGN":{"name":"Nigerian naira","symbol":"₦"}},"idd":{"root":"+2","suffixes":["34"]},"capital":["Abuja"],"altSpellings":["NG","Nijeriya","Na\xedj\xedr\xed\xe0","Federal Republic of Nigeria"],"region":"Africa","subregion":"Western Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Nigerijsk\xe1 federativn\xed republika","common":"Nig\xe9rie"},"deu":{"official":"Bundesrepublik Nigeria","common":"Nigeria"},"est":{"official":"Nigeeria Liitvabariik","common":"Nigeeria"},"fin":{"official":"Nigerian liittotasavalta","common":"Nigeria"},"fra":{"official":"R\xe9publique f\xe9d\xe9rale du Nigeria","common":"Nig\xe9ria"},"hrv":{"official":"Savezna Republika Nigerija","common":"Nigerija"},"hun":{"official":"Nig\xe9ria","common":"Nig\xe9ria"},"ita":{"official":"Repubblica federale di Nigeria","common":"Nigeria"},"jpn":{"official":"ナイジェリア連邦共和国","common":"ナイジェリア"},"kor":{"official":"나이지리아 연방 공화국","common":"나이지리아"},"nld":{"official":"Federale Republiek Nigeria","common":"Nigeria"},"per":{"official":"جمهوری فدرال نیجریه","common":"نیجریه"},"pol":{"official":"Federalna Republika Nigerii","common":"Nigeria"},"por":{"official":"Rep\xfablica Federal da Nig\xe9ria","common":"Nig\xe9ria"},"rus":{"official":"Федеративная Республика Нигерия","common":"Нигерия"},"slk":{"official":"Nig\xe9rijsk\xe1 federat\xedvna republika","common":"Nig\xe9ria"},"spa":{"official":"Rep\xfablica Federal de Nigeria","common":"Nigeria"},"swe":{"official":"F\xf6rbundsrepubliken Nigeria","common":"Nigeria"},"urd":{"official":"وفاقی جمہوریہ نائجیریا","common":"نائجیریا"},"zho":{"official":"尼日利亚联邦共和国","common":"尼日利亚"}},"latlng":[10,8],"landlocked":false,"borders":["BEN","CMR","TCD","NER"],"area":923768,"flag":"\uD83C\uDDF3\uD83C\uDDEC","demonyms":{"eng":{"f":"Nigerian","m":"Nigerian"},"fra":{"f":"Nig\xe9riane","m":"Nig\xe9rian"}}},{"name":{"common":"Nicaragua","official":"Republic of Nicaragua","native":{"spa":{"official":"Rep\xfablica de Nicaragua","common":"Nicaragua"}}},"tld":[".ni"],"cca2":"NI","ccn3":"558","cca3":"NIC","cioc":"NCA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"NIO":{"name":"Nicaraguan c\xf3rdoba","symbol":"C$"}},"idd":{"root":"+5","suffixes":["05"]},"capital":["Managua"],"altSpellings":["NI","Republic of Nicaragua","Rep\xfablica de Nicaragua"],"region":"Americas","subregion":"Central America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Republika Nikaragua","common":"Nikaragua"},"deu":{"official":"Republik Nicaragua","common":"Nicaragua"},"est":{"official":"Nicaragua Vabariik","common":"Nicaragua"},"fin":{"official":"Nicaraguan tasavalta","common":"Nicaragua"},"fra":{"official":"R\xe9publique du Nicaragua","common":"Nicaragua"},"hrv":{"official":"Republika Nikaragva","common":"Nikaragva"},"hun":{"official":"Nicaraguai K\xf6zt\xe1rsas\xe1g","common":"Nicaragua"},"ita":{"official":"Repubblica del Nicaragua","common":"Nicaragua"},"jpn":{"official":"ニカラグア共和国","common":"ニカラグア"},"kor":{"official":"니카라과 공화국","common":"니카라과"},"nld":{"official":"Republiek Nicaragua","common":"Nicaragua"},"per":{"official":"جمهوری نیکاراگوئه","common":"نیکاراگوئه"},"pol":{"official":"Republika Nikaragui","common":"Nikaragua"},"por":{"official":"Rep\xfablica da Nicar\xe1gua","common":"Nicar\xe1gua"},"rus":{"official":"Республика Никарагуа","common":"Никарагуа"},"slk":{"official":"Nikaragujsk\xe1 republika","common":"Nikaragua"},"spa":{"official":"Rep\xfablica de Nicaragua","common":"Nicaragua"},"swe":{"official":"Republiken Nicaragua","common":"Nicaragua"},"urd":{"official":"جمہوریہ نکاراگوا","common":"نکاراگوا"},"zho":{"official":"尼加拉瓜共和国","common":"尼加拉瓜"}},"latlng":[13,-85],"landlocked":false,"borders":["CRI","HND"],"area":130373,"flag":"\uD83C\uDDF3\uD83C\uDDEE","demonyms":{"eng":{"f":"Nicaraguan","m":"Nicaraguan"},"fra":{"f":"Nicaraguayenne","m":"Nicaraguayen"}}},{"name":{"common":"Niue","official":"Niue","native":{"eng":{"official":"Niue","common":"Niue"},"niu":{"official":"Niuē","common":"Niuē"}}},"tld":[".nu"],"cca2":"NU","ccn3":"570","cca3":"NIU","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"NZD":{"name":"New Zealand dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["83"]},"capital":["Alofi"],"altSpellings":["NU"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English","niu":"Niuean"},"translations":{"ces":{"official":"Niue","common":"Niue"},"deu":{"official":"Niue","common":"Niue"},"est":{"official":"Niue","common":"Niue"},"fin":{"official":"Niue","common":"Niue"},"fra":{"official":"Niue","common":"Niue"},"hrv":{"official":"Niue","common":"Niue"},"hun":{"official":"Niue","common":"Niue"},"ita":{"official":"Niue","common":"Niue"},"jpn":{"official":"ニウエ","common":"ニウエ"},"kor":{"official":"니우에","common":"니우에"},"nld":{"official":"Niue","common":"Niue"},"per":{"official":"نیووی","common":"نیووی"},"pol":{"official":"Niue","common":"Niue"},"por":{"official":"Niue","common":"Niue"},"rus":{"official":"Ниуэ","common":"Ниуэ"},"slk":{"official":"Niue","common":"Niue"},"spa":{"official":"Niue","common":"Niue"},"swe":{"official":"Niue","common":"Niue"},"urd":{"official":"نیووے","common":"نیووے"},"zho":{"official":"纽埃","common":"纽埃"}},"latlng":[-19.03333333,-169.86666666],"landlocked":false,"borders":[],"area":260,"flag":"\uD83C\uDDF3\uD83C\uDDFA","demonyms":{"eng":{"f":"Niuean","m":"Niuean"},"fra":{"f":"Niu\xe9enne","m":"Niu\xe9en"}}},{"name":{"common":"Netherlands","official":"Kingdom of the Netherlands","native":{"nld":{"official":"Koninkrijk der Nederlanden","common":"Nederland"}}},"tld":[".nl"],"cca2":"NL","ccn3":"528","cca3":"NLD","cioc":"NED","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["1"]},"capital":["Amsterdam"],"altSpellings":["NL","Holland","Nederland","The Netherlands"],"region":"Europe","subregion":"Western Europe","languages":{"nld":"Dutch"},"translations":{"ces":{"official":"Nizozemsk\xe9 kr\xe1lovstv\xed","common":"Nizozemsko"},"deu":{"official":"Niederlande","common":"Niederlande"},"est":{"official":"Madalmaade Kuningriik","common":"Holland"},"fin":{"official":"Alankomaat","common":"Alankomaat"},"fra":{"official":"Pays-Bas","common":"Pays-Bas"},"hrv":{"official":"Holandija","common":"Nizozemska"},"hun":{"official":"Holland Kir\xe1lys\xe1g","common":"Hollandia"},"ita":{"official":"Paesi Bassi","common":"Paesi Bassi"},"jpn":{"official":"オランダ","common":"オランダ"},"kor":{"official":"네덜란드 왕국","common":"네덜란드"},"nld":{"official":"Nederland","common":"Nederland"},"per":{"official":"هلند","common":"هلند"},"pol":{"official":"Kr\xf3lestwo Niderland\xf3w","common":"Holandia"},"por":{"official":"Holanda","common":"Holanda"},"rus":{"official":"Нидерланды","common":"Нидерланды"},"slk":{"official":"Holandsk\xe9 kr\xe1ľovstvo","common":"Holansko"},"spa":{"official":"Pa\xedses Bajos","common":"Pa\xedses Bajos"},"swe":{"official":"Nederl\xe4nderna","common":"Nederl\xe4nderna"},"urd":{"official":"مملکتِ نیدرلینڈز","common":"نیدرلینڈز"},"zho":{"official":"荷兰","common":"荷兰"}},"latlng":[52.5,5.75],"landlocked":false,"borders":["BEL","DEU"],"area":41850,"flag":"\uD83C\uDDF3\uD83C\uDDF1","demonyms":{"eng":{"f":"Dutch","m":"Dutch"},"fra":{"f":"N\xe9erlandaise","m":"N\xe9erlandais"}}},{"name":{"common":"Norway","official":"Kingdom of Norway","native":{"nno":{"official":"Kongeriket Noreg","common":"Noreg"},"nob":{"official":"Kongeriket Norge","common":"Norge"},"smi":{"official":"Norgga gonagasriika","common":"Norgga"}}},"tld":[".no"],"cca2":"NO","ccn3":"578","cca3":"NOR","cioc":"NOR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"NOK":{"name":"Norwegian krone","symbol":"kr"}},"idd":{"root":"+4","suffixes":["7"]},"capital":["Oslo"],"altSpellings":["NO","Norge","Noreg","Kingdom of Norway","Kongeriket Norge","Kongeriket Noreg"],"region":"Europe","subregion":"Northern Europe","languages":{"nno":"Norwegian Nynorsk","nob":"Norwegian Bokm\xe5l","smi":"Sami"},"translations":{"ces":{"official":"Norsk\xe9 kr\xe1lovstv\xed","common":"Norsko"},"deu":{"official":"K\xf6nigreich Norwegen","common":"Norwegen"},"est":{"official":"Norra Kuningriik","common":"Norra"},"fin":{"official":"Norjan kuningaskunta","common":"Norja"},"fra":{"official":"Royaume de Norv\xe8ge","common":"Norv\xe8ge"},"hrv":{"official":"Kraljevina Norveška","common":"Norveška"},"hun":{"official":"Norv\xe9g Kir\xe1lys\xe1g","common":"Norv\xe9gia"},"ita":{"official":"Regno di Norvegia","common":"Norvegia"},"jpn":{"official":"ノルウェー王国","common":"ノルウェー"},"kor":{"official":"노르웨이 왕국","common":"노르웨이"},"nld":{"official":"Koninkrijk Noorwegen","common":"Noorwegen"},"per":{"official":"پادشاهی نروژ","common":"نروژ"},"pol":{"official":"Kr\xf3lestwo Norwegii","common":"Norwegia"},"por":{"official":"Reino da Noruega","common":"Noruega"},"rus":{"official":"Королевство Норвегия","common":"Норвегия"},"slk":{"official":"N\xf3rske kr\xe1ľovstvo","common":"N\xf3rsko"},"spa":{"official":"Reino de Noruega","common":"Noruega"},"swe":{"official":"Konungariket Norge","common":"Norge"},"urd":{"official":"مملکتِ ناروے","common":"ناروے"},"zho":{"official":"挪威王国","common":"挪威"}},"latlng":[62,10],"landlocked":false,"borders":["FIN","SWE","RUS"],"area":323802,"flag":"\uD83C\uDDF3\uD83C\uDDF4","demonyms":{"eng":{"f":"Norwegian","m":"Norwegian"},"fra":{"f":"Norv\xe9gienne","m":"Norv\xe9gien"}}},{"name":{"common":"Nepal","official":"Federal Democratic Republic of Nepal","native":{"nep":{"official":"नेपाल संघीय लोकतान्त्रिक गणतन्त्र","common":"नेपाल"}}},"tld":[".np"],"cca2":"NP","ccn3":"524","cca3":"NPL","cioc":"NEP","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"NPR":{"name":"Nepalese rupee","symbol":"₨"}},"idd":{"root":"+9","suffixes":["77"]},"capital":["Kathmandu"],"altSpellings":["NP","Federal Democratic Republic of Nepal","Loktāntrik Ganatantra Nepāl"],"region":"Asia","subregion":"Southern Asia","languages":{"nep":"Nepali"},"translations":{"ces":{"official":"Federativn\xed demokratick\xe1 republika Nep\xe1l","common":"Nep\xe1l"},"deu":{"official":"Demokratische Bundesrepublik Nepal","common":"Nepal"},"est":{"official":"Nepali Demokraatlik Liitvabariik","common":"Nepal"},"fin":{"official":"Nepalin demokraattinen liittotasavalta","common":"Nepal"},"fra":{"official":"R\xe9publique du N\xe9pal","common":"N\xe9pal"},"hrv":{"official":"Savezna Demokratska Republika Nepal","common":"Nepal"},"hun":{"official":"Nep\xe1li Sz\xf6vets\xe9gi Demokratikus K\xf6zt\xe1rsas\xe1g","common":"Nep\xe1l"},"ita":{"official":"Repubblica federale democratica del Nepal","common":"Nepal"},"jpn":{"official":"ネパール連邦民主共和国","common":"ネパール"},"kor":{"official":"네팔 연방 민주 공화국","common":"네팔"},"nld":{"official":"Federale Democratische Republiek Nepal","common":"Nepal"},"per":{"official":"جمهوری فدرال دموکراتیک نپال","common":"نپال"},"pol":{"official":"Federalna Demokratyczna Republika Nepalu","common":"Nepal"},"por":{"official":"Rep\xfablica Democr\xe1tica Federal do Nepal","common":"Nepal"},"rus":{"official":"Федеративная Демократическая Республика Непал","common":"Непал"},"slk":{"official":"Nep\xe1lska federat\xedvna demokratick\xe1 republika","common":"Nep\xe1l"},"spa":{"official":"Rep\xfablica Democr\xe1tica Federal de Nepal","common":"Nepal"},"swe":{"official":"Demokratiska f\xf6rbundsrepubliken Nepal","common":"Nepal"},"urd":{"official":"وفاقی جمہوری جمہوریہ نیپال","common":"نیپال"},"zho":{"official":"尼泊尔联邦民主共和国","common":"尼泊尔"}},"latlng":[28,84],"landlocked":true,"borders":["CHN","IND"],"area":147181,"flag":"\uD83C\uDDF3\uD83C\uDDF5","demonyms":{"eng":{"f":"Nepalese","m":"Nepalese"},"fra":{"f":"N\xe9palaise","m":"N\xe9palais"}}},{"name":{"common":"Nauru","official":"Republic of Nauru","native":{"eng":{"official":"Republic of Nauru","common":"Nauru"},"nau":{"official":"Republic of Nauru","common":"Nauru"}}},"tld":[".nr"],"cca2":"NR","ccn3":"520","cca3":"NRU","cioc":"NRU","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AUD":{"name":"Australian dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["74"]},"capital":["Yaren"],"altSpellings":["NR","Naoero","Pleasant Island","Republic of Nauru","Ripublik Naoero"],"region":"Oceania","subregion":"Micronesia","languages":{"eng":"English","nau":"Nauru"},"translations":{"ces":{"official":"Republika Nauru","common":"Nauru"},"deu":{"official":"Republik Nauru","common":"Nauru"},"est":{"official":"Nauru Vabariik","common":"Nauru"},"fin":{"official":"Naurun tasavalta","common":"Nauru"},"fra":{"official":"R\xe9publique de Nauru","common":"Nauru"},"hrv":{"official":"Republika Nauru","common":"Nauru"},"hun":{"official":"Naurui K\xf6zt\xe1rsas\xe1g","common":"Nauru"},"ita":{"official":"Repubblica di Nauru","common":"Nauru"},"jpn":{"official":"ナウル共和国","common":"ナウル"},"kor":{"official":"나우루 공화국","common":"나우루"},"nld":{"official":"Republiek Nauru","common":"Nauru"},"per":{"official":"جمهوری نائورو","common":"نائورو"},"pol":{"official":"Republika Nauru","common":"Nauru"},"por":{"official":"Rep\xfablica de Nauru","common":"Nauru"},"rus":{"official":"Республика Науру","common":"Науру"},"slk":{"official":"Naursk\xe1 republika","common":"Nauru"},"spa":{"official":"Rep\xfablica de Nauru","common":"Nauru"},"swe":{"official":"Republiken Nauru","common":"Nauru"},"urd":{"official":"جمہوریہ ناورو","common":"ناورو"},"zho":{"official":"瑙鲁共和国","common":"瑙鲁"}},"latlng":[-0.53333333,166.91666666],"landlocked":false,"borders":[],"area":21,"flag":"\uD83C\uDDF3\uD83C\uDDF7","demonyms":{"eng":{"f":"Nauruan","m":"Nauruan"},"fra":{"f":"Nauruane","m":"Nauruan"}}},{"name":{"common":"New Zealand","official":"New Zealand","native":{"eng":{"official":"New Zealand","common":"New Zealand"},"mri":{"official":"Aotearoa","common":"Aotearoa"},"nzs":{"official":"New Zealand","common":"New Zealand"}}},"tld":[".nz"],"cca2":"NZ","ccn3":"554","cca3":"NZL","cioc":"NZL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"NZD":{"name":"New Zealand dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["4"]},"capital":["Wellington"],"altSpellings":["NZ","Aotearoa"],"region":"Oceania","subregion":"Australia and New Zealand","languages":{"eng":"English","mri":"Māori","nzs":"New Zealand Sign Language"},"translations":{"ces":{"official":"Nov\xfd Z\xe9land","common":"Nov\xfd Z\xe9land"},"deu":{"official":"Neuseeland","common":"Neuseeland"},"est":{"official":"Uus-Meremaa","common":"Uus-Meremaa"},"fin":{"official":"Uusi-Seelanti","common":"Uusi-Seelanti"},"fra":{"official":"Nouvelle-Z\xe9lande","common":"Nouvelle-Z\xe9lande"},"hrv":{"official":"Novi Zeland","common":"Novi Zeland"},"hun":{"official":"\xdaj-Z\xe9land","common":"\xdaj-Z\xe9land"},"ita":{"official":"Nuova Zelanda","common":"Nuova Zelanda"},"jpn":{"official":"ニュージーランド","common":"ニュージーランド"},"kor":{"official":"뉴질랜드","common":"뉴질랜드"},"nld":{"official":"Nieuw Zeeland","common":"Nieuw-Zeeland"},"per":{"official":"نیوزیلند","common":"نیوزیلند"},"pol":{"official":"Nowa Zelandia","common":"Nowa Zelandia"},"por":{"official":"nova Zel\xe2ndia","common":"Nova Zel\xe2ndia"},"rus":{"official":"Новая Зеландия","common":"Новая Зеландия"},"slk":{"official":"Nov\xfd Z\xe9land","common":"Nov\xfd Z\xe9land"},"spa":{"official":"nueva Zelanda","common":"Nueva Zelanda"},"swe":{"official":"Nya Zeeland","common":"Nya Zeeland"},"urd":{"official":"نیوزی لینڈ","common":"نیوزی لینڈ"},"zho":{"official":"新西兰","common":"新西兰"}},"latlng":[-41,174],"landlocked":false,"borders":[],"area":270467,"flag":"\uD83C\uDDF3\uD83C\uDDFF","demonyms":{"eng":{"f":"New Zealander","m":"New Zealander"},"fra":{"f":"Neo-Z\xe9landaise","m":"Neo-Z\xe9landais"}}},{"name":{"common":"Oman","official":"Sultanate of Oman","native":{"ara":{"official":"سلطنة عمان","common":"عمان"}}},"tld":[".om"],"cca2":"OM","ccn3":"512","cca3":"OMN","cioc":"OMA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"OMR":{"name":"Omani rial","symbol":"ر.ع."}},"idd":{"root":"+9","suffixes":["68"]},"capital":["Muscat"],"altSpellings":["OM","Sultanate of Oman","Salṭanat ʻUmān"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Sultan\xe1t Om\xe1n","common":"Om\xe1n"},"deu":{"official":"Sultanat Oman","common":"Oman"},"est":{"official":"Omaani Sultaniriik","common":"Omaan"},"fin":{"official":"Omanin sulttaanikunta","common":"Oman"},"fra":{"official":"Sultanat d\'Oman","common":"Oman"},"hrv":{"official":"Sultanat Oman","common":"Oman"},"hun":{"official":"Om\xe1ni Szultan\xe1tus","common":"Om\xe1n"},"ita":{"official":"Sultanato dell\'Oman","common":"oman"},"jpn":{"official":"オマーン\xb7スルタン国","common":"オマーン"},"kor":{"official":"오만 술탄국","common":"오만"},"nld":{"official":"Sultanaat van Oman","common":"Oman"},"per":{"official":"سلطان‌نشین عُمان","common":"عمان"},"pol":{"official":"Sułtanat Omanu","common":"Oman"},"por":{"official":"Sultanato de Om\xe3","common":"Om\xe3"},"rus":{"official":"Султанат Оман","common":"Оман"},"slk":{"official":"Om\xe1nsky sultan\xe1t","common":"Om\xe1n"},"spa":{"official":"Sultanato de Om\xe1n","common":"Om\xe1n"},"swe":{"official":"Sultanatet Oman","common":"Oman"},"urd":{"official":"سلطنت عمان","common":"عمان"},"zho":{"official":"阿曼苏丹国","common":"阿曼"}},"latlng":[21,57],"landlocked":false,"borders":["SAU","ARE","YEM"],"area":309500,"flag":"\uD83C\uDDF4\uD83C\uDDF2","demonyms":{"eng":{"f":"Omani","m":"Omani"},"fra":{"f":"Omanaise","m":"Omanais"}}},{"name":{"common":"Pakistan","official":"Islamic Republic of Pakistan","native":{"eng":{"official":"Islamic Republic of Pakistan","common":"Pakistan"},"urd":{"official":"اسلامی جمہوریۂ پاكستان","common":"پاكستان"}}},"tld":[".pk"],"cca2":"PK","ccn3":"586","cca3":"PAK","cioc":"PAK","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"PKR":{"name":"Pakistani rupee","symbol":"₨"}},"idd":{"root":"+9","suffixes":["2"]},"capital":["Islamabad"],"altSpellings":["PK","Pākistān","Islamic Republic of Pakistan","Islāmī Jumhūriya\'eh Pākistān"],"region":"Asia","subregion":"Southern Asia","languages":{"eng":"English","urd":"Urdu"},"translations":{"ces":{"official":"P\xe1kist\xe1nsk\xe1 isl\xe1msk\xe1 republika","common":"P\xe1kist\xe1n"},"deu":{"official":"Islamische Republik Pakistan","common":"Pakistan"},"est":{"official":"Pakistani Islamivabariik","common":"Pakistan"},"fin":{"official":"Pakistanin islamilainen tasavalta","common":"Pakistan"},"fra":{"official":"R\xe9publique islamique du Pakistan","common":"Pakistan"},"hrv":{"official":"Islamska Republika Pakistan","common":"Pakistan"},"hun":{"official":"Pakiszt\xe1n","common":"Pakiszt\xe1n"},"ita":{"official":"Repubblica islamica del Pakistan","common":"Pakistan"},"jpn":{"official":"パキスタン","common":"パキスタン"},"kor":{"official":"파키스탄 이슬람 공화국","common":"파키스탄"},"nld":{"official":"Islamitische Republiek Pakistan","common":"Pakistan"},"per":{"official":"جمهوری اسلامی پاکستان","common":"پاکستان"},"pol":{"official":"Islamska Republika Pakistanu","common":"Pakistan"},"por":{"official":"Rep\xfablica Isl\xe2mica do Paquist\xe3o","common":"Paquist\xe3o"},"rus":{"official":"Исламская Республика Пакистан","common":"Пакистан"},"slk":{"official":"Pakistansk\xe1 islamsk\xe1 republika","common":"Pakistan"},"spa":{"official":"Rep\xfablica Isl\xe1mica de Pakist\xe1n","common":"Pakist\xe1n"},"swe":{"official":"Islamiska republiken Pakistan","common":"Pakistan"},"urd":{"official":"اسلامی جمہوریہ پاکستان","common":"پاکستان"},"zho":{"official":"巴基斯坦伊斯兰共和国","common":"巴基斯坦"}},"latlng":[30,70],"landlocked":false,"borders":["AFG","CHN","IND","IRN"],"area":881912,"flag":"\uD83C\uDDF5\uD83C\uDDF0","demonyms":{"eng":{"f":"Pakistani","m":"Pakistani"},"fra":{"f":"Pakistanaise","m":"Pakistanais"}}},{"name":{"common":"Panama","official":"Republic of Panama","native":{"spa":{"official":"Rep\xfablica de Panam\xe1","common":"Panam\xe1"}}},"tld":[".pa"],"cca2":"PA","ccn3":"591","cca3":"PAN","cioc":"PAN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"PAB":{"name":"Panamanian balboa","symbol":"B/."},"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+5","suffixes":["07"]},"capital":["Panama City"],"altSpellings":["PA","Republic of Panama","Rep\xfablica de Panam\xe1"],"region":"Americas","subregion":"Central America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Panamsk\xe1 republika","common":"Panama"},"deu":{"official":"Republik Panama","common":"Panama"},"est":{"official":"Panama Vabariik","common":"Panama"},"fin":{"official":"Panaman tasavalta","common":"Panama"},"fra":{"official":"R\xe9publique du Panama","common":"Panama"},"hrv":{"official":"Republika Panama","common":"Panama"},"hun":{"official":"Panamai K\xf6zt\xe1rsas\xe1g","common":"Panama"},"ita":{"official":"Repubblica di Panama","common":"Panama"},"jpn":{"official":"パナマ共和国","common":"パナマ"},"kor":{"official":"파나마 공화국","common":"파나마"},"nld":{"official":"Republiek Panama","common":"Panama"},"per":{"official":"جمهوری پاناما","common":"پاناما"},"pol":{"official":"Republika Panamy","common":"Panama"},"por":{"official":"Rep\xfablica do Panam\xe1","common":"Panam\xe1"},"rus":{"official":"Республика Панама","common":"Панама"},"slk":{"official":"Panamsk\xe1 republika","common":"Panama"},"spa":{"official":"Rep\xfablica de Panam\xe1","common":"Panam\xe1"},"swe":{"official":"Republiken Panama","common":"Panama"},"urd":{"official":"جمہوریہ پاناما","common":"پاناما"},"zho":{"official":"巴拿马共和国","common":"巴拿马"}},"latlng":[9,-80],"landlocked":false,"borders":["COL","CRI"],"area":75417,"flag":"\uD83C\uDDF5\uD83C\uDDE6","demonyms":{"eng":{"f":"Panamanian","m":"Panamanian"},"fra":{"f":"Panam\xe9enne","m":"Panam\xe9en"}}},{"name":{"common":"Pitcairn Islands","official":"Pitcairn Group of Islands","native":{"eng":{"official":"Pitcairn Group of Islands","common":"Pitcairn Islands"}}},"tld":[".pn"],"cca2":"PN","ccn3":"612","cca3":"PCN","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"NZD":{"name":"New Zealand dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["4"]},"capital":["Adamstown"],"altSpellings":["PN","Pitcairn","Pitcairn Henderson Ducie and Oeno Islands"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English"},"translations":{"ces":{"official":"Pitcairnovy ostrovy","common":"Pitcairnovy ostrovy"},"deu":{"official":"Pitcairninseln","common":"Pitcairninseln"},"est":{"official":"Pitcairni, Hendersoni, Ducie ja Oeno saar","common":"Pitcairn"},"fin":{"official":"Pitcairn","common":"Pitcairn"},"fra":{"official":"Groupe d\'\xeeles Pitcairn","common":"\xceles Pitcairn"},"hrv":{"official":"Pitcairn skupine otoka","common":"Pitcairnovo otočje"},"hun":{"official":"Pitcairn-szigetek","common":"Pitcairn-szigetek"},"ita":{"official":"Pitcairn gruppo di isole","common":"Isole Pitcairn"},"jpn":{"official":"島のピトケアングループ","common":"ピトケアン"},"kor":{"official":"핏케언 제도","common":"핏케언 제도"},"nld":{"official":"Pitcairn groep eilanden","common":"Pitcairneilanden"},"per":{"official":"جزایر پیت‌کرن","common":"جزایر پیت‌کرن"},"pol":{"official":"Wyspy Pitcairn, Henderson, Ducie i Oeno","common":"Pitcairn"},"por":{"official":"Pitcairn grupo de ilhas","common":"Ilhas Pitcairn"},"rus":{"official":"Питкэрн группа островов","common":"Острова Питкэрн"},"slk":{"official":"Pitcairnove ostrovy","common":"Pitcairnove ostrovy"},"spa":{"official":"Grupo de Islas Pitcairn","common":"Islas Pitcairn"},"swe":{"official":"Pitcairn\xf6arna","common":"Pitcairn\xf6arna"},"urd":{"official":"پٹکیرن جزائر","common":"جزائر پٹکیرن"},"zho":{"official":"皮特凯恩群岛","common":"皮特凯恩群岛"}},"latlng":[-25.06666666,-130.1],"landlocked":false,"borders":[],"area":47,"flag":"\uD83C\uDDF5\uD83C\uDDF3","demonyms":{"eng":{"f":"Pitcairn Islander","m":"Pitcairn Islander"},"fra":{"f":"Pitcairnaise","m":"Pitcairnais"}}},{"name":{"common":"Peru","official":"Republic of Peru","native":{"aym":{"official":"Piruw Suyu","common":"Piruw"},"que":{"official":"Piruw Ripuwlika","common":"Piruw"},"spa":{"official":"Rep\xfablica del Per\xfa","common":"Per\xfa"}}},"tld":[".pe"],"cca2":"PE","ccn3":"604","cca3":"PER","cioc":"PER","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"PEN":{"name":"Peruvian sol","symbol":"S/."}},"idd":{"root":"+5","suffixes":["1"]},"capital":["Lima"],"altSpellings":["PE","Republic of Peru","Rep\xfablica del Per\xfa"],"region":"Americas","subregion":"South America","languages":{"aym":"Aymara","que":"Quechua","spa":"Spanish"},"translations":{"ces":{"official":"Peru\xe1nsk\xe1 republika","common":"Peru"},"deu":{"official":"Republik Peru","common":"Peru"},"est":{"official":"Peruu Vabariik","common":"Peruu"},"fin":{"official":"Perun tasavalta","common":"Peru"},"fra":{"official":"R\xe9publique du P\xe9rou","common":"P\xe9rou"},"hrv":{"official":"Republika Peru","common":"Peru"},"hun":{"official":"Perui K\xf6zt\xe1rsas\xe1g","common":"Peru"},"ita":{"official":"Repubblica del Per\xf9","common":"Per\xf9"},"jpn":{"official":"ペルー共和国","common":"ペルー"},"kor":{"official":"페루 공화국","common":"페루"},"nld":{"official":"Republiek Peru","common":"Peru"},"per":{"official":"جمهوری پرو","common":"پرو"},"pol":{"official":"Republika Peru","common":"Peru"},"por":{"official":"Rep\xfablica do Peru","common":"Per\xfa"},"rus":{"official":"Республика Перу","common":"Перу"},"slk":{"official":"Peru\xe1nska republika","common":"Peru"},"spa":{"official":"Rep\xfablica de Per\xfa","common":"Per\xfa"},"swe":{"official":"Republiken Peru","common":"Peru"},"urd":{"official":"جمہوریہ پیرو","common":"پیرو"},"zho":{"official":"秘鲁共和国","common":"秘鲁"}},"latlng":[-10,-76],"landlocked":false,"borders":["BOL","BRA","CHL","COL","ECU"],"area":1285216,"flag":"\uD83C\uDDF5\uD83C\uDDEA","demonyms":{"eng":{"f":"Peruvian","m":"Peruvian"},"fra":{"f":"P\xe9ruvienne","m":"P\xe9ruvien"}}},{"name":{"common":"Philippines","official":"Republic of the Philippines","native":{"eng":{"official":"Republic of the Philippines","common":"Philippines"},"fil":{"official":"Republic of the Philippines","common":"Pilipinas"}}},"tld":[".ph"],"cca2":"PH","ccn3":"608","cca3":"PHL","cioc":"PHI","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"PHP":{"name":"Philippine peso","symbol":"₱"}},"idd":{"root":"+6","suffixes":["3"]},"capital":["Manila"],"altSpellings":["PH","Republic of the Philippines","Rep\xfablika ng Pilipinas"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"eng":"English","fil":"Filipino"},"translations":{"ces":{"official":"Filip\xednsk\xe1 republika","common":"Filip\xedny"},"deu":{"official":"Republik der Philippinen","common":"Philippinen"},"est":{"official":"Filipiini Vabariik","common":"Filipiinid"},"fin":{"official":"Filippiinien tasavalta","common":"Filippiinit"},"fra":{"official":"R\xe9publique des Philippines","common":"Philippines"},"hrv":{"official":"Republika Filipini","common":"Filipini"},"hun":{"official":"F\xfcl\xf6p-szigeteki K\xf6zt\xe1rsas\xe1g","common":"F\xfcl\xf6p-szigetek"},"ita":{"official":"Repubblica delle Filippine","common":"Filippine"},"jpn":{"official":"フィリピン共和国","common":"フィリピン"},"kor":{"official":"필리핀 공화국","common":"필리핀"},"nld":{"official":"Republiek der Filipijnen","common":"Filipijnen"},"per":{"official":"جمهوری فیلیپین","common":"فیلیپین"},"pol":{"official":"Republika Filipin","common":"Filipiny"},"por":{"official":"Rep\xfablica das Filipinas","common":"Filipinas"},"rus":{"official":"Республика Филиппины","common":"Филиппины"},"slk":{"official":"Filip\xednska republika","common":"Filip\xedny"},"spa":{"official":"Rep\xfablica de las Filipinas","common":"Filipinas"},"swe":{"official":"Republiken Filippinerna","common":"Filippinerna"},"urd":{"official":"جمہوریہ فلپائن","common":"فلپائن"},"zho":{"official":"菲律宾共和国","common":"菲律宾"}},"latlng":[13,122],"landlocked":false,"borders":[],"area":342353,"flag":"\uD83C\uDDF5\uD83C\uDDED","demonyms":{"eng":{"f":"Filipino","m":"Filipino"},"fra":{"f":"Philippine","m":"Philippin"}}},{"name":{"common":"Palau","official":"Republic of Palau","native":{"eng":{"official":"Republic of Palau","common":"Palau"},"pau":{"official":"Beluu er a Belau","common":"Belau"}}},"tld":[".pw"],"cca2":"PW","ccn3":"585","cca3":"PLW","cioc":"PLW","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["80"]},"capital":["Ngerulmud"],"altSpellings":["PW","Republic of Palau","Beluu er a Belau"],"region":"Oceania","subregion":"Micronesia","languages":{"eng":"English","pau":"Palauan"},"translations":{"ces":{"official":"Republika Palau","common":"Palau"},"deu":{"official":"Republik Palau","common":"Palau"},"est":{"official":"Belau Vabariik","common":"Belau"},"fin":{"official":"Palaun tasavalta","common":"Palau"},"fra":{"official":"R\xe9publique des Palaos (Palau)","common":"Palaos (Palau)"},"hrv":{"official":"Republika Palau","common":"Palau"},"hun":{"official":"Palaui K\xf6zt\xe1rsas\xe1g","common":"Palau"},"ita":{"official":"Repubblica di Palau","common":"Palau"},"jpn":{"official":"パラオ共和国","common":"パラオ"},"kor":{"official":"팔라우 공화국","common":"팔라우"},"nld":{"official":"Republiek van Palau","common":"Palau"},"per":{"official":"جمهوری پالائو","common":"پالائو"},"pol":{"official":"Republika Palau","common":"Palau"},"por":{"official":"Rep\xfablica de Palau","common":"Palau"},"rus":{"official":"Республика Палау","common":"Палау"},"slk":{"official":"Palausk\xe1 republika","common":"Palau"},"spa":{"official":"Rep\xfablica de Palau","common":"Palau"},"swe":{"official":"Republiken Palau","common":"Palau"},"urd":{"official":"جمہوریہ پلاؤ","common":"پلاؤ"},"zho":{"official":"帕劳共和国","common":"帕劳"}},"latlng":[7.5,134.5],"landlocked":false,"borders":[],"area":459,"flag":"\uD83C\uDDF5\uD83C\uDDFC","demonyms":{"eng":{"f":"Palauan","m":"Palauan"},"fra":{"f":"Paluane","m":"Paluan"}}},{"name":{"common":"Papua New Guinea","official":"Independent State of Papua New Guinea","native":{"eng":{"official":"Independent State of Papua New Guinea","common":"Papua New Guinea"},"hmo":{"official":"Independen Stet bilong Papua Niugini","common":"Papua Niu Gini"},"tpi":{"official":"Independen Stet bilong Papua Niugini","common":"Papua Niugini"}}},"tld":[".pg"],"cca2":"PG","ccn3":"598","cca3":"PNG","cioc":"PNG","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"PGK":{"name":"Papua New Guinean kina","symbol":"K"}},"idd":{"root":"+6","suffixes":["75"]},"capital":["Port Moresby"],"altSpellings":["PG","Independent State of Papua New Guinea","Independen Stet bilong Papua Niugini"],"region":"Oceania","subregion":"Melanesia","languages":{"eng":"English","hmo":"Hiri Motu","tpi":"Tok Pisin"},"translations":{"ces":{"official":"Nez\xe1visl\xfd st\xe1t Papua Nov\xe1 Guinea","common":"Papua-Nov\xe1 Guinea"},"deu":{"official":"Unabh\xe4ngiger Staat Papua-Neuguinea","common":"Papua-Neuguinea"},"est":{"official":"Paapua Uus-Guinea Iseseisvusriik","common":"Paapua Uus-Guinea"},"fin":{"official":"Papua-Uuden-Guinean Itsen\xe4inen valtio","common":"Papua-Uusi-Guinea"},"fra":{"official":"\xc9tat ind\xe9pendant de Papouasie-Nouvelle-Guin\xe9e","common":"Papouasie-Nouvelle-Guin\xe9e"},"hrv":{"official":"Nezavisna Država Papui Novoj Gvineji","common":"Papua Nova Gvineja"},"hun":{"official":"P\xe1pua \xdaj-Guinea F\xfcggetlen \xc1llam","common":"P\xe1pua \xdaj-Guinea"},"ita":{"official":"Stato indipendente di Papua Nuova Guinea","common":"Papua Nuova Guinea"},"jpn":{"official":"パプアニューギニア独立国","common":"パプアニューギニア"},"kor":{"official":"파푸아뉴기니 독립국","common":"파푸아뉴기니"},"nld":{"official":"Onafhankelijke Staat Papoea -Nieuw-Guinea","common":"Papoea-Nieuw-Guinea"},"per":{"official":"مملکت مستقل پاپوآ گینهٔ نو","common":"پاپوآ گینه نو"},"pol":{"official":"Niezależne Państwo Papui-Nowej Gwinei","common":"Papua-Nowa Gwinea"},"por":{"official":"Estado Independente da Papua Nova Guin\xe9","common":"Papua Nova Guin\xe9"},"rus":{"official":"Независимое Государство Папуа-Новой Гвинеи","common":"Папуа — Новая Гвинея"},"slk":{"official":"Nez\xe1visl\xfd št\xe1t Papua-Nov\xe1 Guinea","common":"Papua-Nov\xe1 Guinea"},"spa":{"official":"Estado Independiente de Pap\xfaa Nueva Guinea","common":"Pap\xfaa Nueva Guinea"},"swe":{"official":"Den oberoende staten Papua Nya Guinea","common":"Papua Nya Guinea"},"urd":{"official":"آزاد ریاستِ پاپوا نیو گنی","common":"پاپوا نیو گنی"},"zho":{"official":"巴布亚新几内亚","common":"巴布亚新几内亚"}},"latlng":[-6,147],"landlocked":false,"borders":["IDN"],"area":462840,"flag":"\uD83C\uDDF5\uD83C\uDDEC","demonyms":{"eng":{"f":"Papua New Guinean","m":"Papua New Guinean"},"fra":{"f":"Papouasienne","m":"Papouasien"}}},{"name":{"common":"Poland","official":"Republic of Poland","native":{"pol":{"official":"Rzeczpospolita Polska","common":"Polska"}}},"tld":[".pl"],"cca2":"PL","ccn3":"616","cca3":"POL","cioc":"POL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"PLN":{"name":"Polish złoty","symbol":"zł"}},"idd":{"root":"+4","suffixes":["8"]},"capital":["Warsaw"],"altSpellings":["PL","Republic of Poland","Rzeczpospolita Polska"],"region":"Europe","subregion":"Central Europe","languages":{"pol":"Polish"},"translations":{"ces":{"official":"Polsk\xe1 republika","common":"Polsko"},"deu":{"official":"Republik Polen","common":"Polen"},"est":{"official":"Poola Vabariik","common":"Poola"},"fin":{"official":"Puolan tasavalta","common":"Puola"},"fra":{"official":"R\xe9publique de Pologne","common":"Pologne"},"hrv":{"official":"Republika Poljska","common":"Poljska"},"hun":{"official":"Lengyel K\xf6zt\xe1rsas\xe1g","common":"Lengyelorsz\xe1g"},"ita":{"official":"Repubblica di Polonia","common":"Polonia"},"jpn":{"official":"ポーランド共和国","common":"ポーランド"},"kor":{"official":"폴란드 공화국","common":"폴란드"},"nld":{"official":"Republiek Polen","common":"Polen"},"per":{"official":"جمهوری لهستان","common":"لهستان"},"pol":{"official":"Rzeczpospolita Polska","common":"Polska"},"por":{"official":"Rep\xfablica da Pol\xf3nia","common":"Pol\xf3nia"},"rus":{"official":"Республика Польша","common":"Польша"},"slk":{"official":"Poľsk\xe1 republika","common":"Poľsko"},"spa":{"official":"Rep\xfablica de Polonia","common":"Polonia"},"swe":{"official":"Republiken Polen","common":"Polen"},"urd":{"official":"جمہوریہ پولینڈ","common":"پولینڈ"},"zho":{"official":"波兰共和国","common":"波兰"}},"latlng":[52,20],"landlocked":false,"borders":["BLR","CZE","DEU","LTU","RUS","SVK","UKR"],"area":312679,"flag":"\uD83C\uDDF5\uD83C\uDDF1","demonyms":{"eng":{"f":"Polish","m":"Polish"},"fra":{"f":"Polonaise","m":"Polonais"}}},{"name":{"common":"Puerto Rico","official":"Commonwealth of Puerto Rico","native":{"eng":{"official":"Commonwealth of Puerto Rico","common":"Puerto Rico"},"spa":{"official":"Estado Libre Asociado de Puerto Rico","common":"Puerto Rico"}}},"tld":[".pr"],"cca2":"PR","ccn3":"630","cca3":"PRI","cioc":"PUR","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["787","939"]},"capital":["San Juan"],"altSpellings":["PR","Commonwealth of Puerto Rico","Estado Libre Asociado de Puerto Rico"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English","spa":"Spanish"},"translations":{"ces":{"official":"Portoriko","common":"Portoriko"},"deu":{"official":"Freistaat Puerto Rico","common":"Puerto Rico"},"est":{"official":"Puerto Rico \xdchendus","common":"Puerto Rico"},"fin":{"official":"Puerto Rico","common":"Puerto Rico"},"fra":{"official":"Porto Rico","common":"Porto Rico"},"hrv":{"official":"Zajednica Puerto Rico","common":"Portoriko"},"hun":{"official":"Puerto Rico","common":"Puerto Rico"},"ita":{"official":"Commonwealth di Porto Rico","common":"Porto Rico"},"jpn":{"official":"プエルトリコのコモンウェルス","common":"プエルトリコ"},"kor":{"official":"푸에르토리코","common":"푸에르토리코"},"nld":{"official":"Gemenebest van Puerto Rico","common":"Puerto Rico"},"per":{"official":"قلمرو همسود پورتوریکو","common":"پورتوریکو"},"pol":{"official":"Wolne Stowarzyszone Państwo Portoryko","common":"Portoryko"},"por":{"official":"Commonwealth of Puerto Rico","common":"Porto Rico"},"rus":{"official":"Содружество Пуэрто-Рико","common":"Пуэрто-Рико"},"slk":{"official":"Portorick\xe9 spoločenstvo","common":"Portoriko"},"spa":{"official":"Asociado de Puerto Rico","common":"Puerto Rico"},"swe":{"official":"Puerto Rico","common":"Puerto Rico"},"urd":{"official":" دولتِ مشترکہ پورٹو ریکو","common":"پورٹو ریکو"},"zho":{"official":"波多黎各联邦","common":"波多黎各"}},"latlng":[18.25,-66.5],"landlocked":false,"borders":[],"area":8870,"flag":"\uD83C\uDDF5\uD83C\uDDF7","demonyms":{"eng":{"f":"Puerto Rican","m":"Puerto Rican"},"fra":{"f":"Portoricaine","m":"Portoricain"}}},{"name":{"common":"North Korea","official":"Democratic People\'s Republic of Korea","native":{"kor":{"official":"조선민주주의인민공화국","common":"조선"}}},"tld":[".kp"],"cca2":"KP","ccn3":"408","cca3":"PRK","cioc":"PRK","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"KPW":{"name":"North Korean won","symbol":"₩"}},"idd":{"root":"+8","suffixes":["50"]},"capital":["Pyongyang"],"altSpellings":["KP","Democratic People\'s Republic of Korea","DPRK","조선민주주의인민공화국","Chosŏn Minjujuŭi Inmin Konghwaguk","Korea, Democratic People\'s Republic of","북한","북조선"],"region":"Asia","subregion":"Eastern Asia","languages":{"kor":"Korean"},"translations":{"ces":{"official":"Korejsk\xe1 lidově demokratick\xe1 republika","common":"Severn\xed Korea"},"deu":{"official":"Demokratische Volksrepublik Korea","common":"Nordkorea"},"est":{"official":"Korea Rahvademokraatlik Vabariik","common":"P\xf5hja-Korea"},"fin":{"official":"Korean demokraattinen kansantasavalta","common":"Pohjois-Korea"},"fra":{"official":"R\xe9publique populaire d\xe9mocratique de Cor\xe9e","common":"Cor\xe9e du Nord"},"hrv":{"official":"Demokratska Narodna Republika Koreja","common":"Sjeverna Koreja"},"hun":{"official":"Koreai N\xe9pi Demokratikus K\xf6zt\xe1rsas\xe1g","common":"\xc9szak-Korea"},"ita":{"official":"Repubblica democratica popolare di Corea","common":"Corea del Nord"},"jpn":{"official":"朝鮮民主主義人民共和国","common":"朝鮮民主主義人民共和国"},"kor":{"official":"조선민주주의인민공화국","common":"조선"},"nld":{"official":"Democratische Volksrepubliek Korea","common":"Noord-Korea"},"per":{"official":"جمهوری دموکراتیک خلق کره","common":"کُره شمالی"},"pol":{"official":"Koreańska Republika Ludowo-Demokratyczna","common":"Korea P\xf3łnocna"},"por":{"official":"Rep\xfablica Popular Democr\xe1tica da Coreia","common":"Coreia do Norte"},"rus":{"official":"Корейская Народно-Демократическая Республика Корея","common":"Северная Корея"},"slk":{"official":"K\xf3rejsk\xe1 ľudovodemokratick\xe1 republika","common":"K\xf3rejsk\xe1 ľudovodemokratick\xe1 republika (KĽR, Severn\xe1 K\xf3rea)"},"spa":{"official":"Rep\xfablica Popular Democr\xe1tica de Corea","common":"Corea del Norte"},"swe":{"official":"Demokratiska Folkrepubliken Korea","common":"Nordkorea"},"urd":{"official":"جمہوری عوامی جمہوریہ کوریا","common":"شمالی کوریا"},"zho":{"official":"朝鲜人民民主共和国","common":"朝鲜"}},"latlng":[40,127],"landlocked":false,"borders":["CHN","KOR","RUS"],"area":120538,"flag":"\uD83C\uDDF0\uD83C\uDDF5","demonyms":{"eng":{"f":"North Korean","m":"North Korean"},"fra":{"f":"Nord-cor\xe9enne","m":"Nord-cor\xe9en"}}},{"name":{"common":"Portugal","official":"Portuguese Republic","native":{"por":{"official":"Rep\xfablica portugu\xeas","common":"Portugal"}}},"tld":[".pt"],"cca2":"PT","ccn3":"620","cca3":"PRT","cioc":"POR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["51"]},"capital":["Lisbon"],"altSpellings":["PT","Portuguesa","Portuguese Republic","Rep\xfablica Portuguesa"],"region":"Europe","subregion":"Southern Europe","languages":{"por":"Portuguese"},"translations":{"ces":{"official":"Portugalsk\xe1 republika","common":"Portugalsko"},"deu":{"official":"Portugiesische Republik","common":"Portugal"},"est":{"official":"Portugali Vabariik","common":"Portugal"},"fin":{"official":"Portugalin tasavalta","common":"Portugali"},"fra":{"official":"R\xe9publique portugaise","common":"Portugal"},"hrv":{"official":"Portugalska Republika","common":"Portugal"},"hun":{"official":"Portug\xe1l K\xf6zt\xe1rsas\xe1g","common":"Portug\xe1lia"},"ita":{"official":"Repubblica portoghese","common":"Portogallo"},"jpn":{"official":"ポルトガル共和国","common":"ポルトガル"},"kor":{"official":"포르투갈 공화국","common":"포르투갈"},"nld":{"official":"Portugese Republiek","common":"Portugal"},"per":{"official":"جمهوری پرتغال","common":"پرتغال"},"pol":{"official":"Republika Portugalska","common":"Portugalia"},"por":{"official":"Rep\xfablica portugu\xeas","common":"Portugal"},"rus":{"official":"Португальская Республика","common":"Португалия"},"slk":{"official":"Portugalsk\xe1 republika","common":"Portugalsko"},"spa":{"official":"Rep\xfablica Portuguesa","common":"Portugal"},"swe":{"official":"Republiken Portugal","common":"Portugal"},"urd":{"official":"جمہوریہ پرتگال","common":"پرتگال"},"zho":{"official":"葡萄牙共和国","common":"葡萄牙"}},"latlng":[39.5,-8],"landlocked":false,"borders":["ESP"],"area":92090,"flag":"\uD83C\uDDF5\uD83C\uDDF9","demonyms":{"eng":{"f":"Portuguese","m":"Portuguese"},"fra":{"f":"Portugaise","m":"Portugais"}}},{"name":{"common":"Paraguay","official":"Republic of Paraguay","native":{"grn":{"official":"Tet\xe3 Paragu\xe1i","common":"Paragu\xe1i"},"spa":{"official":"Rep\xfablica de Paraguay","common":"Paraguay"}}},"tld":[".py"],"cca2":"PY","ccn3":"600","cca3":"PRY","cioc":"PAR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"PYG":{"name":"Paraguayan guaran\xed","symbol":"₲"}},"idd":{"root":"+5","suffixes":["95"]},"capital":["Asunci\xf3n"],"altSpellings":["PY","Republic of Paraguay","Rep\xfablica del Paraguay","Tet\xe3 Paragu\xe1i"],"region":"Americas","subregion":"South America","languages":{"grn":"Guaran\xed","spa":"Spanish"},"translations":{"ces":{"official":"Paraguaysk\xe1 republika","common":"Paraguay"},"deu":{"official":"Republik Paraguay","common":"Paraguay"},"est":{"official":"Paraguay Vabariik","common":"Paraguay"},"fin":{"official":"Paraguayn tasavalta","common":"Paraguay"},"fra":{"official":"R\xe9publique du Paraguay","common":"Paraguay"},"hrv":{"official":"Republika Paragvaj","common":"Paragvaj"},"hun":{"official":"Paraguayi K\xf6zt\xe1rsas\xe1g","common":"Paraguay"},"ita":{"official":"Repubblica del Paraguay","common":"Paraguay"},"jpn":{"official":"パラグアイ共和国","common":"パラグアイ"},"kor":{"official":"파라과이 공화국","common":"파라과이"},"nld":{"official":"Republiek Paraguay","common":"Paraguay"},"per":{"official":"جمهوری پاراگوئه","common":"پاراگوئه"},"pol":{"official":"Republika Paragwaju","common":"Paragwaj"},"por":{"official":"Rep\xfablica do Paraguai","common":"Paraguai"},"rus":{"official":"Республика Парагвай","common":"Парагвай"},"slk":{"official":"Paraguajsk\xe1 republika","common":"Paraguaj"},"spa":{"official":"Rep\xfablica de Paraguay","common":"Paraguay"},"swe":{"official":"Republiken Paraguay","common":"Paraguay"},"urd":{"official":"جمہوریہ پیراگوئے","common":"پیراگوئے"},"zho":{"official":"巴拉圭共和国","common":"巴拉圭"}},"latlng":[-23,-58],"landlocked":true,"borders":["ARG","BOL","BRA"],"area":406752,"flag":"\uD83C\uDDF5\uD83C\uDDFE","demonyms":{"eng":{"f":"Paraguayan","m":"Paraguayan"},"fra":{"f":"Paraguayenne","m":"Paraguayen"}}},{"name":{"common":"Palestine","official":"State of Palestine","native":{"ara":{"official":"دولة فلسطين","common":"فلسطين"}}},"tld":[".ps","فلسطين."],"cca2":"PS","ccn3":"275","cca3":"PSE","cioc":"PLE","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EGP":{"name":"Egyptian pound","symbol":"E\xa3"},"ILS":{"name":"Israeli new shekel","symbol":"₪"},"JOD":{"name":"Jordanian dinar","symbol":"JD"}},"idd":{"root":"+9","suffixes":["70"]},"capital":["Ramallah"],"altSpellings":["PS","Palestine, State of","State of Palestine","Dawlat Filasṭin"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"St\xe1t Palestina","common":"Palestina"},"deu":{"official":"Staat Pal\xe4stina","common":"Pal\xe4stina"},"est":{"official":"Palestiina Riik","common":"Palestiina"},"fin":{"official":"Palestiinan valtio","common":"Palestiina"},"fra":{"official":"\xc9tat de Palestine","common":"Palestine"},"hrv":{"official":"State of Palestine","common":"Palestina"},"hun":{"official":"Palesztin Auton\xf3mia","common":"Palesztina"},"ita":{"official":"Stato di Palestina","common":"Palestina"},"jpn":{"official":"パレスチナ自治政府","common":"パレスチナ"},"kor":{"official":"팔레스타인국","common":"팔레스타인"},"nld":{"official":"Staat Palestina","common":"Palestijnse gebieden"},"per":{"official":"دولت فلسطین","common":"فلسطین"},"pol":{"official":"Państwo Palestyna","common":"Palestyna"},"por":{"official":"Estado da Palestina","common":"Palestina"},"rus":{"official":"Государство Палестина","common":"Палестина"},"slk":{"official":"Palest\xednsky št\xe1t","common":"Palest\xedna"},"spa":{"official":"Estado de Palestina","common":"Palestina"},"swe":{"official":"Palestina","common":"Palestina"},"urd":{"official":"ریاستِ فلسطین","common":"فلسطین"},"zho":{"official":"巴勒斯坦国","common":"巴勒斯坦"}},"latlng":[31.9,35.2],"landlocked":false,"borders":["ISR","EGY","JOR"],"area":6220,"flag":"\uD83C\uDDF5\uD83C\uDDF8","demonyms":{"eng":{"f":"Palestinian","m":"Palestinian"},"fra":{"f":"Palestinienne","m":"Palestinien"}}},{"name":{"common":"French Polynesia","official":"French Polynesia","native":{"fra":{"official":"Polyn\xe9sie fran\xe7aise","common":"Polyn\xe9sie fran\xe7aise"}}},"tld":[".pf"],"cca2":"PF","ccn3":"258","cca3":"PYF","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"XPF":{"name":"CFP franc","symbol":"₣"}},"idd":{"root":"+6","suffixes":["89"]},"capital":["Papeetē"],"altSpellings":["PF","Polyn\xe9sie fran\xe7aise","French Polynesia","Pōrīnetia Farāni"],"region":"Oceania","subregion":"Polynesia","languages":{"fra":"French"},"translations":{"ces":{"official":"Francouzsk\xe1 Polyn\xe9sie","common":"Francouzsk\xe1 Polyn\xe9sie"},"deu":{"official":"Franz\xf6sisch-Polynesien","common":"Franz\xf6sisch-Polynesien"},"est":{"official":"Prantsuse Pol\xfcneesia","common":"Prantsuse Pol\xfcneesia"},"fin":{"official":"Ranskan Polynesia","common":"Ranskan Polynesia"},"fra":{"official":"Polyn\xe9sie fran\xe7aise","common":"Polyn\xe9sie fran\xe7aise"},"hrv":{"official":"Francuska Polinezija","common":"Francuska Polinezija"},"hun":{"official":"Francia Polin\xe9zia","common":"Francia Polin\xe9zia"},"ita":{"official":"Polinesia Francese","common":"Polinesia Francese"},"jpn":{"official":"フランス領ポリネシア","common":"フランス領ポリネシア"},"kor":{"official":"프랑스령 폴리네시아","common":"프랑스령 폴리네시아"},"nld":{"official":"Frans-Polynesi\xeb","common":"Frans-Polynesi\xeb"},"per":{"official":"پُلی‌نِزی فرانسه","common":"پُلی‌نِزی فرانسه"},"pol":{"official":"Polinezja Francuska","common":"Polinezja Francuska"},"por":{"official":"Polin\xe9sia Francesa","common":"Polin\xe9sia Francesa"},"rus":{"official":"Французская Полинезия","common":"Французская Полинезия"},"slk":{"official":"Franc\xfazska Polyn\xe9zia","common":"Franc\xfazska Polyn\xe9zia"},"spa":{"official":"Polinesia franc\xe9s","common":"Polinesia Francesa"},"swe":{"official":"Franska Polynesien","common":"Franska Polynesien"},"urd":{"official":"فرانسیسی پولینیشیا","common":"فرانسیسی پولینیشیا"},"zho":{"official":"法属波利尼西亚","common":"法属波利尼西亚"}},"latlng":[-15,-140],"landlocked":false,"borders":[],"area":4167,"flag":"\uD83C\uDDF5\uD83C\uDDEB","demonyms":{"eng":{"f":"French Polynesian","m":"French Polynesian"},"fra":{"f":"Polyn\xe9sienne","m":"Polyn\xe9sien"}}},{"name":{"common":"Qatar","official":"State of Qatar","native":{"ara":{"official":"دولة قطر","common":"قطر"}}},"tld":[".qa","قطر."],"cca2":"QA","ccn3":"634","cca3":"QAT","cioc":"QAT","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"QAR":{"name":"Qatari riyal","symbol":"ر.ق"}},"idd":{"root":"+9","suffixes":["74"]},"capital":["Doha"],"altSpellings":["QA","State of Qatar","Dawlat Qaṭar"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"St\xe1t Katar","common":"Katar"},"deu":{"official":"Staat Katar","common":"Katar"},"est":{"official":"Katari Riik","common":"Katar"},"fin":{"official":"Qatarin valtio","common":"Qatar"},"fra":{"official":"\xc9tat du Qatar","common":"Qatar"},"hrv":{"official":"Država Katar","common":"Katar"},"hun":{"official":"Katari \xc1llam","common":"Katar"},"ita":{"official":"Stato del Qatar","common":"Qatar"},"jpn":{"official":"カタール国","common":"カタール"},"kor":{"official":"카타르국","common":"카타르"},"nld":{"official":"Staat Qatar","common":"Qatar"},"per":{"official":"دولت قطر","common":"قطر"},"pol":{"official":"Państwo Katar","common":"Katar"},"por":{"official":"Estado do Qatar","common":"Catar"},"rus":{"official":"Государство Катар","common":"Катар"},"slk":{"official":"Katarsk\xfd št\xe1t","common":"Katar"},"spa":{"official":"Estado de Qatar","common":"Catar"},"swe":{"official":"Staten Qatar","common":"Qatar"},"urd":{"official":"ریاستِ قطر","common":"قطر"},"zho":{"official":"卡塔尔国","common":"卡塔尔"}},"latlng":[25.5,51.25],"landlocked":false,"borders":["SAU"],"area":11586,"flag":"\uD83C\uDDF6\uD83C\uDDE6","demonyms":{"eng":{"f":"Qatari","m":"Qatari"},"fra":{"f":"Qatarienne","m":"Qatarien"}}},{"name":{"common":"R\xe9union","official":"R\xe9union Island","native":{"fra":{"official":"Ile de la R\xe9union","common":"La R\xe9union"}}},"tld":[".re"],"cca2":"RE","ccn3":"638","cca3":"REU","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+2","suffixes":["62"]},"capital":["Saint-Denis"],"altSpellings":["RE","Reunion"],"region":"Africa","subregion":"Eastern Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"R\xe9union","common":"R\xe9union"},"deu":{"official":"R\xe9union","common":"R\xe9union"},"est":{"official":"R\xe9unioni departemang","common":"R\xe9union"},"fin":{"official":"R\xe9union","common":"R\xe9union"},"fra":{"official":"Ile de la R\xe9union","common":"R\xe9union"},"hrv":{"official":"R\xe9union Island","common":"R\xe9union"},"hun":{"official":"R\xe9union","common":"R\xe9union"},"ita":{"official":"R\xe9union","common":"Riunione"},"jpn":{"official":"レユニオン島","common":"レユニオン"},"kor":{"official":"레위니옹","common":"레위니옹"},"nld":{"official":"R\xe9union","common":"R\xe9union"},"per":{"official":"رئونیون","common":"رئونیون"},"pol":{"official":"Reunion","common":"Reunion"},"por":{"official":"Ilha da Reuni\xe3o","common":"Reuni\xe3o"},"rus":{"official":"Реюньон","common":"Реюньон"},"slk":{"official":"R\xe9unionsk\xfd z\xe1morsk\xfd departm\xe1n","common":"R\xe9union"},"spa":{"official":"Isla de la Reuni\xf3n","common":"Reuni\xf3n"},"swe":{"official":"R\xe9union","common":"R\xe9union"},"urd":{"official":"رے یونیوں جزیرہ","common":"رے یونیوں"},"zho":{"official":"留尼旺岛","common":"留尼旺岛"}},"latlng":[-21.15,55.5],"landlocked":false,"borders":[],"area":2511,"flag":"\uD83C\uDDF7\uD83C\uDDEA","demonyms":{"eng":{"f":"R\xe9unionese","m":"R\xe9unionese"},"fra":{"f":"R\xe9unionnaise","m":"R\xe9unionnais"}}},{"name":{"common":"Romania","official":"Romania","native":{"ron":{"official":"Rom\xe2nia","common":"Rom\xe2nia"}}},"tld":[".ro"],"cca2":"RO","ccn3":"642","cca3":"ROU","cioc":"ROU","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"RON":{"name":"Romanian leu","symbol":"lei"}},"idd":{"root":"+4","suffixes":["0"]},"capital":["Bucharest"],"altSpellings":["RO","Rumania","Roumania","Rom\xe2nia"],"region":"Europe","subregion":"Southeast Europe","languages":{"ron":"Romanian"},"translations":{"ces":{"official":"Rumunsko","common":"Rumunsko"},"deu":{"official":"Rum\xe4nien","common":"Rum\xe4nien"},"est":{"official":"Rumeenia","common":"Rumeenia"},"fin":{"official":"Romania","common":"Romania"},"fra":{"official":"Roumanie","common":"Roumanie"},"hrv":{"official":"Rumunija","common":"Rumunjska"},"hun":{"official":"Rom\xe1nia","common":"Rom\xe1nia"},"ita":{"official":"Romania","common":"Romania"},"jpn":{"official":"ルーマニア","common":"ルーマニア"},"kor":{"official":"루마니아","common":"루마니아"},"nld":{"official":"Roemeni\xeb","common":"Roemeni\xeb"},"per":{"official":"رومانی","common":"رومانی"},"pol":{"official":"Rumunia","common":"Rumunia"},"por":{"official":"Rom\xeania","common":"Rom\xe9nia"},"rus":{"official":"Румыния","common":"Румыния"},"slk":{"official":"Rumunsko","common":"Rumunsko"},"spa":{"official":"Rumania","common":"Rumania"},"swe":{"official":"Rum\xe4nien","common":"Rum\xe4nien"},"urd":{"official":"رومانیہ","common":"رومانیہ"},"zho":{"official":"罗马尼亚","common":"罗马尼亚"}},"latlng":[46,25],"landlocked":false,"borders":["BGR","HUN","MDA","SRB","UKR"],"area":238391,"flag":"\uD83C\uDDF7\uD83C\uDDF4","demonyms":{"eng":{"f":"Romanian","m":"Romanian"},"fra":{"f":"Roumaine","m":"Roumain"}}},{"name":{"common":"Russia","official":"Russian Federation","native":{"rus":{"official":"Российская Федерация","common":"Россия"}}},"tld":[".ru",".su",".рф"],"cca2":"RU","ccn3":"643","cca3":"RUS","cioc":"RUS","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"RUB":{"name":"Russian ruble","symbol":"₽"}},"idd":{"root":"+7","suffixes":["3","4","5","8","9"]},"capital":["Moscow"],"altSpellings":["RU","Russian Federation","Российская Федерация"],"region":"Europe","subregion":"Eastern Europe","languages":{"rus":"Russian"},"translations":{"ces":{"official":"Rusk\xe1 federace","common":"Rusko"},"deu":{"official":"Russische F\xf6deration","common":"Russland"},"est":{"official":"Venemaa F\xf6deratsioon","common":"Venemaa"},"fin":{"official":"Ven\xe4j\xe4n federaatio","common":"Ven\xe4j\xe4"},"fra":{"official":"F\xe9d\xe9ration de Russie","common":"Russie"},"hrv":{"official":"Ruska Federacija","common":"Rusija"},"hun":{"official":"Oroszorsz\xe1gi F\xf6der\xe1ci\xf3","common":"Oroszorsz\xe1g"},"ita":{"official":"Federazione russa","common":"Russia"},"jpn":{"official":"ロシア連邦","common":"ロシア連邦"},"kor":{"official":"러시아 연방","common":"러시아"},"nld":{"official":"Russische Federatie","common":"Rusland"},"per":{"official":"فدراسیون روسیه","common":"روسیه"},"pol":{"official":"Federacja Rosyjska","common":"Rosja"},"por":{"official":"Federa\xe7\xe3o Russa","common":"R\xfassia"},"rus":{"official":"Российская Федерация","common":"Россия"},"slk":{"official":"Rusk\xe1 feder\xe1cia","common":"Rusko"},"spa":{"official":"Federaci\xf3n de Rusia","common":"Rusia"},"swe":{"official":"Ryska federationen","common":"Ryssland"},"urd":{"official":"روسی وفاق","common":"روس"},"zho":{"official":"俄罗斯联邦","common":"俄罗斯"}},"latlng":[60,100],"landlocked":false,"borders":["AZE","BLR","CHN","EST","FIN","GEO","KAZ","PRK","LVA","LTU","MNG","NOR","POL","UKR"],"area":17098242,"flag":"\uD83C\uDDF7\uD83C\uDDFA","demonyms":{"eng":{"f":"Russian","m":"Russian"},"fra":{"f":"Russe","m":"Russe"}}},{"name":{"common":"Rwanda","official":"Republic of Rwanda","native":{"eng":{"official":"Republic of Rwanda","common":"Rwanda"},"fra":{"official":"R\xe9publique rwandaise","common":"Rwanda"},"kin":{"official":"Repubulika y\'u Rwanda","common":"Rwanda"}}},"tld":[".rw"],"cca2":"RW","ccn3":"646","cca3":"RWA","cioc":"RWA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"RWF":{"name":"Rwandan franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["50"]},"capital":["Kigali"],"altSpellings":["RW","Republic of Rwanda","Repubulika y\'u Rwanda","R\xe9publique du Rwanda"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English","fra":"French","kin":"Kinyarwanda"},"translations":{"ces":{"official":"Rwandsk\xe1 republika","common":"Rwanda"},"deu":{"official":"Republik Ruanda","common":"Ruanda"},"est":{"official":"Rwanda Vabariik","common":"Rwanda"},"fin":{"official":"Ruandan tasavalta","common":"Ruanda"},"fra":{"official":"R\xe9publique rwandaise","common":"Rwanda"},"hrv":{"official":"Republika Ruandi","common":"Ruanda"},"hun":{"official":"Ruandai K\xf6zt\xe1rsas\xe1g","common":"Ruanda"},"ita":{"official":"Repubblica del Ruanda","common":"Ruanda"},"jpn":{"official":"ルワンダ共和国","common":"ルワンダ"},"kor":{"official":"르완다 공화국","common":"르완다"},"nld":{"official":"Republiek Rwanda","common":"Rwanda"},"per":{"official":"جمهوری رواندا","common":"رواندا"},"pol":{"official":"Republika Rwandy","common":"Rwanda"},"por":{"official":"Rep\xfablica do Ruanda","common":"Ruanda"},"rus":{"official":"Республика Руанда","common":"Руанда"},"slk":{"official":"Rwandsk\xe1 republika","common":"Rwanda"},"spa":{"official":"Rep\xfablica de Rwanda","common":"Ruanda"},"swe":{"official":"Republiken Rwanda","common":"Rwanda"},"urd":{"official":"جمہوریہ روانڈا","common":"روانڈا"},"zho":{"official":"卢旺达共和国","common":"卢旺达"}},"latlng":[-2,30],"landlocked":true,"borders":["BDI","COD","TZA","UGA"],"area":26338,"flag":"\uD83C\uDDF7\uD83C\uDDFC","demonyms":{"eng":{"f":"Rwandan","m":"Rwandan"},"fra":{"f":"Rwandaise","m":"Rwandais"}}},{"name":{"common":"Saudi Arabia","official":"Kingdom of Saudi Arabia","native":{"ara":{"official":"المملكة العربية السعودية","common":"العربية السعودية"}}},"tld":[".sa",".السعودية"],"cca2":"SA","ccn3":"682","cca3":"SAU","cioc":"KSA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SAR":{"name":"Saudi riyal","symbol":"ر.س"}},"idd":{"root":"+9","suffixes":["66"]},"capital":["Riyadh"],"altSpellings":["Saudi","SA","Kingdom of Saudi Arabia","Al-Mamlakah al-‘Arabiyyah as-Su‘ūdiyyah"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Sa\xfadskoarabsk\xe9 kr\xe1lovstv\xed","common":"Sa\xfadsk\xe1 Ar\xe1bie"},"deu":{"official":"K\xf6nigreich Saudi-Arabien","common":"Saudi-Arabien"},"est":{"official":"Saudi Araabia Kuningriik","common":"Saudi Araabia"},"fin":{"official":"Saudi-Arabian kuningaskunta","common":"Saudi-Arabia"},"fra":{"official":"Royaume d\'Arabie Saoudite","common":"Arabie Saoudite"},"hrv":{"official":"Kraljevina Saudijska Arabija","common":"Saudijska Arabija"},"hun":{"official":"Sza\xfad-Ar\xe1bia","common":"Sza\xfad-Ar\xe1bia"},"ita":{"official":"Arabia Saudita","common":"Arabia Saudita"},"jpn":{"official":"サウジアラビア王国","common":"サウジアラビア"},"kor":{"official":"사우디아라비아 왕국","common":"사우디아라비아"},"nld":{"official":"Koninkrijk van Saoedi-Arabi\xeb","common":"Saoedi-Arabi\xeb"},"per":{"official":"پادشاهی عربی سَعودی","common":"عربستان سعودی"},"pol":{"official":"Kr\xf3lestwo Arabii Saudyjskiej","common":"Arabia Saudyjska"},"por":{"official":"Reino da Ar\xe1bia Saudita","common":"Ar\xe1bia Saudita"},"rus":{"official":"Королевство Саудовская Аравия","common":"Саудовская Аравия"},"slk":{"official":"Saudskoarabsk\xe9 kr\xe1ľovstvo","common":"Saudsk\xe1 Ar\xe1bia"},"spa":{"official":"Reino de Arabia Saudita","common":"Arabia Saud\xed"},"swe":{"official":"Kungad\xf6met Saudiarabien","common":"Saudiarabien"},"urd":{"official":"مملکتِ سعودی عرب","common":"سعودی عرب"},"zho":{"official":"沙特阿拉伯王国","common":"沙特阿拉伯"}},"latlng":[25,45],"landlocked":false,"borders":["IRQ","JOR","KWT","OMN","QAT","ARE","YEM"],"area":2149690,"flag":"\uD83C\uDDF8\uD83C\uDDE6","demonyms":{"eng":{"f":"Saudi Arabian","m":"Saudi Arabian"},"fra":{"f":"Saoudienne","m":"Saoudien"}}},{"name":{"common":"Sudan","official":"Republic of the Sudan","native":{"ara":{"official":"جمهورية السودان","common":"السودان"},"eng":{"official":"Republic of the Sudan","common":"Sudan"}}},"tld":[".sd"],"cca2":"SD","ccn3":"729","cca3":"SDN","cioc":"SUD","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SDG":{"name":"Sudanese pound","symbol":"PT"}},"idd":{"root":"+2","suffixes":["49"]},"capital":["Khartoum"],"altSpellings":["SD","Republic of the Sudan","Jumhūrīyat as-Sūdān"],"region":"Africa","subregion":"Northern Africa","languages":{"ara":"Arabic","eng":"English"},"translations":{"ces":{"official":"S\xfad\xe1nsk\xe1 republika","common":"S\xfad\xe1n"},"deu":{"official":"Republik Sudan","common":"Sudan"},"est":{"official":"Sudaani Vabariik","common":"Sudaan"},"fin":{"official":"Sudanin tasavalta","common":"Sudan"},"fra":{"official":"R\xe9publique du Soudan","common":"Soudan"},"hrv":{"official":"Republika Sudan","common":"Sudan"},"hun":{"official":"Szud\xe1ni K\xf6zt\xe1rsas\xe1g","common":"Szud\xe1n"},"ita":{"official":"Repubblica del Sudan","common":"Sudan"},"jpn":{"official":"スーダン共和国","common":"スーダン"},"kor":{"official":"수단 공화국","common":"수단"},"nld":{"official":"Republiek Soedan","common":"Soedan"},"per":{"official":"جمهوری سودان","common":"سودان"},"pol":{"official":"Republika Sudanu","common":"Sudan"},"por":{"official":"Rep\xfablica do Sud\xe3o","common":"Sud\xe3o"},"rus":{"official":"Республика Судан","common":"Судан"},"slk":{"official":"Sud\xe1nska republika","common":"Sud\xe1n"},"spa":{"official":"Rep\xfablica de Sud\xe1n","common":"Sud\xe1n"},"swe":{"official":"Republiken Sudan","common":"Sudan"},"urd":{"official":"جمہوریہ سودان","common":"سودان"},"zho":{"official":"苏丹共和国","common":"苏丹"}},"latlng":[15,30],"landlocked":false,"borders":["CAF","TCD","EGY","ERI","ETH","LBY","SSD"],"area":1886068,"flag":"\uD83C\uDDF8\uD83C\uDDE9","demonyms":{"eng":{"f":"Sudanese","m":"Sudanese"},"fra":{"f":"Soudanaise","m":"Soudanais"}}},{"name":{"common":"Senegal","official":"Republic of Senegal","native":{"fra":{"official":"R\xe9publique du S\xe9n\xe9gal","common":"S\xe9n\xe9gal"}}},"tld":[".sn"],"cca2":"SN","ccn3":"686","cca3":"SEN","cioc":"SEN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["21"]},"capital":["Dakar"],"altSpellings":["SN","Republic of Senegal","R\xe9publique du S\xe9n\xe9gal"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Senegalsk\xe1 republika","common":"Senegal"},"deu":{"official":"Republik Senegal","common":"Senegal"},"est":{"official":"Senegali Vabariik","common":"Senegal"},"fin":{"official":"Senegalin tasavalta","common":"Senegal"},"fra":{"official":"R\xe9publique du S\xe9n\xe9gal","common":"S\xe9n\xe9gal"},"hrv":{"official":"Republika Senegal","common":"Senegal"},"hun":{"official":"Szeneg\xe1li K\xf6zt\xe1rsas\xe1g","common":"Szeneg\xe1l"},"ita":{"official":"Repubblica del Senegal","common":"Senegal"},"jpn":{"official":"セネガル共和国","common":"セネガル"},"kor":{"official":"세네갈 공화국","common":"세네갈"},"nld":{"official":"Republiek Senegal","common":"Senegal"},"per":{"official":"جمهوری سنگال","common":"سنگال"},"pol":{"official":"Senegal","common":"Senegal"},"por":{"official":"Rep\xfablica do Senegal","common":"Senegal"},"rus":{"official":"Республика Сенегал","common":"Сенегал"},"slk":{"official":"Senegalsk\xe1 republika","common":"Senegal"},"spa":{"official":"Rep\xfablica de Senegal","common":"Senegal"},"swe":{"official":"Republiken Senegal","common":"Senegal"},"urd":{"official":"جمہوریہ سینیگال","common":"سینیگال"},"zho":{"official":"塞内加尔共和国","common":"塞内加尔"}},"latlng":[14,-14],"landlocked":false,"borders":["GMB","GIN","GNB","MLI","MRT"],"area":196722,"flag":"\uD83C\uDDF8\uD83C\uDDF3","demonyms":{"eng":{"f":"Senegalese","m":"Senegalese"},"fra":{"f":"S\xe9n\xe9galaise","m":"S\xe9n\xe9galais"}}},{"name":{"common":"Singapore","official":"Republic of Singapore","native":{"zho":{"official":"新加坡共和国","common":"新加坡"},"eng":{"official":"Republic of Singapore","common":"Singapore"},"msa":{"official":"Republik Singapura","common":"Singapura"},"tam":{"official":"சிங்கப்பூர் குடியரசு","common":"சிங்கப்பூர்"}}},"tld":[".sg",".新加坡",".சிங்கப்பூர்"],"cca2":"SG","ccn3":"702","cca3":"SGP","cioc":"SGP","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SGD":{"name":"Singapore dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["5"]},"capital":["Singapore"],"altSpellings":["SG","Singapura","Republik Singapura","新加坡共和国"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"zho":"Chinese","eng":"English","msa":"Malay","tam":"Tamil"},"translations":{"ces":{"official":"Singapursk\xe1 republika","common":"Singapur"},"deu":{"official":"Republik Singapur","common":"Singapur"},"est":{"official":"Singapuri Vabariik","common":"Singapur"},"fin":{"official":"Singaporen tasavalta","common":"Singapore"},"fra":{"official":"R\xe9publique de Singapour","common":"Singapour"},"hrv":{"official":"Republika Singapur","common":"Singapur"},"hun":{"official":"Szingap\xfari K\xf6zt\xe1rsas\xe1g","common":"Szingap\xfar"},"ita":{"official":"Repubblica di Singapore","common":"Singapore"},"jpn":{"official":"シンガポール共和国","common":"シンガポール"},"kor":{"official":"싱가포르 공화국","common":"싱가포르"},"nld":{"official":"Republiek Singapore","common":"Singapore"},"per":{"official":"جمهوری سنگاپور","common":"سنگاپور"},"pol":{"official":"Republika Singapuru","common":"Singapur"},"por":{"official":"Rep\xfablica de Singapura","common":"Singapura"},"rus":{"official":"Республика Сингапур","common":"Сингапур"},"slk":{"official":"Singapursk\xe1 republika","common":"Singapur"},"spa":{"official":"Rep\xfablica de Singapur","common":"Singapur"},"swe":{"official":"Republiken Singapore","common":"Singapore"},"urd":{"official":"جمہوریہ سنگاپور","common":"سنگاپور"}},"latlng":[1.36666666,103.8],"landlocked":false,"borders":[],"area":710,"flag":"\uD83C\uDDF8\uD83C\uDDEC","demonyms":{"eng":{"f":"Singaporean","m":"Singaporean"},"fra":{"f":"Singapourienne","m":"Singapourien"}}},{"name":{"common":"South Georgia","official":"South Georgia and the South Sandwich Islands","native":{"eng":{"official":"South Georgia and the South Sandwich Islands","common":"South Georgia"}}},"tld":[".gs"],"cca2":"GS","ccn3":"239","cca3":"SGS","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"SHP":{"name":"Saint Helena pound","symbol":"\xa3"}},"idd":{"root":"+5","suffixes":["00"]},"capital":["King Edward Point"],"altSpellings":["GS","South Georgia and the South Sandwich Islands"],"region":"Antarctic","subregion":"","languages":{"eng":"English"},"translations":{"ces":{"official":"Jižn\xed Georgie a Jižn\xed Sandwichovy ostrovy","common":"Jižn\xed Georgie a Jižn\xed Sandwichovy ostrovy"},"deu":{"official":"S\xfcdgeorgien und die S\xfcdlichen Sandwichinseln","common":"S\xfcdgeorgien und die S\xfcdlichen Sandwichinseln"},"est":{"official":"L\xf5una-Georgia ja L\xf5una-Sandwichi saared","common":"L\xf5una-Georgia ja L\xf5una-Sandwichi saared"},"fin":{"official":"Etel\xe4-Georgia ja Etel\xe4iset Sandwichsaaret","common":"Etel\xe4-Georgia ja Etel\xe4iset Sandwichsaaret"},"fra":{"official":"G\xe9orgie du Sud et les \xeeles Sandwich du Sud","common":"G\xe9orgie du Sud-et-les \xceles Sandwich du Sud"},"hrv":{"official":"Južna Džordžija i Otoci Južni Sendvič","common":"Južna Georgija i otočje Južni Sandwich"},"hun":{"official":"D\xe9li-Georgia \xe9s D\xe9li-Sandwich-szigetek","common":"D\xe9li-Georgia \xe9s D\xe9li-Sandwich-szigetek"},"ita":{"official":"Georgia del Sud e isole Sandwich del Sud","common":"Georgia del Sud e Isole Sandwich Meridionali"},"jpn":{"official":"サウスジョージア\xb7サウスサンドウィッチ諸島","common":"サウスジョージア・サウスサンドウィッチ諸島"},"kor":{"official":"조지아","common":"조지아"},"nld":{"official":"Zuid-Georgi\xeb en de Zuidelijke Sandwich-eilanden","common":"Zuid-Georgia en Zuidelijke Sandwicheilanden"},"per":{"official":"جزایر جورجیای جنوبی و ساندویچ جنوبی","common":"جزایر جورجیای جنوبی و ساندویچ جنوبی"},"pol":{"official":"Georgia Południowa i Sandwich Południowy","common":"Georgia Południowa i Sandwich Południowy"},"por":{"official":"Ge\xf3rgia do Sul e Sandwich do Sul","common":"Ilhas Ge\xf3rgia do Sul e Sandwich do Sul"},"rus":{"official":"Южная Георгия и Южные Сандвичевы острова","common":"Южная Георгия и Южные Сандвичевы острова"},"slk":{"official":"Južn\xe1 Georgia a Južn\xe9 Sandwichove ostrovy","common":"Južn\xe1 Georgia a Južn\xe9 Sandwichove ostrovy"},"spa":{"official":"Georgia del Sur y las Islas Sandwich del Sur","common":"Islas Georgias del Sur y Sandwich del Sur"},"swe":{"official":"Sydgeorgien","common":"Sydgeorgien"},"urd":{"official":"جنوبی جارجیا و جزائر جنوبی سینڈوچ","common":"جنوبی جارجیا"},"zho":{"official":"南乔治亚岛和南桑威奇群岛","common":"南乔治亚"}},"latlng":[-54.5,-37],"landlocked":false,"borders":[],"area":3903,"flag":"\uD83C\uDDEC\uD83C\uDDF8","demonyms":{"eng":{"f":"South Georgian South Sandwich Islander","m":"South Georgian South Sandwich Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Svalbard and Jan Mayen","official":"Svalbard og Jan Mayen","native":{"nor":{"official":"Svalbard og Jan Mayen","common":"Svalbard og Jan Mayen"}}},"tld":[".sj"],"cca2":"SJ","ccn3":"744","cca3":"SJM","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"NOK":{"name":"krone","symbol":"kr"}},"idd":{"root":"+4","suffixes":["779"]},"capital":["Longyearbyen"],"altSpellings":["SJ","Svalbard and Jan Mayen Islands"],"region":"Europe","subregion":"Northern Europe","languages":{"nor":"Norwegian"},"translations":{"ces":{"official":"Špicberky a Jan Mayen","common":"Špicberky a Jan Mayen"},"deu":{"official":"Spitzbergen und Jan Mayen","common":"Spitzbergen und Jan Mayen"},"est":{"official":"Svalbard","common":"Svalbard"},"fin":{"official":"Huippuvuoret","common":"Huippuvuoret"},"fra":{"official":"Jan Mayen Svalbard","common":"Svalbard et Jan Mayen"},"hrv":{"official":"Svalbard og Jan Mayen","common":"Svalbard i Jan Mayen"},"hun":{"official":"Svalbard \xe9s Jan Mayen","common":"Svalbard \xe9s Jan Mayen"},"ita":{"official":"Svalbard og Jan Mayen","common":"Svalbard e Jan Mayen"},"jpn":{"official":"スバールバル諸島OGヤンマイエン","common":"スヴァールバル諸島およびヤンマイエン島"},"kor":{"official":"스발바르 얀마옌 제도","common":"스발바르 얀마옌 제도"},"nld":{"official":"Svalbard og Jan Mayen","common":"Svalbard en Jan Mayen"},"per":{"official":"سوالبارد و یان ماین","common":"سوالبارد و یان ماین"},"pol":{"official":"Svalbard i Jan Mayen","common":"Svalbard i Jan Mayen"},"por":{"official":"Svalbard og Jan Mayen","common":"Ilhas Svalbard e Jan Mayen"},"rus":{"official":"Свальбарда ог Ян-Майен","common":"Шпицберген и Ян-Майен"},"slk":{"official":"Svalbard a Jan Mayen","common":"Svalbard a Jan Mayen"},"spa":{"official":"Svalbard og Jan Mayen","common":"Islas Svalbard y Jan Mayen"},"swe":{"official":"Svalbard och Jan Mayen","common":"Svalbard och Jan Mayen"},"urd":{"official":"سوالبارڈ اور جان میئن","common":"سوالبارڈ اور جان میئن"},"zho":{"official":"斯瓦尔巴特","common":"斯瓦尔巴特"}},"latlng":[78,20],"landlocked":false,"borders":[],"area":-1,"flag":"\uD83C\uDDF8\uD83C\uDDEF","demonyms":{"eng":{"f":"Norwegian","m":"Norwegian"},"fra":{"f":"","m":""}}},{"name":{"common":"Solomon Islands","official":"Solomon Islands","native":{"eng":{"official":"Solomon Islands","common":"Solomon Islands"}}},"tld":[".sb"],"cca2":"SB","ccn3":"090","cca3":"SLB","cioc":"SOL","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SBD":{"name":"Solomon Islands dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["77"]},"capital":["Honiara"],"altSpellings":["SB"],"region":"Oceania","subregion":"Melanesia","languages":{"eng":"English"},"translations":{"ces":{"official":"Šalamounovy ostrovy","common":"Šalamounovy ostrovy"},"deu":{"official":"Salomonen","common":"Salomonen"},"est":{"official":"Saalomoni Saared","common":"Saalomoni Saared"},"fin":{"official":"Salomonsaaret","common":"Salomonsaaret"},"fra":{"official":"\xceles Salomon","common":"\xceles Salomon"},"hrv":{"official":"Solomonski Otoci","common":"Solomonski Otoci"},"hun":{"official":"Salamon-szigetek","common":"Salamon-szigetek"},"ita":{"official":"Isole Salomone","common":"Isole Salomone"},"jpn":{"official":"ソロモン諸島","common":"ソロモン諸島"},"kor":{"official":"솔로몬 제도","common":"솔로몬 제도"},"nld":{"official":"Solomon eilanden","common":"Salomonseilanden"},"per":{"official":"جزایر سلیمان","common":"جزایر سلیمان"},"pol":{"official":"Wyspy Salomona","common":"Wyspy Salomona"},"por":{"official":"Ilhas Salom\xe3o","common":"Ilhas Salom\xe3o"},"rus":{"official":"Соломоновы острова","common":"Соломоновы Острова"},"slk":{"official":"Salomonove ostrovy","common":"Salomonove ostrovy"},"spa":{"official":"islas Salom\xf3n","common":"Islas Salom\xf3n"},"swe":{"official":"Salomon\xf6arna","common":"Salomon\xf6arna"},"urd":{"official":"جزائر سلیمان","common":"جزائر سلیمان"},"zho":{"official":"所罗门群岛","common":"所罗门群岛"}},"latlng":[-8,159],"landlocked":false,"borders":[],"area":28896,"flag":"\uD83C\uDDF8\uD83C\uDDE7","demonyms":{"eng":{"f":"Solomon Islander","m":"Solomon Islander"},"fra":{"f":"Salomonienne","m":"Salomonien"}}},{"name":{"common":"Sierra Leone","official":"Republic of Sierra Leone","native":{"eng":{"official":"Republic of Sierra Leone","common":"Sierra Leone"}}},"tld":[".sl"],"cca2":"SL","ccn3":"694","cca3":"SLE","cioc":"SLE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SLL":{"name":"Sierra Leonean leone","symbol":"Le"}},"idd":{"root":"+2","suffixes":["32"]},"capital":["Freetown"],"altSpellings":["SL","Republic of Sierra Leone"],"region":"Africa","subregion":"Western Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Republika Sierra Leone","common":"Sierra Leone"},"deu":{"official":"Republik Sierra Leone","common":"Sierra Leone"},"est":{"official":"Sierra Leone Vabariik","common":"Sierra Leone"},"fin":{"official":"Sierra Leonen tasavalta","common":"Sierra Leone"},"fra":{"official":"R\xe9publique de Sierra Leone","common":"Sierra Leone"},"hrv":{"official":"Republika Sijera Leone","common":"Sijera Leone"},"hun":{"official":"Sierra Leone K\xf6zt\xe1rsas\xe1g","common":"Sierra Leone"},"ita":{"official":"Repubblica della Sierra Leone","common":"Sierra Leone"},"jpn":{"official":"シエラレオネ共和国","common":"シエラレオネ"},"kor":{"official":"시에라리온 공화국","common":"시에라리온"},"nld":{"official":"Republiek Sierra Leone","common":"Sierra Leone"},"per":{"official":"جمهوری سیرالئون","common":"سیرالئون"},"pol":{"official":"Sierra Leone","common":"Sierra Leone"},"por":{"official":"Rep\xfablica da Serra Leoa","common":"Serra Leoa"},"rus":{"official":"Республика Сьерра-Леоне","common":"Сьерра-Леоне"},"slk":{"official":"Sierraleonsk\xe1 republika","common":"Sierra Leone"},"spa":{"official":"Rep\xfablica de Sierra Leona","common":"Sierra Leone"},"swe":{"official":"Republiken Sierra Leone","common":"Sierra Leone"},"urd":{"official":"جمہوریہ سیرالیون","common":"سیرالیون"},"zho":{"official":"塞拉利昂共和国","common":"塞拉利昂"}},"latlng":[8.5,-11.5],"landlocked":false,"borders":["GIN","LBR"],"area":71740,"flag":"\uD83C\uDDF8\uD83C\uDDF1","demonyms":{"eng":{"f":"Sierra Leonean","m":"Sierra Leonean"},"fra":{"f":"Sierra-leonaise","m":"Sierra-leonais"}}},{"name":{"common":"El Salvador","official":"Republic of El Salvador","native":{"spa":{"official":"Rep\xfablica de El Salvador","common":"El Salvador"}}},"tld":[".sv"],"cca2":"SV","ccn3":"222","cca3":"SLV","cioc":"ESA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+5","suffixes":["03"]},"capital":["San Salvador"],"altSpellings":["SV","Republic of El Salvador","Rep\xfablica de El Salvador"],"region":"Americas","subregion":"Central America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Salvadorsk\xe1 republika","common":"Salvador"},"cym":{"official":"Gweriniaeth El Salfador","common":"El Salfador"},"deu":{"official":"Republik El Salvador","common":"El Salvador"},"est":{"official":"El Salvadori Vabariik","common":"El Salvador"},"fin":{"official":"El Salvadorin tasavalta","common":"El Salvador"},"fra":{"official":"R\xe9publique du Salvador","common":"Salvador"},"hrv":{"official":"Republika El Salvador","common":"Salvador"},"hun":{"official":"Salvadori K\xf6zt\xe1rsas\xe1g","common":"Salvador"},"ita":{"official":"Repubblica di El Salvador","common":"El Salvador"},"jpn":{"official":"エルサルバドル共和国","common":"エルサルバドル"},"kor":{"official":"엘살바도르 공화국","common":"엘살바도르"},"nld":{"official":"Republiek El Salvador","common":"El Salvador"},"per":{"official":"جمهوری السالوادور","common":"السالوادور"},"pol":{"official":"Republika Salwadoru","common":"Salwador"},"por":{"official":"Rep\xfablica de El Salvador","common":"El Salvador"},"rus":{"official":"Республика Эль-Сальвадор","common":"Сальвадор"},"slk":{"official":"Salv\xe1dorsk\xe1 republika","common":"Salv\xe1dor"},"spa":{"official":"Rep\xfablica de El Salvador","common":"El Salvador"},"swe":{"official":"Republiken El Salvador","common":"El Salvador"},"urd":{"official":"جمہوریہ ایل سیلواڈور","common":"ایل سیلواڈور"},"zho":{"official":"萨尔瓦多共和国","common":"萨尔瓦多"}},"latlng":[13.83333333,-88.91666666],"landlocked":false,"borders":["GTM","HND"],"area":21041,"flag":"\uD83C\uDDF8\uD83C\uDDFB","demonyms":{"eng":{"f":"Salvadoran","m":"Salvadoran"},"fra":{"f":"Salvadorienne","m":"Salvadorien"}}},{"name":{"common":"San Marino","official":"Most Serene Republic of San Marino","native":{"ita":{"official":"Serenissima Repubblica di San Marino","common":"San Marino"}}},"tld":[".sm"],"cca2":"SM","ccn3":"674","cca3":"SMR","cioc":"SMR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["78"]},"capital":["City of San Marino"],"altSpellings":["SM","Republic of San Marino","Repubblica di San Marino"],"region":"Europe","subregion":"Southern Europe","languages":{"ita":"Italian"},"translations":{"ces":{"official":"Republika San Marino","common":"San Marino"},"deu":{"official":"Republik San Marino","common":"San Marino"},"est":{"official":"San Marino Vabariik","common":"San Marino"},"fin":{"official":"San Marinon seesteinen tasavalta","common":"San Marino"},"fra":{"official":"R\xe9publique de Saint-Marin","common":"Saint-Marin"},"hrv":{"official":"Većina Serene Republika San Marino","common":"San Marino"},"hun":{"official":"San Marino K\xf6zt\xe1rsas\xe1g","common":"San Marino"},"ita":{"official":"Serenissima Repubblica di San Marino","common":"San Marino"},"jpn":{"official":"サンマリノのほとんどセリーヌ共和国","common":"サンマリノ"},"kor":{"official":"산마리노 공화국","common":"산마리노"},"nld":{"official":"Meest Serene Republiek San Marino","common":"San Marino"},"per":{"official":"جمهوری سان مارینو","common":"سان مارینو"},"pol":{"official":"Republika San Marino","common":"San Marino"},"por":{"official":"Seren\xedssima Rep\xfablica de San Marino","common":"San Marino"},"rus":{"official":"Большинство Serene Республика Сан-Марино","common":"Сан-Марино"},"slk":{"official":"Sanmar\xednska republika","common":"San Mar\xedno"},"spa":{"official":"Seren\xedsima Rep\xfablica de San Marino","common":"San Marino"},"swe":{"official":"Republiken San Marino","common":"San Marino"},"urd":{"official":"جمہوریہ سان مارینو","common":"سان مارینو"},"zho":{"official":"圣马力诺共和国","common":"圣马力诺"}},"latlng":[43.76666666,12.41666666],"landlocked":true,"borders":["ITA"],"area":61,"flag":"\uD83C\uDDF8\uD83C\uDDF2","demonyms":{"eng":{"f":"Sammarinese","m":"Sammarinese"},"fra":{"f":"Saint-Marinaise","m":"Saint-Marinais"}}},{"name":{"common":"Somalia","official":"Federal Republic of Somalia","native":{"ara":{"official":"جمهورية الصومال‎‎","common":"الصومال‎‎"},"som":{"official":"Jamhuuriyadda Federaalka Soomaaliya","common":"Soomaaliya"}}},"tld":[".so"],"cca2":"SO","ccn3":"706","cca3":"SOM","cioc":"SOM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SOS":{"name":"Somali shilling","symbol":"Sh"}},"idd":{"root":"+2","suffixes":["52"]},"capital":["Mogadishu"],"altSpellings":["SO","aṣ-Ṣūmāl","Federal Republic of Somalia","Jamhuuriyadda Federaalka Soomaaliya","Jumhūriyyat aṣ-Ṣūmāl al-Fiderāliyya"],"region":"Africa","subregion":"Eastern Africa","languages":{"ara":"Arabic","som":"Somali"},"translations":{"ces":{"official":"Som\xe1lsk\xe1 demokratick\xe1 republika","common":"Som\xe1lsko"},"deu":{"official":"Bundesrepublik Somalia","common":"Somalia"},"est":{"official":"Somaalia Liitvabariik","common":"Somaalia"},"fin":{"official":"Somalian liittotasavalta","common":"Somalia"},"fra":{"official":"R\xe9publique f\xe9d\xe9rale de Somalie","common":"Somalie"},"hrv":{"official":"Savezna Republika Somaliji","common":"Somalija"},"hun":{"official":"Szom\xe1li Sz\xf6vets\xe9gi K\xf6zt\xe1rsas\xe1g","common":"Szom\xe1lia"},"ita":{"official":"Repubblica federale di Somalia","common":"Somalia"},"jpn":{"official":"ソマリア連邦共和国","common":"ソマリア"},"kor":{"official":" 소말리아 연방 공화국","common":"소말리아"},"nld":{"official":"Federale Republiek Somali\xeb","common":"Somali\xeb"},"per":{"official":"جمهوری فدرال سومالی","common":"سومالی"},"pol":{"official":"Federalna Republika Somalii","common":"Somalia"},"por":{"official":"Rep\xfablica Federal da Som\xe1lia","common":"Som\xe1lia"},"rus":{"official":"Федеративная Республика Сомали","common":"Сомали"},"slk":{"official":"Som\xe1lska federat\xedvna republika","common":"Som\xe1lsko"},"spa":{"official":"Rep\xfablica Federal de Somalia","common":"Somalia"},"swe":{"official":"F\xf6rbundsrepubliken Somalia","common":"Somalia"},"urd":{"official":"وفاقی جمہوریہ صومالیہ","common":"صومالیہ"},"zho":{"official":"索马里共和国","common":"索马里"}},"latlng":[10,49],"landlocked":false,"borders":["DJI","ETH","KEN"],"area":637657,"flag":"\uD83C\uDDF8\uD83C\uDDF4","demonyms":{"eng":{"f":"Somali","m":"Somali"},"fra":{"f":"Somalienne","m":"Somalien"}}},{"name":{"common":"Saint Pierre and Miquelon","official":"Saint Pierre and Miquelon","native":{"fra":{"official":"Collectivit\xe9 territoriale de Saint-Pierre-et-Miquelon","common":"Saint-Pierre-et-Miquelon"}}},"tld":[".pm"],"cca2":"PM","ccn3":"666","cca3":"SPM","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+5","suffixes":["08"]},"capital":["Saint-Pierre"],"altSpellings":["PM","Collectivit\xe9 territoriale de Saint-Pierre-et-Miquelon"],"region":"Americas","subregion":"North America","languages":{"fra":"French"},"translations":{"ces":{"official":"Saint-Pierre a Miquelon","common":"Saint-Pierre a Miquelon"},"deu":{"official":"St. Pierre und Miquelon","common":"St. Pierre und Miquelon"},"est":{"official":"Saint-Pierre’i ja Miqueloni territoriaal\xfchendus","common":"Saint-Pierre ja Miquelon"},"fin":{"official":"Saint-Pierre ja Miquelon","common":"Saint-Pierre ja Miquelon"},"fra":{"official":"Saint-Pierre-et-Miquelon","common":"Saint-Pierre-et-Miquelon"},"hrv":{"official":"Saint Pierre i Miquelon","common":"Sveti Petar i Mikelon"},"hun":{"official":"Saint-Pierre \xe9s Miquelon","common":"Saint-Pierre \xe9s Miquelon"},"ita":{"official":"Saint Pierre e Miquelon","common":"Saint-Pierre e Miquelon"},"jpn":{"official":"サンピエール島\xb7ミクロン島","common":"サンピエール島・ミクロン島"},"kor":{"official":"생피에르 미클롱","common":"생피에르 미클롱"},"nld":{"official":"Saint-Pierre en Miquelon","common":"Saint Pierre en Miquelon"},"per":{"official":"سن-پیر-ا-میکلون","common":"سن-پیِر و میکلُن"},"pol":{"official":"Saint-Pierre i Miquelon","common":"Saint-Pierre i Miquelon"},"por":{"official":"Saint Pierre e Miquelon","common":"Saint-Pierre e Miquelon"},"rus":{"official":"Сен-Пьер и Микелон","common":"Сен-Пьер и Микелон"},"slk":{"official":"Ostrovy Saint Pierre a Miquelon","common":"Saint Pierre a Miquelon"},"spa":{"official":"San Pedro y Miquel\xf3n","common":"San Pedro y Miquel\xf3n"},"swe":{"official":"Saint-Pierre och Miquelon","common":"Saint-Pierre och Miquelon"},"urd":{"official":"سینٹ پیئر و میکیلون","common":"سینٹ پیئر و میکیلون"},"zho":{"official":"圣皮埃尔和密克隆","common":"圣皮埃尔和密克隆"}},"latlng":[46.83333333,-56.33333333],"landlocked":false,"borders":[],"area":242,"flag":"\uD83C\uDDF5\uD83C\uDDF2","demonyms":{"eng":{"f":"Saint-Pierrais, Miquelonnais","m":"Saint-Pierrais, Miquelonnais"},"fra":{"f":"Saint-Pierraise, Miquelonaise","m":"Saint-Pierrais, Miquelonais"}}},{"name":{"common":"Serbia","official":"Republic of Serbia","native":{"srp":{"official":"Република Србија","common":"Србија"}}},"tld":[".rs",".срб"],"cca2":"RS","ccn3":"688","cca3":"SRB","cioc":"SRB","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"RSD":{"name":"Serbian dinar","symbol":"дин."}},"idd":{"root":"+3","suffixes":["81"]},"capital":["Belgrade"],"altSpellings":["RS","Srbija","Republic of Serbia","Република Србија","Republika Srbija"],"region":"Europe","subregion":"Southeast Europe","languages":{"srp":"Serbian"},"translations":{"ces":{"official":"Srbsk\xe1 republika","common":"Srbsko"},"deu":{"official":"Republik Serbien","common":"Serbien"},"est":{"official":"Serbia Vabariik","common":"Serbia"},"fin":{"official":"Serbian tasavalta","common":"Serbia"},"fra":{"official":"R\xe9publique de Serbie","common":"Serbie"},"hrv":{"official":"Republika Srbija","common":"Srbija"},"hun":{"official":"Szerb K\xf6zt\xe1rsas\xe1g","common":"Szerbia"},"ita":{"official":"Repubblica di Serbia","common":"Serbia"},"jpn":{"official":"セルビア共和国","common":"セルビア"},"kor":{"official":"세르비아 공화국","common":"세르비아"},"nld":{"official":"Republiek Servi\xeb","common":"Servi\xeb"},"per":{"official":"جمهوری صربستان","common":"صربستان"},"pol":{"official":"Republika Serbii","common":"Serbia"},"por":{"official":"Rep\xfablica da S\xe9rvia","common":"S\xe9rvia"},"rus":{"official":"Республика Сербия","common":"Сербия"},"slk":{"official":"Srbsk\xe1 republika","common":"Srbsko"},"spa":{"official":"Rep\xfablica de Serbia","common":"Serbia"},"swe":{"official":"Republiken Serbien","common":"Serbien"},"urd":{"official":"جمہوریہ سربیا","common":"سربیا"},"zho":{"official":"塞尔维亚共和国","common":"塞尔维亚"}},"latlng":[44,21],"landlocked":true,"borders":["BIH","BGR","HRV","HUN","UNK","MKD","MNE","ROU"],"area":88361,"flag":"\uD83C\uDDF7\uD83C\uDDF8","demonyms":{"eng":{"f":"Serbian","m":"Serbian"},"fra":{"f":"Serbe","m":"Serbe"}}},{"name":{"common":"South Sudan","official":"Republic of South Sudan","native":{"eng":{"official":"Republic of South Sudan","common":"South Sudan"}}},"tld":[".ss"],"cca2":"SS","ccn3":"728","cca3":"SSD","cioc":"","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SSP":{"name":"South Sudanese pound","symbol":"\xa3"}},"idd":{"root":"+2","suffixes":["11"]},"capital":["Juba"],"altSpellings":["SS"],"region":"Africa","subregion":"Middle Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Jihos\xfad\xe1nsk\xe1 republika","common":"Jižn\xed S\xfad\xe1n"},"deu":{"official":"Republik S\xfcdsudan","common":"S\xfcdsudan"},"est":{"official":"L\xf5una-Sudaani Vabariik","common":"L\xf5una-Sudaan"},"fin":{"official":"Etel\xe4-Sudanin tasavalta","common":"Etel\xe4-Sudan"},"fra":{"official":"R\xe9publique du Soudan du Sud","common":"Soudan du Sud"},"hrv":{"official":"Republika Južni Sudan","common":"Južni Sudan"},"hun":{"official":"D\xe9l-szud\xe1ni K\xf6zt\xe1rsas\xe1g","common":"D\xe9l-Szud\xe1n"},"ita":{"official":"Repubblica del Sudan del Sud","common":"Sudan del sud"},"jpn":{"official":"南スーダン共和国","common":"南スーダン"},"kor":{"official":"남수단 공화국","common":"남수단"},"nld":{"official":"Republiek Zuid-Soedan","common":"Zuid-Soedan"},"per":{"official":"جمهوری سودان جنوبی","common":"سودان جنوبی"},"pol":{"official":"Republika Sudanu","common":"Sudan"},"por":{"official":"Rep\xfablica do Sud\xe3o do Sul","common":"Sud\xe3o do Sul"},"rus":{"official":"Республика Южный Судан","common":"Южный Судан"},"slk":{"official":"Juhosud\xe1nska republika","common":"Južn\xfd Sud\xe1n"},"spa":{"official":"Rep\xfablica de Sud\xe1n del Sur","common":"Sud\xe1n del Sur"},"swe":{"official":"Republiken Sydsudan","common":"Sydsudan"},"urd":{"official":"جمہوریہ جنوبی سوڈان","common":"جنوبی سوڈان"},"zho":{"official":"南苏丹共和国","common":"南苏丹"}},"latlng":[7,30],"landlocked":true,"borders":["CAF","COD","ETH","KEN","SDN","UGA"],"area":619745,"flag":"\uD83C\uDDF8\uD83C\uDDF8","demonyms":{"eng":{"f":"South Sudanese","m":"South Sudanese"},"fra":{"f":"Sud-Soudanaise","m":"Sud-Soudanais"}}},{"name":{"common":"S\xe3o Tom\xe9 and Pr\xedncipe","official":"Democratic Republic of S\xe3o Tom\xe9 and Pr\xedncipe","native":{"por":{"official":"Rep\xfablica Democr\xe1tica do S\xe3o Tom\xe9 e Pr\xedncipe","common":"S\xe3o Tom\xe9 e Pr\xedncipe"}}},"tld":[".st"],"cca2":"ST","ccn3":"678","cca3":"STP","cioc":"STP","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"STN":{"name":"S\xe3o Tom\xe9 and Pr\xedncipe dobra","symbol":"Db"}},"idd":{"root":"+2","suffixes":["39"]},"capital":["S\xe3o Tom\xe9"],"altSpellings":["ST","Democratic Republic of S\xe3o Tom\xe9 and Pr\xedncipe","Sao Tome and Principe","Rep\xfablica Democr\xe1tica de S\xe3o Tom\xe9 e Pr\xedncipe"],"region":"Africa","subregion":"Middle Africa","languages":{"por":"Portuguese"},"translations":{"ces":{"official":"Demokratick\xe1 republika Svat\xfd Tom\xe1š a Princův ostrov","common":"Svat\xfd Tom\xe1š a Princův ostrov"},"deu":{"official":"Demokratische Republik S\xe3o Tom\xe9 und Pr\xedncipe","common":"S\xe3o Tom\xe9 und Pr\xedncipe"},"est":{"official":"S\xe3o Tom\xe9 ja Pr\xedncipe Demokraatlik Vabariik","common":"S\xe3o Tom\xe9 ja Pr\xedncipe"},"fin":{"official":"S\xe3o Tom\xe9 ja Pr\xedncipen demokraattinen tasavalta","common":"S\xe3o T\xe9me ja Pr\xedncipe"},"fra":{"official":"R\xe9publique d\xe9mocratique de S\xe3o Tom\xe9 et Pr\xedncipe","common":"S\xe3o Tom\xe9 et Pr\xedncipe"},"hrv":{"official":"Demokratska Republika S\xe3o Tome i Principe","common":"Sveti Toma i Princip"},"hun":{"official":"S\xe3o Tom\xe9 \xe9s Pr\xedncipe Demokratikus K\xf6zt\xe1rsas\xe1g","common":"S\xe3o Tom\xe9 \xe9s Pr\xedncipe"},"ita":{"official":"Repubblica democratica di S\xe3o Tom\xe9 e Pr\xedncipe","common":"S\xe3o Tom\xe9 e Pr\xedncipe"},"jpn":{"official":"サントメ\xb7プリンシペ民主共和国","common":"サントメ・プリンシペ"},"kor":{"official":"상투메 프린시페 민주 공화국","common":"상투메 프린시페"},"nld":{"official":"Democratische Republiek Sao Tom\xe9 en Principe","common":"Sao Tom\xe9 en Principe"},"per":{"official":"جمهوری دموکراتیک سائوتومه و پرنسیپ","common":"سائوتومه و پرنسیپ"},"pol":{"official":"Demokratyczna Republika Wysp Świętego Tomasza i Książęcej","common":"Wyspy Świętego Tomasza i Książęca"},"por":{"official":"Rep\xfablica Democr\xe1tica de S\xe3o Tom\xe9 e Pr\xedncipe","common":"S\xe3o Tom\xe9 e Pr\xedncipe"},"rus":{"official":"Демократическая Республика Сан-Томе и Принсипи","common":"Сан-Томе и Принсипи"},"slk":{"official":"Demokratick\xe1 republika Sv\xe4t\xe9ho Tom\xe1ša A princovho ostrova","common":"Sv\xe4t\xfd Tom\xe1š a Princov ostrov"},"spa":{"official":"Rep\xfablica Democr\xe1tica de Santo Tom\xe9 y Pr\xedncipe","common":"Santo Tom\xe9 y Pr\xedncipe"},"swe":{"official":"Demokratiska republiken S\xe3o Tom\xe9 och Pr\xedncipe","common":"S\xe3o Tom\xe9 och Pr\xedncipe"},"urd":{"official":"جمہوریہ ساؤ ٹومے و پرنسپے","common":"ساؤ ٹومے و پرنسپے"},"zho":{"official":"圣多美和普林西比民主共和国","common":"圣多美和普林西比"}},"latlng":[1,7],"landlocked":false,"borders":[],"area":964,"flag":"\uD83C\uDDF8\uD83C\uDDF9","demonyms":{"eng":{"f":"Sao Tomean","m":"Sao Tomean"},"fra":{"f":"Santom\xe9enne","m":"Santom\xe9en"}}},{"name":{"common":"Suriname","official":"Republic of Suriname","native":{"nld":{"official":"Republiek Suriname","common":"Suriname"}}},"tld":[".sr"],"cca2":"SR","ccn3":"740","cca3":"SUR","cioc":"SUR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SRD":{"name":"Surinamese dollar","symbol":"$"}},"idd":{"root":"+5","suffixes":["97"]},"capital":["Paramaribo"],"altSpellings":["SR","Sarnam","Sranangron","Republic of Suriname","Republiek Suriname"],"region":"Americas","subregion":"South America","languages":{"nld":"Dutch"},"translations":{"ces":{"official":"Republika Surinam","common":"Surinam"},"deu":{"official":"Republik Suriname","common":"Suriname"},"est":{"official":"Suriname Vabariik","common":"Suriname"},"fin":{"official":"Surinamen tasavalta","common":"Suriname"},"fra":{"official":"R\xe9publique du Suriname","common":"Surinam"},"hrv":{"official":"Republika Surinam","common":"Surinam"},"hun":{"official":"Suriname K\xf6zt\xe1rsas\xe1g","common":"Suriname"},"ita":{"official":"Repubblica del Suriname","common":"Suriname"},"jpn":{"official":"スリナム共和国","common":"スリナム"},"kor":{"official":"수리남 공화국","common":"수리남"},"nld":{"official":"Republiek Suriname","common":"Suriname"},"per":{"official":"جمهوری سورینام","common":"سورینام"},"pol":{"official":"Republika Surinamu","common":"Surinam"},"por":{"official":"Rep\xfablica do Suriname","common":"Suriname"},"rus":{"official":"Республика Суринам","common":"Суринам"},"slk":{"official":"Surinamsk\xe1 republika","common":"Surinam"},"spa":{"official":"Rep\xfablica de Suriname","common":"Surinam"},"swe":{"official":"Republiken Surinam","common":"Surinam"},"urd":{"official":"جمہوریہ سرینام","common":"سرینام"},"zho":{"official":"苏里南共和国","common":"苏里南"}},"latlng":[4,-56],"landlocked":false,"borders":["BRA","GUF","GUY"],"area":163820,"flag":"\uD83C\uDDF8\uD83C\uDDF7","demonyms":{"eng":{"f":"Surinamer","m":"Surinamer"},"fra":{"f":"Surinamaise","m":"Surinamais"}}},{"name":{"common":"Slovakia","official":"Slovak Republic","native":{"slk":{"official":"Slovensk\xe1 republika","common":"Slovensko"}}},"tld":[".sk"],"cca2":"SK","ccn3":"703","cca3":"SVK","cioc":"SVK","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+4","suffixes":["21"]},"capital":["Bratislava"],"altSpellings":["SK","Slovak Republic","Slovensk\xe1 republika"],"region":"Europe","subregion":"Central Europe","languages":{"slk":"Slovak"},"translations":{"ces":{"official":"Slovensk\xe1 republika","common":"Slovensko"},"deu":{"official":"Slowakische Republik","common":"Slowakei"},"est":{"official":"Slovaki Vabariik","common":"Slovakkia"},"fin":{"official":"Slovakian tasavalta","common":"Slovakia"},"fra":{"official":"R\xe9publique slovaque","common":"Slovaquie"},"hrv":{"official":"slovačka","common":"Slovačka"},"hun":{"official":"Szlov\xe1k K\xf6zt\xe1rsas\xe1g","common":"Szlov\xe1kia"},"ita":{"official":"Repubblica slovacca","common":"Slovacchia"},"jpn":{"official":"スロバキア共和国","common":"スロバキア"},"kor":{"official":"슬로바키아 공화국","common":"슬로바키아"},"nld":{"official":"Slowaakse Republiek","common":"Slowakije"},"per":{"official":"جمهوری اسلواکی","common":"اِسلُواکی"},"pol":{"official":"Republika Słowacka","common":"Słowacja"},"por":{"official":"Rep\xfablica Eslovaca","common":"Eslov\xe1quia"},"rus":{"official":"Словацкая Республика","common":"Словакия"},"slk":{"official":"Slovensk\xe1 republika","common":"Slovensko"},"spa":{"official":"Rep\xfablica Eslovaca","common":"Rep\xfablica Eslovaca"},"swe":{"official":"Republiken Slovakien","common":"Slovakien"},"urd":{"official":"جمہوریہ سلوواکیہ","common":"سلوواکیہ"},"zho":{"official":"斯洛伐克共和国","common":"斯洛伐克"}},"latlng":[48.66666666,19.5],"landlocked":true,"borders":["AUT","CZE","HUN","POL","UKR"],"area":49037,"flag":"\uD83C\uDDF8\uD83C\uDDF0","demonyms":{"eng":{"f":"Slovak","m":"Slovak"},"fra":{"f":"Slovaque","m":"Slovaque"}}},{"name":{"common":"Slovenia","official":"Republic of Slovenia","native":{"slv":{"official":"Republika Slovenija","common":"Slovenija"}}},"tld":[".si"],"cca2":"SI","ccn3":"705","cca3":"SVN","cioc":"SLO","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["86"]},"capital":["Ljubljana"],"altSpellings":["SI","Republic of Slovenia","Republika Slovenija"],"region":"Europe","subregion":"Central Europe","languages":{"slv":"Slovene"},"translations":{"ces":{"official":"Slovinsk\xe1 republika","common":"Slovinsko"},"deu":{"official":"Republik Slowenien","common":"Slowenien"},"est":{"official":"Sloveenia Vabariik","common":"Sloveenia"},"fin":{"official":"Slovenian tasavalta","common":"Slovenia"},"fra":{"official":"R\xe9publique de Slov\xe9nie","common":"Slov\xe9nie"},"hrv":{"official":"Republika Slovenija","common":"Slovenija"},"hun":{"official":"Szlov\xe9n K\xf6zt\xe1rsas\xe1g","common":"Szlov\xe9nia"},"ita":{"official":"Repubblica di Slovenia","common":"Slovenia"},"jpn":{"official":"スロベニア共和国","common":"スロベニア"},"kor":{"official":"슬로베니아 공화국","common":"슬로베니아"},"nld":{"official":"Republiek Sloveni\xeb","common":"Sloveni\xeb"},"per":{"official":"جمهوری اسلوونی","common":"اسلوونی"},"pol":{"official":"Republika Słowenii","common":"Słowenia"},"por":{"official":"Rep\xfablica da Eslov\xe9nia","common":"Eslov\xe9nia"},"rus":{"official":"Республика Словения","common":"Словения"},"slk":{"official":"Slovinsk\xe1 republika","common":"Slovinsko"},"spa":{"official":"Rep\xfablica de Eslovenia","common":"Eslovenia"},"swe":{"official":"Republiken Slovenien","common":"Slovenien"},"urd":{"official":"جمہوریہ سلووینیا","common":"سلووینیا"},"zho":{"official":"斯洛文尼亚共和国","common":"斯洛文尼亚"}},"latlng":[46.11666666,14.81666666],"landlocked":false,"borders":["AUT","HRV","ITA","HUN"],"area":20273,"flag":"\uD83C\uDDF8\uD83C\uDDEE","demonyms":{"eng":{"f":"Slovene","m":"Slovene"},"fra":{"f":"Slov\xe8ne","m":"Slov\xe8ne"}}},{"name":{"common":"Sweden","official":"Kingdom of Sweden","native":{"swe":{"official":"Konungariket Sverige","common":"Sverige"}}},"tld":[".se"],"cca2":"SE","ccn3":"752","cca3":"SWE","cioc":"SWE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SEK":{"name":"Swedish krona","symbol":"kr"}},"idd":{"root":"+4","suffixes":["6"]},"capital":["Stockholm"],"altSpellings":["SE","Kingdom of Sweden","Konungariket Sverige"],"region":"Europe","subregion":"Northern Europe","languages":{"swe":"Swedish"},"translations":{"ces":{"official":"Šv\xe9dsk\xe9 kr\xe1lovstv\xed","common":"Šv\xe9dsko"},"deu":{"official":"K\xf6nigreich Schweden","common":"Schweden"},"est":{"official":"Rootsi Kuningriik","common":"Rootsi"},"fin":{"official":"Ruotsin kuningaskunta","common":"Ruotsi"},"fra":{"official":"Royaume de Su\xe8de","common":"Su\xe8de"},"hrv":{"official":"Kraljevina Švedska","common":"Švedska"},"hun":{"official":"Sv\xe9d Kir\xe1lys\xe1g","common":"Sv\xe9dorsz\xe1g"},"ita":{"official":"Regno di Svezia","common":"Svezia"},"jpn":{"official":"スウェーデン王国","common":"スウェーデン"},"kor":{"official":"스웨덴 왕국","common":"스웨덴"},"nld":{"official":"Koninkrijk Zweden","common":"Zweden"},"per":{"official":"پادشاهی سوئد","common":"سوئد"},"pol":{"official":"Kr\xf3lestwo Szwecji","common":"Szwecja"},"por":{"official":"Reino da Su\xe9cia","common":"Su\xe9cia"},"rus":{"official":"Королевство Швеция","common":"Швеция"},"slk":{"official":"Šv\xe9dske kr\xe1ľovstvo","common":"Šv\xe9dsko"},"spa":{"official":"Reino de Suecia","common":"Suecia"},"swe":{"official":"Konungariket Sverige","common":"Sverige"},"urd":{"official":"مملکتِ سویڈن","common":"سویڈن"},"zho":{"official":"瑞典王国","common":"瑞典"}},"latlng":[62,15],"landlocked":false,"borders":["FIN","NOR"],"area":450295,"flag":"\uD83C\uDDF8\uD83C\uDDEA","demonyms":{"eng":{"f":"Swedish","m":"Swedish"},"fra":{"f":"Su\xe9doise","m":"Su\xe9dois"}}},{"name":{"common":"Eswatini","official":"Kingdom of Eswatini","native":{"eng":{"official":"Kingdom of Eswatini","common":"Eswatini"},"ssw":{"official":"Umbuso weSwatini","common":"eSwatini"}}},"tld":[".sz"],"cca2":"SZ","ccn3":"748","cca3":"SWZ","cioc":"SWZ","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SZL":{"name":"Swazi lilangeni","symbol":"L"},"ZAR":{"name":"South African rand","symbol":"R"}},"idd":{"root":"+2","suffixes":["68"]},"capital":["Lobamba"],"altSpellings":["SZ","Swaziland","weSwatini","Swatini","Ngwane","Kingdom of Eswatini","Umbuso weSwatini"],"region":"Africa","subregion":"Southern Africa","languages":{"eng":"English","ssw":"Swazi"},"translations":{"ces":{"official":"Svazijsk\xe9 kr\xe1lovstv\xed","common":"Svazijsko"},"deu":{"official":"K\xf6nigreich Eswatini","common":"Swasiland"},"est":{"official":"eSwatini Kuningriik","common":"Svaasimaa"},"fin":{"official":"Swazimaan kuningaskunta","common":"Swazimaa"},"fra":{"official":"Royaume d’Eswatini","common":"Swaziland"},"hrv":{"official":"Kraljevina eSwatini","common":"Svazi"},"hun":{"official":"Szv\xe1zif\xf6ldi Kir\xe1lys\xe1g","common":"Szv\xe1zif\xf6ld"},"ita":{"official":"Regno di eSwatini","common":"Swaziland"},"jpn":{"official":"スワジランド王国","common":"スワジランド"},"kor":{"official":"에스와티니 왕국","common":"에스와티니"},"nld":{"official":"Koninkrijk eSwatini","common":"Swaziland"},"per":{"official":"پادشاهی سوازیلند","common":"اسواتینی"},"pol":{"official":"Kr\xf3lestwo Suazi","common":"Suazi"},"por":{"official":"Reino de eSwatini","common":"Suazil\xe2ndia"},"rus":{"official":"Королевство Свазиленд","common":"Свазиленд"},"slk":{"official":"Svazijsk\xe9 kr\xe1ľovstvo","common":"Svazijsko"},"spa":{"official":"Reino de eSwatini","common":"Suazilandia"},"swe":{"official":"Konungariket Eswatini","common":"Swaziland"},"urd":{"official":"مملکتِ سوازی لینڈ","common":"سوازی لینڈ"},"zho":{"official":"斯威士兰王国","common":"斯威士兰"}},"latlng":[-26.5,31.5],"landlocked":true,"borders":["MOZ","ZAF"],"area":17364,"flag":"\uD83C\uDDF8\uD83C\uDDFF","demonyms":{"eng":{"f":"Swazi","m":"Swazi"},"fra":{"f":"Swazie","m":"Swazie"}}},{"name":{"common":"Sint Maarten","official":"Sint Maarten","native":{"eng":{"official":"Sint Maarten","common":"Sint Maarten"},"fra":{"official":"Saint-Martin","common":"Saint-Martin"},"nld":{"official":"Sint Maarten","common":"Sint Maarten"}}},"tld":[".sx"],"cca2":"SX","ccn3":"534","cca3":"SXM","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"ANG":{"name":"Netherlands Antillean guilder","symbol":"ƒ"}},"idd":{"root":"+1","suffixes":["721"]},"capital":["Philipsburg"],"altSpellings":["SX","Sint Maarten (Dutch part)"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English","fra":"French","nld":"Dutch"},"translations":{"ces":{"official":"Svat\xfd Martin","common":"Svat\xfd Martin (Nizozemsko)"},"deu":{"official":"Sint Maarten","common":"Sint Maarten"},"est":{"official":"Sint Maarten","common":"Sint Maarten"},"fin":{"official":"Sint Maarten","common":"Sint Maarten"},"fra":{"official":"Sint Maarten","common":"Saint-Martin"},"hrv":{"official":"Sveti Martin","common":"Sveti Martin"},"hun":{"official":"Sint Maarten","common":"Sint Maarten"},"ita":{"official":"Sint Maarten","common":"Sint Maarten"},"jpn":{"official":"シントマールテン島","common":"シント・マールテン"},"kor":{"official":"신트마르턴","common":"신트마르턴"},"nld":{"official":"Sint Maarten","common":"Sint Maarten"},"per":{"official":"سن مارتن","common":"سن مارتن"},"pol":{"official":"Sint Maarten","common":"Sint Maarten"},"por":{"official":"Sint Maarten","common":"S\xe3o Martinho"},"rus":{"official":"Синт-Маартен","common":"Синт-Мартен"},"slk":{"official":"Sint Maarten","common":"Sint Maarten"},"spa":{"official":"Sint Maarten","common":"Sint Maarten"},"swe":{"official":"Sint Maarten","common":"Sint Maarten"},"urd":{"official":"سنٹ مارٹن","common":"سنٹ مارٹن"},"zho":{"official":"圣马丁岛","common":"圣马丁岛"}},"latlng":[18.033333,-63.05],"landlocked":false,"borders":["MAF"],"area":34,"flag":"\uD83C\uDDF8\uD83C\uDDFD","demonyms":{"eng":{"f":"St. Maartener","m":"St. Maartener"},"fra":{"f":"Saint-Martinoise","m":"Saint-Martinois"}}},{"name":{"common":"Seychelles","official":"Republic of Seychelles","native":{"crs":{"official":"Repiblik Sesel","common":"Sesel"},"eng":{"official":"Republic of Seychelles","common":"Seychelles"},"fra":{"official":"R\xe9publique des Seychelles","common":"Seychelles"}}},"tld":[".sc"],"cca2":"SC","ccn3":"690","cca3":"SYC","cioc":"SEY","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SCR":{"name":"Seychellois rupee","symbol":"₨"}},"idd":{"root":"+2","suffixes":["48"]},"capital":["Victoria"],"altSpellings":["SC","Republic of Seychelles","Repiblik Sesel","R\xe9publique des Seychelles"],"region":"Africa","subregion":"Eastern Africa","languages":{"crs":"Seychellois Creole","eng":"English","fra":"French"},"translations":{"ces":{"official":"Seychelsk\xe1 republika","common":"Seychely"},"deu":{"official":"Republik der Seychellen","common":"Seychellen"},"est":{"official":"Seišelli Vabariik","common":"Seišellid"},"fin":{"official":"Seychellien tasavalta","common":"Seychellit"},"fra":{"official":"R\xe9publique des Seychelles","common":"Seychelles"},"hrv":{"official":"Republika Sejšeli","common":"Sejšeli"},"hun":{"official":"Seychelle K\xf6zt\xe1rsas\xe1g","common":"Seychelle-szigetek"},"ita":{"official":"Repubblica delle Seychelles","common":"Seychelles"},"jpn":{"official":"セイシェル共和国","common":"セーシェル"},"kor":{"official":"세이셸 공화국","common":"세이셸"},"nld":{"official":"Republiek der Seychellen","common":"Seychellen"},"per":{"official":"جمهوری سیشل","common":"سیشل"},"pol":{"official":"Republika Seszeli","common":"Seszele"},"por":{"official":"Rep\xfablica das Seychelles","common":"Seicheles"},"rus":{"official":"Республика Сейшельские Острова","common":"Сейшельские Острова"},"slk":{"official":"Seychelsk\xe1 republika","common":"Seychely"},"spa":{"official":"Rep\xfablica de las Seychelles","common":"Seychelles"},"swe":{"official":"Republiken Seychellerna","common":"Seychellerna"},"urd":{"official":"جمہوریہ سیچیلیس","common":"سیچیلیس"},"zho":{"official":"塞舌尔共和国","common":"塞舌尔"}},"latlng":[-4.58333333,55.66666666],"landlocked":false,"borders":[],"area":452,"flag":"\uD83C\uDDF8\uD83C\uDDE8","demonyms":{"eng":{"f":"Seychellois","m":"Seychellois"},"fra":{"f":"Seychelloise","m":"Seychellois"}}},{"name":{"common":"Syria","official":"Syrian Arab Republic","native":{"ara":{"official":"الجمهورية العربية السورية","common":"سوريا"}}},"tld":[".sy","سوريا."],"cca2":"SY","ccn3":"760","cca3":"SYR","cioc":"SYR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"SYP":{"name":"Syrian pound","symbol":"\xa3"}},"idd":{"root":"+9","suffixes":["63"]},"capital":["Damascus"],"altSpellings":["SY","Syrian Arab Republic","Al-Jumhūrīyah Al-ʻArabīyah As-Sūrīyah"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Syrsk\xe1 arabsk\xe1 republika","common":"S\xfdrie"},"deu":{"official":"Arabische Republik Syrien","common":"Syrien"},"est":{"official":"S\xfc\xfcria Araabia Vabariik","common":"S\xfc\xfcria"},"fin":{"official":"Syyrian arabitasavalta","common":"Syyria"},"fra":{"official":"R\xe9publique arabe syrienne","common":"Syrie"},"hrv":{"official":"Sirijska Arapska Republika","common":"Sirija"},"hun":{"official":"Sz\xedriai Arab K\xf6zt\xe1rsas\xe1g","common":"Sz\xedria"},"ita":{"official":"Repubblica araba siriana","common":"Siria"},"jpn":{"official":"シリアアラブ共和国","common":"シリア・アラブ共和国"},"kor":{"official":"시리아 아랍 공화국","common":"시리아"},"nld":{"official":"Syrische Arabische Republiek","common":"Syri\xeb"},"per":{"official":"جمهوری عربی سوریه","common":"سوریه"},"pol":{"official":"Syryjska Republika Arabska","common":"Syria"},"por":{"official":"Rep\xfablica \xc1rabe S\xedria","common":"S\xedria"},"rus":{"official":"Сирийская Арабская Республика","common":"Сирия"},"slk":{"official":"S\xfdrska arabsk\xe1 republika","common":"S\xfdria"},"spa":{"official":"Rep\xfablica \xc1rabe Siria","common":"Siria"},"swe":{"official":"Syriska arabiska republiken","common":"Syrien"},"urd":{"official":"عرب جمہوریہ سوریہ","common":"سوریہ"},"zho":{"official":"叙利亚阿拉伯共和国","common":"叙利亚"}},"latlng":[35,38],"landlocked":false,"borders":["IRQ","ISR","JOR","LBN","TUR"],"area":185180,"flag":"\uD83C\uDDF8\uD83C\uDDFE","demonyms":{"eng":{"f":"Syrian","m":"Syrian"},"fra":{"f":"Syrienne","m":"Syrien"}}},{"name":{"common":"Turks and Caicos Islands","official":"Turks and Caicos Islands","native":{"eng":{"official":"Turks and Caicos Islands","common":"Turks and Caicos Islands"}}},"tld":[".tc"],"cca2":"TC","ccn3":"796","cca3":"TCA","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["649"]},"capital":["Cockburn Town"],"altSpellings":["TC"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Turks a Caicos","common":"Turks a Caicos"},"deu":{"official":"Turks und Caicos Inseln","common":"Turks-und Caicosinseln"},"est":{"official":"Turksi ja Caicose saared","common":"Turks ja Caicos"},"fin":{"official":"Turks-ja Caicossaaret","common":"Turks-ja Caicossaaret"},"fra":{"official":"\xceles Turques et Ca\xefques","common":"\xceles Turques-et-Ca\xefques"},"hrv":{"official":"Otoci Turks i Caicos","common":"Otoci Turks i Caicos"},"hun":{"official":"Turks- \xe9s Caicos-szigetek","common":"Turks- \xe9s Caicos-szigetek"},"ita":{"official":"Turks e Caicos","common":"Isole Turks e Caicos"},"jpn":{"official":"タークス\xb7カイコス諸島","common":"タークス・カイコス諸島"},"kor":{"official":"터크스 케이커스 제도","common":"터크스 케이커스 제도"},"nld":{"official":"Turks-en Caicoseilanden","common":"Turks-en Caicoseilanden"},"per":{"official":"جزایر تورکس و کایکوس","common":"جزایر تورکس و کایکوس"},"pol":{"official":"Turks i Caicos","common":"Turks i Caicos"},"por":{"official":"Ilhas Turks e Caicos","common":"Ilhas Turks e Caicos"},"rus":{"official":"Теркс и Кайкос острова","common":"Теркс и Кайкос"},"slk":{"official":"Ostrovy Turks a Caicos","common":"Turks a Caicos"},"spa":{"official":"Islas Turcas y Caicos","common":"Islas Turks y Caicos"},"swe":{"official":"Turks- och Caicos\xf6arna","common":"Turks- och Caicos\xf6arna"},"urd":{"official":"جزائر کیکس و ترکیہ","common":"جزائر کیکس و ترکیہ"},"zho":{"official":"特克斯和凯科斯群岛","common":"特克斯和凯科斯群岛"}},"latlng":[21.75,-71.58333333],"landlocked":false,"borders":[],"area":948,"flag":"\uD83C\uDDF9\uD83C\uDDE8","demonyms":{"eng":{"f":"Turks and Caicos Islander","m":"Turks and Caicos Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Chad","official":"Republic of Chad","native":{"ara":{"official":"جمهورية تشاد","common":"تشاد‎"},"fra":{"official":"R\xe9publique du Tchad","common":"Tchad"}}},"tld":[".td"],"cca2":"TD","ccn3":"148","cca3":"TCD","cioc":"CHA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XAF":{"name":"Central African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["35"]},"capital":["N\'Djamena"],"altSpellings":["TD","Tchad","Republic of Chad","R\xe9publique du Tchad"],"region":"Africa","subregion":"Middle Africa","languages":{"ara":"Arabic","fra":"French"},"translations":{"ces":{"official":"Čadsk\xe1 republika","common":"Čad"},"cym":{"official":"Gweriniaeth Tsiad","common":"Tsiad"},"deu":{"official":"Republik Tschad","common":"Tschad"},"est":{"official":"Tšaadi Vabariik","common":"Tšaad"},"fin":{"official":"Tšadin tasavalta","common":"Tšad"},"fra":{"official":"R\xe9publique du Tchad","common":"Tchad"},"hrv":{"official":"Čadu","common":"Čad"},"hun":{"official":"Cs\xe1d K\xf6zt\xe1rsas\xe1g","common":"Cs\xe1d"},"ita":{"official":"Repubblica del Ciad","common":"Ciad"},"jpn":{"official":"チャド共和国","common":"チャド"},"kor":{"official":"차드 공화국","common":"차드"},"nld":{"official":"Republiek Tsjaad","common":"Tsjaad"},"per":{"official":"جمهوری چاد","common":"چاد"},"pol":{"official":"Republika Czadu","common":"Czad"},"por":{"official":"Rep\xfablica do Chade","common":"Chade"},"rus":{"official":"Республика Чад","common":"Чад"},"slk":{"official":"Čadsk\xe1 republika","common":"Čad"},"spa":{"official":"Rep\xfablica de Chad","common":"Chad"},"swe":{"official":"Republiken Tchad","common":"Tchad"},"urd":{"official":"جمہوریہ چاڈ","common":"چاڈ"},"zho":{"official":"乍得共和国","common":"乍得"}},"latlng":[15,19],"landlocked":true,"borders":["CMR","CAF","LBY","NER","NGA","SDN"],"area":1284000,"flag":"\uD83C\uDDF9\uD83C\uDDE9","demonyms":{"eng":{"f":"Chadian","m":"Chadian"},"fra":{"f":"Tchadienne","m":"Tchadien"}}},{"name":{"common":"Togo","official":"Togolese Republic","native":{"fra":{"official":"R\xe9publique togolaise","common":"Togo"}}},"tld":[".tg"],"cca2":"TG","ccn3":"768","cca3":"TGO","cioc":"TOG","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XOF":{"name":"West African CFA franc","symbol":"Fr"}},"idd":{"root":"+2","suffixes":["28"]},"capital":["Lom\xe9"],"altSpellings":["TG","Togolese","Togolese Republic","R\xe9publique Togolaise"],"region":"Africa","subregion":"Western Africa","languages":{"fra":"French"},"translations":{"ces":{"official":"Republika Togo","common":"Togo"},"deu":{"official":"Republik Togo","common":"Togo"},"est":{"official":"Togo Vabariik","common":"Togo"},"fin":{"official":"Togon tasavalta","common":"Togo"},"fra":{"official":"R\xe9publique togolaise","common":"Togo"},"hrv":{"official":"Togolese Republika","common":"Togo"},"hun":{"official":"Tog\xf3i K\xf6zt\xe1rsas\xe1g","common":"Togo"},"ita":{"official":"Repubblica del Togo","common":"Togo"},"jpn":{"official":"トーゴ共和国","common":"トーゴ"},"kor":{"official":"토고 공화국","common":"토고"},"nld":{"official":"Republiek Togo","common":"Togo"},"per":{"official":"جمهوری توگو","common":"توگو"},"pol":{"official":"Republika Togijska","common":"Togo"},"por":{"official":"Rep\xfablica do Togo","common":"Togo"},"rus":{"official":"Того Республика","common":"Того"},"slk":{"official":"Togsk\xe1 republika","common":"Togo"},"spa":{"official":"Rep\xfablica de Togo","common":"Togo"},"swe":{"official":"Republiken Togo","common":"Togo"},"urd":{"official":"جمہوریہ ٹوگو","common":"ٹوگو"},"zho":{"official":"多哥共和国","common":"多哥"}},"latlng":[8,1.16666666],"landlocked":false,"borders":["BEN","BFA","GHA"],"area":56785,"flag":"\uD83C\uDDF9\uD83C\uDDEC","demonyms":{"eng":{"f":"Togolese","m":"Togolese"},"fra":{"f":"Togolaise","m":"Togolais"}}},{"name":{"common":"Thailand","official":"Kingdom of Thailand","native":{"tha":{"official":"ราชอาณาจักรไทย","common":"ประเทศไทย"}}},"tld":[".th",".ไทย"],"cca2":"TH","ccn3":"764","cca3":"THA","cioc":"THA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"THB":{"name":"Thai baht","symbol":"฿"}},"idd":{"root":"+6","suffixes":["6"]},"capital":["Bangkok"],"altSpellings":["TH","Prathet","Thai","Kingdom of Thailand","ราชอาณาจักรไทย","Ratcha Anachak Thai"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"tha":"Thai"},"translations":{"ces":{"official":"Thajsk\xe9 kr\xe1lovstv\xed","common":"Thajsko"},"deu":{"official":"K\xf6nigreich Thailand","common":"Thailand"},"est":{"official":"Tai Kuningriik","common":"Tai"},"fin":{"official":"Thaimaan kuningaskunta","common":"Thaimaa"},"fra":{"official":"Royaume de Tha\xeflande","common":"Tha\xeflande"},"hrv":{"official":"Kraljevina Tajland","common":"Tajland"},"hun":{"official":"Thaif\xf6ldi Kir\xe1lys\xe1g","common":"Thaif\xf6ld"},"ita":{"official":"Regno di Thailandia","common":"Tailandia"},"jpn":{"official":"タイ王国","common":"タイ"},"kor":{"official":"타이 왕국","common":"태국"},"nld":{"official":"Koninkrijk Thailand","common":"Thailand"},"per":{"official":"پادشاهی تایلند","common":"تایلند"},"pol":{"official":"Kr\xf3lestwo Tajlandii","common":"Tajlandia"},"por":{"official":"Reino da Tail\xe2ndia","common":"Tail\xe2ndia"},"rus":{"official":"Королевство Таиланд","common":"Таиланд"},"slk":{"official":"Thajsk\xe9 kr\xe1ľovstvo","common":"Thajsko"},"spa":{"official":"Reino de Tailandia","common":"Tailandia"},"swe":{"official":"Konungariket Thailand","common":"Thailand"},"urd":{"official":"مملکتِ تھائی لینڈ","common":"تھائی لینڈ"},"zho":{"official":"泰王国","common":"泰国"}},"latlng":[15,100],"landlocked":false,"borders":["MMR","KHM","LAO","MYS"],"area":513120,"flag":"\uD83C\uDDF9\uD83C\uDDED","demonyms":{"eng":{"f":"Thai","m":"Thai"},"fra":{"f":"Tha\xeflandaise","m":"Tha\xeflandais"}}},{"name":{"common":"Tajikistan","official":"Republic of Tajikistan","native":{"rus":{"official":"Республика Таджикистан","common":"Таджикистан"},"tgk":{"official":"Ҷумҳурии Тоҷикистон","common":"Тоҷикистон"}}},"tld":[".tj"],"cca2":"TJ","ccn3":"762","cca3":"TJK","cioc":"TJK","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"TJS":{"name":"Tajikistani somoni","symbol":"ЅМ"}},"idd":{"root":"+9","suffixes":["92"]},"capital":["Dushanbe"],"altSpellings":["TJ","To\xe7ikiston","Republic of Tajikistan","Ҷумҳурии Тоҷикистон","\xc7umhuriyi To\xe7ikiston"],"region":"Asia","subregion":"Central Asia","languages":{"rus":"Russian","tgk":"Tajik"},"translations":{"ces":{"official":"Republika T\xe1džikist\xe1n","common":"T\xe1džikist\xe1n"},"deu":{"official":"Republik Tadschikistan","common":"Tadschikistan"},"est":{"official":"Tadžikistani Vabariik","common":"Tadžikistan"},"fin":{"official":"Tadžikistanin tasavalta","common":"Tadžikistan"},"fra":{"official":"R\xe9publique du Tadjikistan","common":"Tadjikistan"},"hrv":{"official":"Republika Tadžikistan","common":"Tađikistan"},"hun":{"official":"T\xe1dzsik K\xf6zt\xe1rsas\xe1g","common":"T\xe1dzsikiszt\xe1n"},"ita":{"official":"Repubblica del Tajikistan","common":"Tagikistan"},"jpn":{"official":"タジキスタン共和国","common":"タジキスタン"},"kor":{"official":"타지키스탄 공화국","common":"타지키스탄"},"nld":{"official":"Tadzjikistan","common":"Tadzjikistan"},"per":{"official":"جمهوری تاجیکستان","common":"تاجیکِستان"},"pol":{"official":"Republika Tadżykistanu","common":"Tadżykistan"},"por":{"official":"Rep\xfablica do Tajiquist\xe3o","common":"Tajiquist\xe3o"},"rus":{"official":"Республика Таджикистан","common":"Таджикистан"},"slk":{"official":"Taǆick\xe1 republika","common":"Taǆikistan"},"spa":{"official":"Rep\xfablica de Tayikist\xe1n","common":"Tayikist\xe1n"},"swe":{"official":"Republiken Tadzjikistan","common":"Tadzjikistan"},"urd":{"official":"جمہوریہ تاجکستان","common":"تاجکستان"},"zho":{"official":"塔吉克斯坦共和国","common":"塔吉克斯坦"}},"latlng":[39,71],"landlocked":true,"borders":["AFG","CHN","KGZ","UZB"],"area":143100,"flag":"\uD83C\uDDF9\uD83C\uDDEF","demonyms":{"eng":{"f":"Tadzhik","m":"Tadzhik"},"fra":{"f":"Tadjike","m":"Tadjike"}}},{"name":{"common":"Tokelau","official":"Tokelau","native":{"eng":{"official":"Tokelau","common":"Tokelau"},"smo":{"official":"Tokelau","common":"Tokelau"},"tkl":{"official":"Tokelau","common":"Tokelau"}}},"tld":[".tk"],"cca2":"TK","ccn3":"772","cca3":"TKL","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"NZD":{"name":"New Zealand dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["90"]},"capital":["Fakaofo"],"altSpellings":["TK"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English","smo":"Samoan","tkl":"Tokelauan"},"translations":{"ces":{"official":"Tokelau","common":"Tokelau"},"deu":{"official":"Tokelau","common":"Tokelau"},"est":{"official":"Tokelau","common":"Tokelau"},"fin":{"official":"Tokelau","common":"Tokelau"},"fra":{"official":"\xceles Tokelau","common":"Tokelau"},"hrv":{"official":"Tokelau","common":"Tokelau"},"hun":{"official":"Tokelau-szigetek","common":"Tokelau-szigetek"},"ita":{"official":"Tokelau","common":"Isole Tokelau"},"jpn":{"official":"トケラウ諸島","common":"トケラウ"},"kor":{"official":"토켈라우","common":"토켈라우"},"nld":{"official":"Tokelau","common":"Tokelau"},"per":{"official":"توکلائو","common":"توکلائو"},"pol":{"official":"Tokelau","common":"Tokelau"},"por":{"official":"Tokelau","common":"Tokelau"},"rus":{"official":"Токелау","common":"Токелау"},"slk":{"official":"Tokelausk\xe9 ostrovy","common":"Tokelau"},"spa":{"official":"Tokelau","common":"Islas Tokelau"},"swe":{"official":"Tokelau\xf6arna","common":"Tokelau\xf6arna"},"urd":{"official":"ٹوکیلاؤ","common":"ٹوکیلاؤ"},"zho":{"official":"托克劳","common":"托克劳"}},"latlng":[-9,-172],"landlocked":false,"borders":[],"area":12,"flag":"\uD83C\uDDF9\uD83C\uDDF0","demonyms":{"eng":{"f":"Tokelauan","m":"Tokelauan"},"fra":{"f":"","m":""}}},{"name":{"common":"Turkmenistan","official":"Turkmenistan","native":{"rus":{"official":"Туркменистан","common":"Туркмения"},"tuk":{"official":"T\xfcrkmenistan","common":"T\xfcrkmenistan"}}},"tld":[".tm"],"cca2":"TM","ccn3":"795","cca3":"TKM","cioc":"TKM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"TMT":{"name":"Turkmenistan manat","symbol":"m"}},"idd":{"root":"+9","suffixes":["93"]},"capital":["Ashgabat"],"altSpellings":["TM"],"region":"Asia","subregion":"Central Asia","languages":{"rus":"Russian","tuk":"Turkmen"},"translations":{"ces":{"official":"Turkmenist\xe1n","common":"Turkmenist\xe1n"},"deu":{"official":"Turkmenistan","common":"Turkmenistan"},"est":{"official":"T\xfcrkmenistan","common":"T\xfcrkmenistan"},"fin":{"official":"Turkmenistan","common":"Turkmenistan"},"fra":{"official":"Turkm\xe9nistan","common":"Turkm\xe9nistan"},"hrv":{"official":"Turkmenistan","common":"Turkmenistan"},"hun":{"official":"T\xfcrkm\xe9n K\xf6zt\xe1rsas\xe1g","common":"T\xfcrkmeniszt\xe1n"},"ita":{"official":"Turkmenistan","common":"Turkmenistan"},"jpn":{"official":"トルクメニスタン","common":"トルクメニスタン"},"kor":{"official":"투르크메니스탄","common":"투르크메니스탄"},"nld":{"official":"Turkmenistan","common":"Turkmenistan"},"per":{"official":"جمهوری خلق ترکمنستان","common":"ترکمنستان"},"pol":{"official":"Republika Turkmenistanu","common":"Turkmenistan"},"por":{"official":"Turcomenist\xe3o","common":"Turquemenist\xe3o"},"rus":{"official":"Туркменистан","common":"Туркмения"},"slk":{"official":"Turkm\xe9nsko","common":"Turkm\xe9nsko"},"spa":{"official":"Turkmenist\xe1n","common":"Turkmenist\xe1n"},"swe":{"official":"Turkmenistan","common":"Turkmenistan"},"urd":{"official":"ترکمانستان","common":"ترکمانستان"},"zho":{"official":"土库曼斯坦","common":"土库曼斯坦"}},"latlng":[40,60],"landlocked":true,"borders":["AFG","IRN","KAZ","UZB"],"area":488100,"flag":"\uD83C\uDDF9\uD83C\uDDF2","demonyms":{"eng":{"f":"Turkmen","m":"Turkmen"},"fra":{"f":"Turkm\xe8ne","m":"Turkm\xe8ne"}}},{"name":{"common":"Timor-Leste","official":"Democratic Republic of Timor-Leste","native":{"por":{"official":"Rep\xfablica Democr\xe1tica de Timor-Leste","common":"Timor-Leste"},"tet":{"official":"Rep\xfablika Demokr\xe1tika Tim\xf3r-Leste","common":"Tim\xf3r-Leste"}}},"tld":[".tl"],"cca2":"TL","ccn3":"626","cca3":"TLS","cioc":"TLS","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["70"]},"capital":["Dili"],"altSpellings":["TL","East Timor","Democratic Republic of Timor-Leste","Rep\xfablica Democr\xe1tica de Timor-Leste","Rep\xfablika Demokr\xe1tika Tim\xf3r-Leste","Tim\xf3r Lorosa\'e","Timor Lorosae"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"por":"Portuguese","tet":"Tetum"},"translations":{"ces":{"official":"Demokratick\xe1 republika V\xfdchodn\xed Timor","common":"V\xfdchodn\xed Timor"},"deu":{"official":"Demokratische Republik Timor-Leste","common":"Osttimor"},"est":{"official":"Timor-Leste Demokraatlik Vabariik","common":"Ida-Timor"},"fin":{"official":"It\xe4-Timorin demokraattinen tasavalta","common":"It\xe4-Timor"},"fra":{"official":"R\xe9publique d\xe9mocratique du Timor oriental","common":"Timor oriental"},"hrv":{"official":"Demokratska Republika Timor-Leste","common":"Istočni Timor"},"hun":{"official":"Kelet-timori Demokratikus K\xf6zt\xe1rsas\xe1g","common":"Kelet-Timor"},"ita":{"official":"Repubblica Democratica di Timor Est","common":"Timor Est"},"jpn":{"official":"東ティモール民主共和国","common":"東ティモール"},"kor":{"official":"동티모르 민주 공화국","common":"동티모르"},"nld":{"official":"Democratische Republiek Oost-Timor","common":"Oost-Timor"},"per":{"official":"جمهوری دموکراتیک تیمور شرقی","common":"تیمور شرقی"},"pol":{"official":"Demokratyczna Republika Timoru Wschodniego","common":"Timor Wschodni"},"por":{"official":"Rep\xfablica Democr\xe1tica de Timor-Leste","common":"Timor-Leste"},"rus":{"official":"Демократическая Республика Тимор -Лешти","common":"Восточный Тимор"},"slk":{"official":"V\xfdchodotimorsk\xe1 demokratick\xe1 republika","common":"V\xfdchodn\xfd Timor"},"spa":{"official":"Rep\xfablica Democr\xe1tica de Timor-Leste","common":"Timor Oriental"},"swe":{"official":"Demokratiska republiken \xd6sttimor","common":"\xd6sttimor"},"urd":{"official":"جمہوری جمہوریہ مشرقی تیمور","common":"مشرقی تیمور"},"zho":{"official":"东帝汶民主共和国","common":"东帝汶"}},"latlng":[-8.83333333,125.91666666],"landlocked":false,"borders":["IDN"],"area":14874,"flag":"\uD83C\uDDF9\uD83C\uDDF1","demonyms":{"eng":{"f":"East Timorese","m":"East Timorese"},"fra":{"f":"Est-timoraise","m":"Est-timorais"}}},{"name":{"common":"Tonga","official":"Kingdom of Tonga","native":{"eng":{"official":"Kingdom of Tonga","common":"Tonga"},"ton":{"official":"Kingdom of Tonga","common":"Tonga"}}},"tld":[".to"],"cca2":"TO","ccn3":"776","cca3":"TON","cioc":"TGA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"TOP":{"name":"Tongan paʻanga","symbol":"T$"}},"idd":{"root":"+6","suffixes":["76"]},"capital":["Nuku\'alofa"],"altSpellings":["TO"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English","ton":"Tongan"},"translations":{"ces":{"official":"Kr\xe1lovstv\xed Tonga","common":"Tonga"},"deu":{"official":"K\xf6nigreich Tonga","common":"Tonga"},"est":{"official":"Tonga Kuningriik","common":"Tonga"},"fin":{"official":"Tongan kuningaskunta","common":"Tonga"},"fra":{"official":"Royaume des Tonga","common":"Tonga"},"hrv":{"official":"Kraljevina Tonga","common":"Tonga"},"hun":{"official":"Tongai Kir\xe1lys\xe1g","common":"Tonga"},"ita":{"official":"Regno di Tonga","common":"Tonga"},"jpn":{"official":"トンガ王国","common":"トンガ"},"kor":{"official":"통가 왕국","common":"통가"},"nld":{"official":"Koninkrijk Tonga","common":"Tonga"},"per":{"official":"پادشاهی تونگا","common":"تونگا"},"pol":{"official":"Kr\xf3lestwo Tonga","common":"Tonga"},"por":{"official":"Reino de Tonga","common":"Tonga"},"rus":{"official":"Королевство Тонга","common":"Тонга"},"slk":{"official":"Tongsk\xe9 kr\xe1ľovstvo","common":"Tonga"},"spa":{"official":"Reino de Tonga","common":"Tonga"},"swe":{"official":"Konungariket Tonga","common":"Tonga"},"urd":{"official":"مملکتِ ٹونگا","common":"ٹونگا"},"zho":{"official":"汤加王国","common":"汤加"}},"latlng":[-20,-175],"landlocked":false,"borders":[],"area":747,"flag":"\uD83C\uDDF9\uD83C\uDDF4","demonyms":{"eng":{"f":"Tongan","m":"Tongan"},"fra":{"f":"Tonguienne","m":"Tonguien"}}},{"name":{"common":"Trinidad and Tobago","official":"Republic of Trinidad and Tobago","native":{"eng":{"official":"Republic of Trinidad and Tobago","common":"Trinidad and Tobago"}}},"tld":[".tt"],"cca2":"TT","ccn3":"780","cca3":"TTO","cioc":"TTO","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"TTD":{"name":"Trinidad and Tobago dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["868"]},"capital":["Port of Spain"],"altSpellings":["TT","Republic of Trinidad and Tobago"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Republika Trinidad a Tobago","common":"Trinidad a Tobago"},"deu":{"official":"Republik Trinidad und Tobago","common":"Trinidad und Tobago"},"est":{"official":"Trinidadi ja Tobago Vabariik","common":"Trinidad ja Tobago"},"fin":{"official":"Trinidadin ja Tobagon tasavalta","common":"Trinidad ja Tobago"},"fra":{"official":"R\xe9publique de Trinit\xe9-et-Tobago","common":"Trinit\xe9-et-Tobago"},"hrv":{"official":"Republika Trinidad i Tobago","common":"Trinidad i Tobago"},"hun":{"official":"Trinidad \xe9s Tobago K\xf6zt\xe1rsas\xe1g","common":"Trinidad \xe9s Tobago"},"ita":{"official":"Repubblica di Trinidad e Tobago","common":"Trinidad e Tobago"},"jpn":{"official":"トリニダード\xb7トバゴ共和国","common":"トリニダード・トバゴ"},"kor":{"official":"트리니다드 토바고 공화국","common":"트리니다드 토바고"},"nld":{"official":"Republiek Trinidad en Tobago","common":"Trinidad en Tobago"},"per":{"official":"جمهوری ترینیداد و توباگو","common":"ترینیداد و توباگو"},"pol":{"official":"Trynidad i Tobago","common":"Trynidad i Tobago"},"por":{"official":"Rep\xfablica de Trinidad e Tobago","common":"Trinidade e Tobago"},"rus":{"official":"Республика Тринидад и Тобаго","common":"Тринидад и Тобаго"},"slk":{"official":"Republika Trinidad a Tobaga","common":"Trinidad a Tobago"},"spa":{"official":"Rep\xfablica de Trinidad y Tobago","common":"Trinidad y Tobago"},"swe":{"official":"Republiken Trinidad och Tobago","common":"Trinidad och Tobago"},"urd":{"official":"جمہوریہ ٹرینیڈاڈ و ٹوباگو","common":"ٹرینیڈاڈ و ٹوباگو"},"zho":{"official":"特立尼达和多巴哥共和国","common":"特立尼达和多巴哥"}},"latlng":[11,-61],"landlocked":false,"borders":[],"area":5130,"flag":"\uD83C\uDDF9\uD83C\uDDF9","demonyms":{"eng":{"f":"Trinidadian","m":"Trinidadian"},"fra":{"f":"Trinidadienne","m":"Trinidadien"}}},{"name":{"common":"Tunisia","official":"Tunisian Republic","native":{"ara":{"official":"الجمهورية التونسية","common":"تونس"}}},"tld":[".tn"],"cca2":"TN","ccn3":"788","cca3":"TUN","cioc":"TUN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"TND":{"name":"Tunisian dinar","symbol":"د.ت"}},"idd":{"root":"+2","suffixes":["16"]},"capital":["Tunis"],"altSpellings":["TN","Republic of Tunisia","al-Jumhūriyyah at-Tūnisiyyah"],"region":"Africa","subregion":"Northern Africa","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Tunisk\xe1 republika","common":"Tunisko"},"deu":{"official":"Tunesische Republik","common":"Tunesien"},"est":{"official":"Tuneesia Vabariik","common":"Tuneesia"},"fin":{"official":"Tunisian tasavalta","common":"Tunisia"},"fra":{"official":"R\xe9publique tunisienne","common":"Tunisie"},"hrv":{"official":"Tuniski Republika","common":"Tunis"},"hun":{"official":"Tun\xe9ziai K\xf6zt\xe1rsas\xe1g","common":"Tun\xe9zia"},"ita":{"official":"Repubblica tunisina","common":"Tunisia"},"jpn":{"official":"チュニジア共和国","common":"チュニジア"},"kor":{"official":"튀니지 공화국","common":"튀니지"},"nld":{"official":"Republiek Tunesi\xeb","common":"Tunesi\xeb"},"per":{"official":"جمهوری تونس","common":"تونس"},"pol":{"official":"Republika Tunezyjska","common":"Tunezja"},"por":{"official":"Rep\xfablica da Tun\xedsia","common":"Tun\xedsia"},"rus":{"official":"Тунисской Республики","common":"Тунис"},"slk":{"official":"Tunisk\xe1 republika","common":"Tunisko"},"spa":{"official":"Rep\xfablica de T\xfanez","common":"T\xfanez"},"swe":{"official":"Republiken Tunisien","common":"Tunisien"},"urd":{"official":"جمہوریہ تونس","common":"تونس"},"zho":{"official":"突尼斯共和国","common":"突尼斯"}},"latlng":[34,9],"landlocked":false,"borders":["DZA","LBY"],"area":163610,"flag":"\uD83C\uDDF9\uD83C\uDDF3","demonyms":{"eng":{"f":"Tunisian","m":"Tunisian"},"fra":{"f":"Tunisienne","m":"Tunisien"}}},{"name":{"common":"Turkey","official":"Republic of T\xfcrkiye","native":{"tur":{"official":"T\xfcrkiye Cumhuriyeti","common":"T\xfcrkiye"}}},"tld":[".tr"],"cca2":"TR","ccn3":"792","cca3":"TUR","cioc":"TUR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"TRY":{"name":"Turkish lira","symbol":"₺"}},"idd":{"root":"+9","suffixes":["0"]},"capital":["Ankara"],"altSpellings":["TR","Turkiye","Republic of Turkey","T\xfcrkiye Cumhuriyeti"],"region":"Asia","subregion":"Western Asia","languages":{"tur":"Turkish"},"translations":{"ces":{"official":"Tureck\xe1 republika","common":"Turecko"},"deu":{"official":"Republik T\xfcrkei","common":"T\xfcrkei"},"est":{"official":"T\xfcrgi Vabariik","common":"T\xfcrgi"},"fin":{"official":"Turkin tasavalta","common":"Turkki"},"fra":{"official":"R\xe9publique de Turquie","common":"Turquie"},"hrv":{"official":"Republika Turska","common":"Turska"},"hun":{"official":"T\xf6r\xf6k K\xf6zt\xe1rsas\xe1g","common":"T\xf6r\xf6korsz\xe1g"},"ita":{"official":"Repubblica di Turchia","common":"Turchia"},"jpn":{"official":"トルコ共和国","common":"トルコ"},"kor":{"official":"터키 공화국","common":"터키"},"nld":{"official":"Republiek Turkije","common":"Turkije"},"per":{"official":"جمهوری ترکیه","common":"ترکیه"},"pol":{"official":"Republika Turcji","common":"Turcja"},"por":{"official":"Rep\xfablica da Turquia","common":"Turquia"},"rus":{"official":"Республика Турции","common":"Турция"},"slk":{"official":"Tureck\xe1 republika","common":"Turecko"},"spa":{"official":"Rep\xfablica de Turqu\xeda","common":"Turqu\xeda"},"swe":{"official":"Republiken Turkiet","common":"Turkiet"},"urd":{"official":"جمہوریہ ترکی","common":"ترکی"},"zho":{"official":"土耳其共和国","common":"土耳其"}},"latlng":[39,35],"landlocked":false,"borders":["ARM","AZE","BGR","GEO","GRC","IRN","IRQ","SYR"],"area":783562,"flag":"\uD83C\uDDF9\uD83C\uDDF7","demonyms":{"eng":{"f":"Turkish","m":"Turkish"},"fra":{"f":"Turque","m":"Turc"}}},{"name":{"common":"Tuvalu","official":"Tuvalu","native":{"eng":{"official":"Tuvalu","common":"Tuvalu"},"tvl":{"official":"Tuvalu","common":"Tuvalu"}}},"tld":[".tv"],"cca2":"TV","ccn3":"798","cca3":"TUV","cioc":"TUV","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"AUD":{"name":"Australian dollar","symbol":"$"},"TVD":{"name":"Tuvaluan dollar","symbol":"$"}},"idd":{"root":"+6","suffixes":["88"]},"capital":["Funafuti"],"altSpellings":["TV"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English","tvl":"Tuvaluan"},"translations":{"ces":{"official":"Tuvalu","common":"Tuvalu"},"deu":{"official":"Tuvalu","common":"Tuvalu"},"est":{"official":"Tuvalu","common":"Tuvalu"},"fin":{"official":"Tuvalu","common":"Tuvalu"},"fra":{"official":"Tuvalu","common":"Tuvalu"},"hrv":{"official":"Tuvalu","common":"Tuvalu"},"hun":{"official":"Tuvalu","common":"Tuvalu"},"ita":{"official":"Tuvalu","common":"Tuvalu"},"jpn":{"official":"ツバル","common":"ツバル"},"kor":{"official":"투발루","common":"투발루"},"nld":{"official":"Tuvalu","common":"Tuvalu"},"per":{"official":"تووالو","common":"تووالو"},"pol":{"official":"Tuvalu","common":"Tuvalu"},"por":{"official":"Tuvalu","common":"Tuvalu"},"rus":{"official":"Тувалу","common":"Тувалу"},"slk":{"official":"Tuvalu","common":"Tuvalu"},"spa":{"official":"Tuvalu","common":"Tuvalu"},"swe":{"official":"Tuvalu","common":"Tuvalu"},"urd":{"official":"تووالو","common":"تووالو"},"zho":{"official":"图瓦卢","common":"图瓦卢"}},"latlng":[-8,178],"landlocked":false,"borders":[],"area":26,"flag":"\uD83C\uDDF9\uD83C\uDDFB","demonyms":{"eng":{"f":"Tuvaluan","m":"Tuvaluan"},"fra":{"f":"Tuvaluane","m":"Tuvaluan"}}},{"name":{"common":"Taiwan","official":"Republic of China (Taiwan)","native":{"zho":{"official":"中華民國","common":"台灣"}}},"tld":[".tw",".台灣",".台湾"],"cca2":"TW","ccn3":"158","cca3":"TWN","cioc":"TPE","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"TWD":{"name":"New Taiwan dollar","symbol":"$"}},"idd":{"root":"+8","suffixes":["86"]},"capital":["Taipei"],"altSpellings":["TW","T\xe1iwān","Republic of China","中華民國","Zhōnghu\xe1 M\xedngu\xf3","Chinese Taipei"],"region":"Asia","subregion":"Eastern Asia","languages":{"zho":"Chinese"},"translations":{"ces":{"official":"Č\xednsk\xe1 republika","common":"Tchaj-wan"},"deu":{"official":"Republik China (Taiwan)","common":"Taiwan"},"est":{"official":"Taiwani","common":"Taiwan"},"fin":{"official":"Kiinan tasavalta","common":"Taiwan"},"fra":{"official":"R\xe9publique de Chine (Ta\xefwan)","common":"Ta\xefwan"},"hrv":{"official":"Republika Kina","common":"Tajvan"},"hun":{"official":"K\xednai K\xf6zt\xe1rsas\xe1g","common":"Tajvan"},"ita":{"official":"Repubblica cinese (Taiwan)","common":"Taiwan"},"jpn":{"official":"中華民国","common":"台湾"},"kor":{"official":"중화민국","common":"대만"},"nld":{"official":"Republiek China (Taiwan)","common":"Taiwan"},"per":{"official":"جمهوری چین","common":"تایوان"},"pol":{"official":"Republika Chińska (Tajwan)","common":"Tajwan"},"por":{"official":"Rep\xfablica da China","common":"Ilha Formosa"},"rus":{"official":"Китайская Республика","common":"Тайвань"},"slk":{"official":"Č\xednska republika","common":"Taiwan"},"spa":{"official":"Rep\xfablica de China en Taiw\xe1n","common":"Taiw\xe1n"},"swe":{"official":"Republiken Kina","common":"Taiwan"},"urd":{"official":"جمہوریہ چین (تائیوان)","common":"تائیوان"}},"latlng":[23.5,121],"landlocked":false,"borders":[],"area":36193,"flag":"\uD83C\uDDF9\uD83C\uDDFC","demonyms":{"eng":{"f":"Taiwanese","m":"Taiwanese"},"fra":{"f":"Ta\xefwanaise","m":"Ta\xefwanais"}}},{"name":{"common":"Tanzania","official":"United Republic of Tanzania","native":{"eng":{"official":"United Republic of Tanzania","common":"Tanzania"},"swa":{"official":"Jamhuri ya Muungano wa Tanzania","common":"Tanzania"}}},"tld":[".tz"],"cca2":"TZ","ccn3":"834","cca3":"TZA","cioc":"TAN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"TZS":{"name":"Tanzanian shilling","symbol":"Sh"}},"idd":{"root":"+2","suffixes":["55"]},"capital":["Dodoma"],"altSpellings":["TZ","Tanzania, United Republic of","United Republic of Tanzania","Jamhuri ya Muungano wa Tanzania"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English","swa":"Swahili"},"translations":{"ces":{"official":"Sjednocen\xe1 tanzansk\xe1 republika","common":"Tanzanie"},"deu":{"official":"Vereinigte Republik Tansania","common":"Tansania"},"est":{"official":"Tansaania \xdchendvabariik","common":"Tansaania"},"fin":{"official":"Tansanian yhdistynyt tasavalta","common":"Tansania"},"fra":{"official":"R\xe9publique -Unie de Tanzanie","common":"Tanzanie"},"hrv":{"official":"Ujedinjena Republika Tanzanija","common":"Tanzanija"},"hun":{"official":"T\xe1dzsik K\xf6zt\xe1rsas\xe1g","common":"T\xe1dzsikiszt\xe1n"},"ita":{"official":"Repubblica Unita di Tanzania","common":"Tanzania"},"jpn":{"official":"タンザニア連合共和国","common":"タンザニア"},"kor":{"official":"탄자니아 연합 공화국","common":"탄자니아"},"nld":{"official":"Verenigde Republiek Tanzania","common":"Tanzania"},"per":{"official":"جمهوری متحد تانزانیا","common":"تانزانیا"},"pol":{"official":"Zjednoczona Republika Tanzanii","common":"Tanzania"},"por":{"official":"Rep\xfablica Unida da Tanz\xe2nia","common":"Tanz\xe2nia"},"rus":{"official":"Объединенная Республика Танзания","common":"Танзания"},"slk":{"official":"Tanz\xe1nijsk\xe1 zjednoten\xe1 republika","common":"Tanz\xe1nia"},"spa":{"official":"Rep\xfablica Unida de Tanzania","common":"Tanzania"},"swe":{"official":"F\xf6renade republiken Tanzania","common":"Tanzania"},"urd":{"official":"متحدہ جمہوریہ تنزانیہ","common":"تنزانیہ"},"zho":{"official":"坦桑尼亚联合共和国","common":"坦桑尼亚"}},"latlng":[-6,35],"landlocked":false,"borders":["BDI","COD","KEN","MWI","MOZ","RWA","UGA","ZMB"],"area":945087,"flag":"\uD83C\uDDF9\uD83C\uDDFF","demonyms":{"eng":{"f":"Tanzanian","m":"Tanzanian"},"fra":{"f":"Tanzanienne","m":"Tanzanien"}}},{"name":{"common":"Uganda","official":"Republic of Uganda","native":{"eng":{"official":"Republic of Uganda","common":"Uganda"},"swa":{"official":"Republic of Uganda","common":"Uganda"}}},"tld":[".ug"],"cca2":"UG","ccn3":"800","cca3":"UGA","cioc":"UGA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"UGX":{"name":"Ugandan shilling","symbol":"Sh"}},"idd":{"root":"+2","suffixes":["56"]},"capital":["Kampala"],"altSpellings":["UG","Republic of Uganda","Jamhuri ya Uganda"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English","swa":"Swahili"},"translations":{"ces":{"official":"Ugandsk\xe1 republika","common":"Uganda"},"deu":{"official":"Republik Uganda","common":"Uganda"},"est":{"official":"Uganda Vabariik","common":"Uganda"},"fin":{"official":"Ugandan tasavalta","common":"Uganda"},"fra":{"official":"R\xe9publique de l\'Ouganda","common":"Ouganda"},"hrv":{"official":"Republika Uganda","common":"Uganda"},"hun":{"official":"Ugandai K\xf6zt\xe1rsas\xe1g","common":"Uganda"},"ita":{"official":"Repubblica di Uganda","common":"Uganda"},"jpn":{"official":"ウガンダ共和国","common":"ウガンダ"},"kor":{"official":"우간다 공화국","common":"우간다"},"nld":{"official":"Republiek Uganda","common":"Oeganda"},"per":{"official":"جمهوری اوگاندا","common":"اوگاندا"},"pol":{"official":"Republika Ugandy","common":"Uganda"},"por":{"official":"Rep\xfablica do Uganda","common":"Uganda"},"rus":{"official":"Республика Уганда","common":"Уганда"},"slk":{"official":"Ugandsk\xe1 republika","common":"Uganda"},"spa":{"official":"Rep\xfablica de Uganda","common":"Uganda"},"swe":{"official":"Republiken Uganda","common":"Uganda"},"urd":{"official":"جمہوریہ یوگنڈا","common":"یوگنڈا"},"zho":{"official":"乌干达共和国","common":"乌干达"}},"latlng":[1,32],"landlocked":true,"borders":["COD","KEN","RWA","SSD","TZA"],"area":241550,"flag":"\uD83C\uDDFA\uD83C\uDDEC","demonyms":{"eng":{"f":"Ugandan","m":"Ugandan"},"fra":{"f":"Ougandaise","m":"Ougandais"}}},{"name":{"common":"Ukraine","official":"Ukraine","native":{"ukr":{"official":"Україна","common":"Україна"}}},"tld":[".ua",".укр"],"cca2":"UA","ccn3":"804","cca3":"UKR","cioc":"UKR","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"UAH":{"name":"Ukrainian hryvnia","symbol":"₴"}},"idd":{"root":"+3","suffixes":["80"]},"capital":["Kyiv"],"altSpellings":["UA","Ukrayina"],"region":"Europe","subregion":"Eastern Europe","languages":{"ukr":"Ukrainian"},"translations":{"ces":{"official":"Ukrajina","common":"Ukrajina"},"deu":{"official":"Ukraine","common":"Ukraine"},"est":{"official":"Ukraina","common":"Ukraina"},"fin":{"official":"Ukraina","common":"Ukraina"},"fra":{"official":"Ukraine","common":"Ukraine"},"hrv":{"official":"Ukrajina","common":"Ukrajina"},"hun":{"official":"Ukrajna","common":"Ukrajna"},"ita":{"official":"Ucraina","common":"Ucraina"},"jpn":{"official":"ウクライナ","common":"ウクライナ"},"kor":{"official":"우크라이나","common":"우크라이나"},"nld":{"official":"Oekra\xefne","common":"Oekra\xefne"},"per":{"official":"اوکراین","common":"اوکراین"},"pol":{"official":"Ukraina","common":"Ukraina"},"por":{"official":"Ucr\xe2nia","common":"Ucr\xe2nia"},"rus":{"official":"Украина","common":"Украина"},"slk":{"official":"Ukrajina","common":"Ukrajina"},"spa":{"official":"Ucrania","common":"Ucrania"},"swe":{"official":"Ukraina","common":"Ukraina"},"urd":{"official":"یوکرین","common":"یوکرین"},"zho":{"official":"乌克兰","common":"乌克兰"}},"latlng":[49,32],"landlocked":false,"borders":["BLR","HUN","MDA","POL","ROU","RUS","SVK"],"area":603500,"flag":"\uD83C\uDDFA\uD83C\uDDE6","demonyms":{"eng":{"f":"Ukrainian","m":"Ukrainian"},"fra":{"f":"Ukrainienne","m":"Ukrainien"}}},{"name":{"common":"United States Minor Outlying Islands","official":"United States Minor Outlying Islands","native":{"eng":{"official":"United States Minor Outlying Islands","common":"United States Minor Outlying Islands"}}},"tld":[".us"],"cca2":"UM","ccn3":"581","cca3":"UMI","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+2","suffixes":["68"]},"capital":[],"altSpellings":["UM"],"region":"Americas","subregion":"North America","languages":{"eng":"English"},"translations":{"ces":{"official":"Menš\xed odlehl\xe9 ostrovy Spojen\xfdch st\xe1tů americk\xfdch","common":"Menš\xed odlehl\xe9 ostrovy USA"},"deu":{"official":"USA, kleinere ausgelagerte Inseln","common":"Kleinere Inselbesitzungen der Vereinigten Staaten"},"est":{"official":"\xdchendriikide v\xe4ikesed hajasaared","common":"\xdchendriikide hajasaared"},"fin":{"official":"Yhdysvaltain asumattomat saaret","common":"Yhdysvaltain asumattomat saaret"},"fra":{"official":"\xceles mineures \xe9loign\xe9es des \xc9tats-Unis","common":"\xceles mineures \xe9loign\xe9es des \xc9tats-Unis"},"hrv":{"official":"Mali udaljeni otoci SAD-a","common":"Mali udaljeni otoci SAD-a"},"hun":{"official":"Az Amerikai Egyes\xfclt \xc1llamok lakatlan k\xfclbirtokai","common":"Az Amerikai Egyes\xfclt \xc1llamok lakatlan k\xfclbirtokai"},"ita":{"official":"Stati Uniti Isole Minori","common":"Isole minori esterne degli Stati Uniti d\'America"},"jpn":{"official":"アメリカ合衆国外諸島","common":"合衆国領有小離島"},"kor":{"official":"미국령 군소 제도","common":"미국령 군소 제도"},"nld":{"official":"Kleine afgelegen eilanden van de Verenigde Staten","common":"Kleine afgelegen eilanden van de Verenigde Staten"},"per":{"official":"جزایر کوچک حاشیه‌ای ایالات متحده آمریکا","common":"جزایر کوچک حاشیه‌ای ایالات متحده آمریکا"},"pol":{"official":"Dalekie Wyspy Mniejsze Stan\xf3w Zjednoczonych","common":"Dalekie Wyspy Mniejsze Stan\xf3w Zjednoczonych"},"por":{"official":"Estados Unidos Ilhas Menores Distantes","common":"Ilhas Menores Distantes dos Estados Unidos"},"rus":{"official":"Внешние малые острова США","common":"Внешние малые острова США"},"slk":{"official":"Menšie odľahl\xe9 ostrovy Spjoen\xfdch št\xe1tov","common":"Menšie odľahl\xe9 ostrovy USA"},"spa":{"official":"Estados Unidos Islas menores alejadas de","common":"Islas Ultramarinas Menores de Estados Unidos"},"swe":{"official":"F\xf6renta staternas mindre \xf6ar i Oceanien och V\xe4stindien","common":"F\xf6renta staternas mindre \xf6ar i Oceanien och V\xe4stindien"},"urd":{"official":"امریکی چھوٹے بیرونی جزائر","common":"امریکی چھوٹے بیرونی جزائر"},"zho":{"official":"美国本土外小岛屿","common":"美国本土外小岛屿"}},"latlng":[19.3,166.633333],"landlocked":false,"borders":[],"area":34.2,"flag":"\uD83C\uDDFA\uD83C\uDDF2","demonyms":{"eng":{"f":"American Islander","m":"American Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Uruguay","official":"Oriental Republic of Uruguay","native":{"spa":{"official":"Rep\xfablica Oriental del Uruguay","common":"Uruguay"}}},"tld":[".uy"],"cca2":"UY","ccn3":"858","cca3":"URY","cioc":"URU","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"UYU":{"name":"Uruguayan peso","symbol":"$"}},"idd":{"root":"+5","suffixes":["98"]},"capital":["Montevideo"],"altSpellings":["UY","Oriental Republic of Uruguay","Rep\xfablica Oriental del Uruguay"],"region":"Americas","subregion":"South America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Uruguaysk\xe1 v\xfdchodn\xed republika","common":"Uruguay"},"deu":{"official":"Republik \xd6stlich des Uruguay","common":"Uruguay"},"est":{"official":"Uruguay Idavabariik","common":"Uruguay"},"fin":{"official":"Uruguayn it\xe4inen tasavalta","common":"Uruguay"},"fra":{"official":"R\xe9publique orientale de l\'Uruguay","common":"Uruguay"},"hrv":{"official":"Orijentalna Republika Urugvaj","common":"Urugvaj"},"hun":{"official":"Uruguayi Keleti K\xf6zt\xe1rsas\xe1g","common":"Uruguay"},"ita":{"official":"Repubblica Orientale dell\'Uruguay","common":"Uruguay"},"jpn":{"official":"ウルグアイ東方共和国","common":"ウルグアイ"},"kor":{"official":"우루과이 동방 공화국","common":"우루과이"},"nld":{"official":"Oosterse Republiek Uruguay","common":"Uruguay"},"per":{"official":"جمهوری اروگوئه","common":"اروگوئه"},"pol":{"official":"Wschodnia Republika Urugwaju","common":"Urugwaj"},"por":{"official":"Rep\xfablica Oriental do Uruguai","common":"Uruguai"},"rus":{"official":"Восточной Республики Уругвай","common":"Уругвай"},"slk":{"official":"Uruguajsk\xe1 v\xfdchodn\xe1 republika","common":"Uruguaj"},"spa":{"official":"Rep\xfablica Oriental del Uruguay","common":"Uruguay"},"swe":{"official":"Republiken Uruguay","common":"Uruguay"},"urd":{"official":"جمہوریہ شرقیہ یوراگوئے","common":"یوراگوئے"},"zho":{"official":"乌拉圭东岸共和国","common":"乌拉圭"}},"latlng":[-33,-56],"landlocked":false,"borders":["ARG","BRA"],"area":181034,"flag":"\uD83C\uDDFA\uD83C\uDDFE","demonyms":{"eng":{"f":"Uruguayan","m":"Uruguayan"},"fra":{"f":"Uruguayenne","m":"Uruguayen"}}},{"name":{"common":"United States","official":"United States of America","native":{"eng":{"official":"United States of America","common":"United States"}}},"tld":[".us"],"cca2":"US","ccn3":"840","cca3":"USA","cioc":"USA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","220","223","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","272","274","276","279","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","325","326","327","330","331","332","334","336","337","339","341","346","347","351","352","360","361","364","380","385","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","430","432","434","435","440","442","443","445","447","448","458","463","464","469","470","475","478","479","480","484","500","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","538","539","540","541","542","543","544","545","546","547","549","550","551","552","553","554","556","557","558","559","561","562","563","564","566","567","569","570","571","572","573","574","575","577","578","580","582","585","586","588","589","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","628","629","630","631","636","640","641","646","650","651","656","657","659","660","661","662","667","669","678","679","680","681","682","689","700","701","702","703","704","706","707","708","710","712","713","714","715","716","717","718","719","720","724","725","726","727","730","731","732","734","737","740","743","747","754","757","760","762","763","765","769","770","771","772","773","774","775","779","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","820","826","828","830","831","832","838","839","840","843","845","847","848","850","854","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","929","930","931","934","936","937","938","940","941","943","945","947","948","949","951","952","954","956","959","970","971","972","973","975","978","979","980","983","984","985","986","989"]},"capital":["Washington D.C."],"altSpellings":["US","USA","United States of America"],"region":"Americas","subregion":"North America","languages":{"eng":"English"},"translations":{"ces":{"official":"Spojen\xe9 st\xe1ty americk\xe9","common":"Spojen\xe9 st\xe1ty"},"deu":{"official":"Vereinigte Staaten von Amerika","common":"Vereinigte Staaten"},"est":{"official":"Ameerika \xdchendriigid","common":"Ameerika \xdchendriigid"},"fin":{"official":"Amerikan yhdysvallat","common":"Yhdysvallat"},"fra":{"official":"Les \xe9tats-unis d\'Am\xe9rique","common":"\xc9tats-Unis"},"hrv":{"official":"Sjedinjene Države Amerike","common":"Sjedinjene Američke Države"},"hun":{"official":"Amerikai Egyes\xfclt \xc1llamok","common":"Amerikai Egyes\xfclt \xc1llamok"},"ita":{"official":"Stati Uniti d\'America","common":"Stati Uniti d\'America"},"jpn":{"official":"アメリカ合衆国","common":"アメリカ合衆国"},"kor":{"official":"아메리카 합중국","common":"미국"},"nld":{"official":"Verenigde Staten van Amerika","common":"Verenigde Staten"},"per":{"official":"ایالات متحده آمریکا","common":"ایالات متحده آمریکا"},"pol":{"official":"Stany Zjednoczone Ameryki","common":"Stany Zjednoczone"},"por":{"official":"Estados Unidos da Am\xe9rica","common":"Estados Unidos"},"rus":{"official":"Соединенные Штаты Америки","common":"Соединённые Штаты Америки"},"slk":{"official":"Spojen\xe9 št\xe1ty Americk\xe9","common":"Spojen\xe9 št\xe1ty americk\xe9"},"spa":{"official":"Estados Unidos de Am\xe9rica","common":"Estados Unidos"},"swe":{"official":"Amerikas f\xf6renta stater","common":"USA"},"urd":{"official":"ریاستہائے متحدہ امریکا","common":"ریاستہائے متحدہ"},"zho":{"official":"美利坚合众国","common":"美国"}},"latlng":[38,-97],"landlocked":false,"borders":["CAN","MEX"],"area":9372610,"flag":"\uD83C\uDDFA\uD83C\uDDF8","demonyms":{"eng":{"f":"American","m":"American"},"fra":{"f":"Am\xe9ricaine","m":"Am\xe9ricain"}}},{"name":{"common":"Uzbekistan","official":"Republic of Uzbekistan","native":{"rus":{"official":"Республика Узбекистан","common":"Узбекистан"},"uzb":{"official":"O\'zbekiston Respublikasi","common":"O‘zbekiston"}}},"tld":[".uz"],"cca2":"UZ","ccn3":"860","cca3":"UZB","cioc":"UZB","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"UZS":{"name":"Uzbekistani soʻm","symbol":"so\'m"}},"idd":{"root":"+9","suffixes":["98"]},"capital":["Tashkent"],"altSpellings":["UZ","Republic of Uzbekistan","O‘zbekiston Respublikasi","Ўзбекистон Республикаси"],"region":"Asia","subregion":"Central Asia","languages":{"rus":"Russian","uzb":"Uzbek"},"translations":{"ces":{"official":"Republika Uzbekist\xe1n","common":"Uzbekist\xe1n"},"deu":{"official":"Republik Usbekistan","common":"Usbekistan"},"est":{"official":"Usbekistani Vabariik","common":"Usbekistan"},"fin":{"official":"Uzbekistanin tasavalta","common":"Uzbekistan"},"fra":{"official":"R\xe9publique d\'Ouzb\xe9kistan","common":"Ouzb\xe9kistan"},"hrv":{"official":"Republika Uzbekistan","common":"Uzbekistan"},"hun":{"official":"\xdczb\xe9g K\xf6zt\xe1rsas\xe1g","common":"\xdczbegiszt\xe1n"},"ita":{"official":"Repubblica di Uzbekistan","common":"Uzbekistan"},"jpn":{"official":"ウズベキスタン共和国","common":"ウズベキスタン"},"kor":{"official":"우즈베키스탄 공화국","common":"우즈베키스탄"},"nld":{"official":"Republiek Oezbekistan","common":"Oezbekistan"},"per":{"official":"جمهوری ازبکستان","common":"ازبکستان"},"pol":{"official":"Republika Uzbekistanu","common":"Uzbekistan"},"por":{"official":"Rep\xfablica do Usbequist\xe3o","common":"Uzbequist\xe3o"},"rus":{"official":"Республика Узбекистан","common":"Узбекистан"},"slk":{"official":"Uzbeck\xe1 republika","common":"Uzbekistan"},"spa":{"official":"Rep\xfablica de Uzbekist\xe1n","common":"Uzbekist\xe1n"},"swe":{"official":"Republiken Uzbekistan","common":"Uzbekistan"},"urd":{"official":"جمہوریہ ازبکستان","common":"ازبکستان"},"zho":{"official":"乌兹别克斯坦共和国","common":"乌兹别克斯坦"}},"latlng":[41,64],"landlocked":true,"borders":["AFG","KAZ","KGZ","TJK","TKM"],"area":447400,"flag":"\uD83C\uDDFA\uD83C\uDDFF","demonyms":{"eng":{"f":"Uzbekistani","m":"Uzbekistani"},"fra":{"f":"Ouzb\xe8ke","m":"Ouzb\xe8ke"}}},{"name":{"common":"Vatican City","official":"Vatican City State","native":{"ita":{"official":"Stato della Citt\xe0 del Vaticano","common":"Vaticano"},"lat":{"official":"Status Civitatis Vatican\xe6","common":"Vatican\xe6"}}},"tld":[".va"],"cca2":"VA","ccn3":"336","cca3":"VAT","cioc":"","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"EUR":{"name":"Euro","symbol":"€"}},"idd":{"root":"+3","suffixes":["906698","79"]},"capital":["Vatican City"],"altSpellings":["VA","Holy See (Vatican City State)","Vatican City State","Stato della Citt\xe0 del Vaticano"],"region":"Europe","subregion":"Southern Europe","languages":{"ita":"Italian","lat":"Latin"},"translations":{"ces":{"official":"Městsk\xfd st\xe1t Vatik\xe1n","common":"Vatik\xe1n"},"deu":{"official":"Staat Vatikanstadt","common":"Vatikanstadt"},"est":{"official":"Vatikani Linnriik","common":"Vatikan"},"fin":{"official":"Vatikaanin kaupunkivaltio","common":"Vatikaani"},"fra":{"official":"Cit\xe9 du Vatican","common":"Cit\xe9 du Vatican"},"hrv":{"official":"Vatikan","common":"Vatikan"},"hun":{"official":"Vatik\xe1n \xc1llam","common":"Vatik\xe1n"},"ita":{"official":"Citt\xe0 del Vaticano","common":"Citt\xe0 del Vaticano"},"jpn":{"official":"バチカン市国の状態","common":"バチカン市国"},"kor":{"official":"바티칸 시국","common":"바티칸"},"nld":{"official":"Vaticaanstad","common":"Vaticaanstad"},"per":{"official":"دولت‌شهر واتیکان","common":"واتیکان"},"pol":{"official":"Państwo Watykańskie","common":"Watykan"},"por":{"official":"Cidade do Vaticano","common":"Cidade do Vaticano"},"rus":{"official":"Город-государство Ватикан","common":"Ватикан"},"slk":{"official":"Sv\xe4t\xe1 stolica (Vatik\xe1nsky mestsk\xfd št\xe1t","common":"Vatik\xe1n"},"spa":{"official":"Ciudad del Vaticano","common":"Ciudad del Vaticano"},"swe":{"official":"Vatikanstaten","common":"Vatikanstaten"},"urd":{"official":"ویٹیکن سٹی","common":"ویٹیکن سٹی"},"zho":{"official":"梵蒂冈城国","common":"梵蒂冈"}},"latlng":[41.9,12.45],"landlocked":true,"borders":["ITA"],"area":0.44,"flag":"\uD83C\uDDFB\uD83C\uDDE6","demonyms":{"eng":{"f":"Vatican","m":"Vatican"},"fra":{"f":"Vaticane","m":"Vatican"}}},{"name":{"common":"Saint Vincent and the Grenadines","official":"Saint Vincent and the Grenadines","native":{"eng":{"official":"Saint Vincent and the Grenadines","common":"Saint Vincent and the Grenadines"}}},"tld":[".vc"],"cca2":"VC","ccn3":"670","cca3":"VCT","cioc":"VIN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"XCD":{"name":"Eastern Caribbean dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["784"]},"capital":["Kingstown"],"altSpellings":["VC"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Svat\xfd Vincenc a Grenadiny","common":"Svat\xfd Vincenc a Grenadiny"},"deu":{"official":"St. Vincent und die Grenadinen","common":"St. Vincent und die Grenadinen"},"est":{"official":"Saint Vincent ja Grenadiinid","common":"Saint Vincent"},"fin":{"official":"Saint Vincent ja Grenadiinit","common":"Saint Vincent ja Grenadiinit"},"fra":{"official":"Saint-Vincent-et-les Grenadines","common":"Saint-Vincent-et-les-Grenadines"},"hrv":{"official":"Sveti Vincent i Grenadini","common":"Sveti Vincent i Grenadini"},"hun":{"official":"Saint Vincent \xe9s a Grenadine-szigetek","common":"Saint Vincent \xe9s a Grenadine-szigetek"},"ita":{"official":"Saint Vincent e Grenadine","common":"Saint Vincent e Grenadine"},"jpn":{"official":"セントビンセントおよびグレナディーン諸島","common":"セントビンセントおよびグレナディーン諸島"},"kor":{"official":"세인트빈센트 그레나딘","common":"세인트빈센트 그레나딘"},"nld":{"official":"Saint Vincent en de Grenadines","common":"Saint Vincent en de Grenadines"},"per":{"official":"سنت وینسنت و گرنادین‌ها","common":"سنت وینسنت و گرنادین‌ها"},"pol":{"official":"Saint Vincent i Grenadyny","common":"Saint Vincent i Grenadyny"},"por":{"official":"S\xe3o Vicente e Granadinas","common":"S\xe3o Vincente e Granadinas"},"rus":{"official":"Сент-Винсент и Гренадины","common":"Сент-Винсент и Гренадины"},"slk":{"official":"Sv\xe4t\xfd Vincent a Grenad\xedny","common":"Sv\xe4t\xfd Vincent a Grenad\xedny"},"spa":{"official":"San Vicente y las Granadinas","common":"San Vicente y Granadinas"},"swe":{"official":"Saint Vincent och Grenadinerna","common":"Saint Vincent och Grenadinerna"},"urd":{"official":"سینٹ وینسینٹ و گریناڈائنز","common":"سینٹ وینسینٹ و گریناڈائنز"},"zho":{"official":"圣文森特和格林纳丁斯","common":"圣文森特和格林纳丁斯"}},"latlng":[13.25,-61.2],"landlocked":false,"borders":[],"area":389,"flag":"\uD83C\uDDFB\uD83C\uDDE8","demonyms":{"eng":{"f":"Saint Vincentian","m":"Saint Vincentian"},"fra":{"f":"Vincentaise","m":"Vincentais"}}},{"name":{"common":"Venezuela","official":"Bolivarian Republic of Venezuela","native":{"spa":{"official":"Rep\xfablica Bolivariana de Venezuela","common":"Venezuela"}}},"tld":[".ve"],"cca2":"VE","ccn3":"862","cca3":"VEN","cioc":"VEN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"VES":{"name":"Venezuelan bol\xedvar soberano","symbol":"Bs.S."}},"idd":{"root":"+5","suffixes":["8"]},"capital":["Caracas"],"altSpellings":["VE","Bolivarian Republic of Venezuela","Venezuela, Bolivarian Republic of","Rep\xfablica Bolivariana de Venezuela"],"region":"Americas","subregion":"South America","languages":{"spa":"Spanish"},"translations":{"ces":{"official":"Bol\xedvarsk\xe1 republika Venezuela","common":"Venezuela"},"deu":{"official":"Bolivarische Republik Venezuela","common":"Venezuela"},"est":{"official":"Venezuela Bol\xedvari Vabariik","common":"Venezuela"},"fin":{"official":"Venezuelan bolivariaainen tasavalta","common":"Venezuela"},"fra":{"official":"R\xe9publique bolivarienne du Venezuela","common":"Venezuela"},"hrv":{"official":"BOLIVARIJANSKA Republika Venezuela","common":"Venezuela"},"hun":{"official":"Venezuelai Boliv\xe1ri K\xf6zt\xe1rsas\xe1g","common":"Venezuela"},"ita":{"official":"Repubblica Bolivariana del Venezuela","common":"Venezuela"},"jpn":{"official":"ベネズエラ\xb7ボリバル共和国","common":"ベネズエラ・ボリバル共和国"},"kor":{"official":"베네수엘라 볼리바르 공화국","common":"베네수엘라"},"nld":{"official":"Bolivariaanse Republiek Venezuela","common":"Venezuela"},"per":{"official":"جمهوری بولیواری ونزوئلا","common":"ونزوئلا"},"pol":{"official":"Boliwariańska Republika Wenezueli","common":"Wenezuela"},"por":{"official":"Rep\xfablica Bolivariana da Venezuela","common":"Venezuela"},"rus":{"official":"Боливарианская Республика Венесуэла","common":"Венесуэла"},"slk":{"official":"Venezuelsk\xe1 bol\xedvarovsk\xe1 republika","common":"Venezuela"},"spa":{"official":"Rep\xfablica Bolivariana de Venezuela","common":"Venezuela"},"swe":{"official":"Bolivarianska republiken Venezuela","common":"Venezuela"},"urd":{"official":"جمہوریہ وینیزویلا","common":"وینیزویلا"},"zho":{"official":"委内瑞拉玻利瓦尔共和国","common":"委内瑞拉"}},"latlng":[8,-66],"landlocked":false,"borders":["BRA","COL","GUY"],"area":916445,"flag":"\uD83C\uDDFB\uD83C\uDDEA","demonyms":{"eng":{"f":"Venezuelan","m":"Venezuelan"},"fra":{"f":"V\xe9n\xe9zu\xe9lienne","m":"V\xe9n\xe9zu\xe9lien"}}},{"name":{"common":"British Virgin Islands","official":"Virgin Islands","native":{"eng":{"official":"Virgin Islands","common":"British Virgin Islands"}}},"tld":[".vg"],"cca2":"VG","ccn3":"092","cca3":"VGB","cioc":"IVB","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["284"]},"capital":["Road Town"],"altSpellings":["VG","Virgin Islands, British"],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Britsk\xe9 Panensk\xe9 ostrovy","common":"Britsk\xe9 Panensk\xe9 ostrovy"},"deu":{"official":"Jungferninseln","common":"Britische Jungferninseln"},"est":{"official":"Neitsisaared","common":"Briti Neitsisaared"},"fin":{"official":"Brittil\xe4iset Neitsytsaaret","common":"Neitsytsaaret"},"fra":{"official":"\xeeles Vierges","common":"\xceles Vierges britanniques"},"hrv":{"official":"Djevičanski Otoci","common":"Britanski Djevičanski Otoci"},"hun":{"official":"Brit Virgin-szigetek","common":"Brit Virgin-szigetek"},"ita":{"official":"Isole Vergini","common":"Isole Vergini Britanniche"},"jpn":{"official":"バージン諸島","common":"イギリス領ヴァージン諸島"},"kor":{"official":"영국령 버진아일랜드","common":"영국령 버진아일랜드"},"nld":{"official":"Maagdeneilanden","common":"Britse Maagdeneilanden"},"per":{"official":"جزایر ویرجین بریتانیا","common":"جزایر ویرجین بریتانیا"},"pol":{"official":"Brytyjskie Wyspy Dziewicze","common":"Brytyjskie Wyspy Dziewicze"},"por":{"official":"Ilhas Virgens","common":"Ilhas Virgens"},"rus":{"official":"Виргинские острова","common":"Британские Виргинские острова"},"slk":{"official":"Panensk\xe9 ostrovy","common":"Panensk\xe9 ostrovy"},"spa":{"official":"Islas V\xedrgenes","common":"Islas V\xedrgenes del Reino Unido"},"swe":{"official":"Brittiska Jungfru\xf6arna","common":"Brittiska Jungfru\xf6arna"},"urd":{"official":"برطانوی جزائر ورجن","common":"برطانوی جزائر ورجن"},"zho":{"official":"英属维尔京群岛","common":"英属维尔京群岛"}},"latlng":[18.431383,-64.62305],"landlocked":false,"borders":[],"area":151,"flag":"\uD83C\uDDFB\uD83C\uDDEC","demonyms":{"eng":{"f":"Virgin Islander","m":"Virgin Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"United States Virgin Islands","official":"Virgin Islands of the United States","native":{"eng":{"official":"Virgin Islands of the United States","common":"United States Virgin Islands"}}},"tld":[".vi"],"cca2":"VI","ccn3":"850","cca3":"VIR","cioc":"ISV","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"USD":{"name":"United States dollar","symbol":"$"}},"idd":{"root":"+1","suffixes":["340"]},"capital":["Charlotte Amalie"],"altSpellings":["VI","Virgin Islands, U.S."],"region":"Americas","subregion":"Caribbean","languages":{"eng":"English"},"translations":{"ces":{"official":"Americk\xe9 Panensk\xe9 ostrovy","common":"Americk\xe9 Panensk\xe9 ostrovy"},"deu":{"official":"Amerikanische Jungferninseln","common":"Amerikanische Jungferninseln"},"est":{"official":"\xdchendriikide Neitsisaared","common":"Neitsisaared, USA"},"fin":{"official":"Yhdysvaltain Neitsytsaaret","common":"Neitsytsaaret"},"fra":{"official":"\xceles Vierges des \xc9tats-Unis","common":"\xceles Vierges des \xc9tats-Unis"},"hrv":{"official":"Djevičanski Otoci SAD","common":"Američki Djevičanski Otoci"},"hun":{"official":"Amerikai Virgin-szigetek","common":"Amerikai Virgin-szigetek"},"ita":{"official":"Isole Vergini degli Stati Uniti","common":"Isole Vergini americane"},"jpn":{"official":"米国のバージン諸島","common":"アメリカ領ヴァージン諸島"},"kor":{"official":"미국령 버진아일랜드","common":"미국령 버진아일랜드"},"nld":{"official":"Maagdeneilanden van de Verenigde Staten","common":"Amerikaanse Maagdeneilanden"},"per":{"official":"جزایر ویرجین ایالات متحده آمریکا","common":"جزایر ویرجین ایالات متحده آمریکا"},"pol":{"official":"Wyspy Dziewicze Stan\xf3w Zjednoczonych","common":"Wyspy Dziewicze Stan\xf3w Zjednoczonych"},"por":{"official":"Ilhas Virgens dos Estados Unidos","common":"Ilhas Virgens dos Estados Unidos"},"rus":{"official":"Виргинские острова Соединенных Штатов","common":"Виргинские Острова"},"slk":{"official":"Americk\xe9 Panensk\xe9 ostrovy","common":"Americk\xe9 Panensk\xe9 ostrovy"},"spa":{"official":"Islas V\xedrgenes de los Estados Unidos","common":"Islas V\xedrgenes de los Estados Unidos"},"swe":{"official":"Amerikanska Jungfru\xf6arna","common":"Amerikanska Jungfru\xf6arna"},"urd":{"official":"امریکی جزائر ورجن","common":"امریکی جزائر ورجن"},"zho":{"official":"美属维尔京群岛","common":"美属维尔京群岛"}},"latlng":[18.35,-64.933333],"landlocked":false,"borders":[],"area":347,"flag":"\uD83C\uDDFB\uD83C\uDDEE","demonyms":{"eng":{"f":"Virgin Islander","m":"Virgin Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Vietnam","official":"Socialist Republic of Vietnam","native":{"vie":{"official":"Cộng h\xf2a x\xe3 hội chủ nghĩa Việt Nam","common":"Việt Nam"}}},"tld":[".vn"],"cca2":"VN","ccn3":"704","cca3":"VNM","cioc":"VIE","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"VND":{"name":"Vietnamese đồng","symbol":"₫"}},"idd":{"root":"+8","suffixes":["4"]},"capital":["Hanoi"],"altSpellings":["VN","Socialist Republic of Vietnam","Cộng h\xf2a X\xe3 hội chủ nghĩa Việt Nam","Viet Nam"],"region":"Asia","subregion":"South-Eastern Asia","languages":{"vie":"Vietnamese"},"translations":{"ces":{"official":"Vietnamsk\xe1 socialistick\xe1 republika","common":"Vietnam"},"deu":{"official":"Sozialistische Republik Vietnam","common":"Vietnam"},"est":{"official":"Vietnami Sotsialistlik Vabariik","common":"Vietnam"},"fin":{"official":"Vietnamin sosialistinen tasavalta","common":"Vietnam"},"fra":{"official":"R\xe9publique socialiste du Vi\xeat Nam","common":"Vi\xeat Nam"},"hrv":{"official":"Socijalistička Republika Vijetnam","common":"Vijetnam"},"hun":{"official":"Vietn\xe1mi Szocialista K\xf6zt\xe1rsas\xe1g","common":"Vietn\xe1m"},"ita":{"official":"Repubblica socialista del Vietnam","common":"Vietnam"},"jpn":{"official":"ベトナム社会主義共和国","common":"ベトナム"},"kor":{"official":"베트남 사회주의 공화국","common":"베트남"},"nld":{"official":"Socialistische Republiek Vietnam","common":"Vietnam"},"per":{"official":"جمهوری سوسیالیستی ویتنام","common":"ویتنام"},"pol":{"official":"Socjalistyczna Republika Wietnamu","common":"Wietnam"},"por":{"official":"Rep\xfablica Socialista do Vietname","common":"Vietname"},"rus":{"official":"Социалистическая Республика Вьетнам","common":"Вьетнам"},"slk":{"official":"Vietnamsk\xe1 socialistick\xe1 republika","common":"Vietnam"},"spa":{"official":"Rep\xfablica Socialista de Vietnam","common":"Vietnam"},"swe":{"official":"Socialistiska republiken Vietnam","common":"Vietnam"},"urd":{"official":"اشتراکی جمہوریہ ویتنام","common":"ویتنام"},"zho":{"official":"越南社会主义共和国","common":"越南"}},"latlng":[16.16666666,107.83333333],"landlocked":false,"borders":["KHM","CHN","LAO"],"area":331212,"flag":"\uD83C\uDDFB\uD83C\uDDF3","demonyms":{"eng":{"f":"Vietnamese","m":"Vietnamese"},"fra":{"f":"Vietnamienne","m":"Vietnamien"}}},{"name":{"common":"Vanuatu","official":"Republic of Vanuatu","native":{"bis":{"official":"Ripablik blong Vanuatu","common":"Vanuatu"},"eng":{"official":"Republic of Vanuatu","common":"Vanuatu"},"fra":{"official":"R\xe9publique de Vanuatu","common":"Vanuatu"}}},"tld":[".vu"],"cca2":"VU","ccn3":"548","cca3":"VUT","cioc":"VAN","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"VUV":{"name":"Vanuatu vatu","symbol":"Vt"}},"idd":{"root":"+6","suffixes":["78"]},"capital":["Port Vila"],"altSpellings":["VU","Republic of Vanuatu","Ripablik blong Vanuatu","R\xe9publique de Vanuatu"],"region":"Oceania","subregion":"Melanesia","languages":{"bis":"Bislama","eng":"English","fra":"French"},"translations":{"ces":{"official":"Republika Vanuatu","common":"Vanuatu"},"deu":{"official":"Vanuatu","common":"Vanuatu"},"est":{"official":"Vanuatu Vabariik","common":"Vanuatu"},"fin":{"official":"Vanuatun tasavalta","common":"Vanuatu"},"fra":{"official":"R\xe9publique de Vanuatu","common":"Vanuatu"},"hrv":{"official":"Republika Vanuatu","common":"Vanuatu"},"hun":{"official":"Vanuatui K\xf6zt\xe1rsas\xe1g","common":"Vanuatu"},"ita":{"official":"Repubblica di Vanuatu","common":"Vanuatu"},"jpn":{"official":"バヌアツ共和国","common":"バヌアツ"},"kor":{"official":"바누아투 공화국","common":"바누아투"},"nld":{"official":"Republiek Vanuatu","common":"Vanuatu"},"per":{"official":"جمهوری وانواتو","common":"وانواتو"},"pol":{"official":"Republika Vanuatu","common":"Vanuatu"},"por":{"official":"Rep\xfablica de Vanuatu","common":"Vanuatu"},"rus":{"official":"Республика Вануату","common":"Вануату"},"slk":{"official":"Vanuatsk\xe1 republika","common":"Vanuatu"},"spa":{"official":"Rep\xfablica de Vanuatu","common":"Vanuatu"},"swe":{"official":"Republiken Vanuatu","common":"Vanuatu"},"urd":{"official":"جمہوریہ وانواتو","common":"وانواتو"},"zho":{"official":"瓦努阿图共和国","common":"瓦努阿图"}},"latlng":[-16,167],"landlocked":false,"borders":[],"area":12189,"flag":"\uD83C\uDDFB\uD83C\uDDFA","demonyms":{"eng":{"f":"Ni-Vanuatu","m":"Ni-Vanuatu"},"fra":{"f":"Vanuatuane","m":"Vanuatuan"}}},{"name":{"common":"Wallis and Futuna","official":"Territory of the Wallis and Futuna Islands","native":{"fra":{"official":"Territoire des \xeeles Wallis et Futuna","common":"Wallis et Futuna"}}},"tld":[".wf"],"cca2":"WF","ccn3":"876","cca3":"WLF","cioc":"","independent":false,"status":"officially-assigned","unMember":false,"currencies":{"XPF":{"name":"CFP franc","symbol":"₣"}},"idd":{"root":"+6","suffixes":["81"]},"capital":["Mata-Utu"],"altSpellings":["WF","Territory of the Wallis and Futuna Islands","Territoire des \xeeles Wallis et Futuna"],"region":"Oceania","subregion":"Polynesia","languages":{"fra":"French"},"translations":{"ces":{"official":"Teritorium ostrovů Wallis a Futuna","common":"Wallis a Futuna"},"deu":{"official":"Gebiet der Wallis und Futuna","common":"Wallis und Futuna"},"est":{"official":"Wallise ja Futuna ala","common":"Wallis ja Futuna"},"fin":{"official":"Wallisin ja Futunan yhteis\xf6","common":"Wallis ja Futuna"},"fra":{"official":"Territoire des \xeeles Wallis et Futuna","common":"Wallis-et-Futuna"},"hrv":{"official":"Teritoriju Wallis i Futuna","common":"Wallis i Fortuna"},"hun":{"official":"Wallis \xe9s Futuna","common":"Wallis \xe9s Futuna"},"ita":{"official":"Territorio delle Isole Wallis e Futuna","common":"Wallis e Futuna"},"jpn":{"official":"ウォリス\xb7フツナ諸島の領土","common":"ウォリス・フツナ"},"kor":{"official":"왈리스 퓌튀나","common":"왈리스 퓌튀나"},"nld":{"official":"Grondgebied van de Wallis en Futuna","common":"Wallis en Futuna"},"per":{"official":"جزایر والیس و فوتونا","common":"والیس و فوتونا"},"pol":{"official":"Terytorium Wysp Wallis i Futuna","common":"Wallis i Futuna"},"por":{"official":"Territ\xf3rio das Ilhas Wallis e Futuna","common":"Wallis e Futuna"},"rus":{"official":"Территория Уоллис и Футуна острова","common":"Уоллис и Футуна"},"slk":{"official":"Terit\xf3rium ostrovov Wallis a Futuna","common":"Wallis a Futuna"},"spa":{"official":"Territorio de las Islas Wallis y Futuna","common":"Wallis y Futuna"},"swe":{"official":"Territoriet Wallis- och Futuna\xf6arna","common":"Wallis- och Futuna\xf6arna"},"urd":{"official":"سر زمینِ والس و فتونہ جزائر","common":"والس و فتونہ"},"zho":{"official":"瓦利斯和富图纳群岛","common":"瓦利斯和富图纳群岛"}},"latlng":[-13.3,-176.2],"landlocked":false,"borders":[],"area":142,"flag":"\uD83C\uDDFC\uD83C\uDDEB","demonyms":{"eng":{"f":"Wallis and Futuna Islander","m":"Wallis and Futuna Islander"},"fra":{"f":"","m":""}}},{"name":{"common":"Samoa","official":"Independent State of Samoa","native":{"eng":{"official":"Independent State of Samoa","common":"Samoa"},"smo":{"official":"Malo Saʻoloto Tutoʻatasi o Sāmoa","common":"Sāmoa"}}},"tld":[".ws"],"cca2":"WS","ccn3":"882","cca3":"WSM","cioc":"SAM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"WST":{"name":"Samoan tālā","symbol":"T"}},"idd":{"root":"+6","suffixes":["85"]},"capital":["Apia"],"altSpellings":["WS","Independent State of Samoa","Malo Saʻoloto Tutoʻatasi o Sāmoa"],"region":"Oceania","subregion":"Polynesia","languages":{"eng":"English","smo":"Samoan"},"translations":{"ces":{"official":"Nez\xe1visl\xfd st\xe1t Samoa","common":"Samoa"},"deu":{"official":"Unabh\xe4ngige Staat Samoa","common":"Samoa"},"est":{"official":"Samoa Iseseisvusriik","common":"Samoa"},"fin":{"official":"Samoan itsen\xe4inen valtio","common":"Samoa"},"fra":{"official":"Samoa","common":"Samoa"},"hrv":{"official":"Nezavisna Država Samoa","common":"Samoa"},"hun":{"official":"Szamoai F\xfcggetlen \xc1llam","common":"Szamoa"},"ita":{"official":"Stato indipendente di Samoa","common":"Samoa"},"jpn":{"official":"サモア独立国","common":"サモア"},"kor":{"official":"사모아 독립국","common":"사모아"},"nld":{"official":"Onafhankelijke Staat Samoa","common":"Samoa"},"per":{"official":"ایالت مستقل ساموآ","common":"ساموآ"},"pol":{"official":"Niezależne Państwo Samoa","common":"Samoa"},"por":{"official":"Estado Independente de Samoa","common":"Samoa"},"rus":{"official":"Независимое Государство Самоа","common":"Самоа"},"slk":{"official":"Nez\xe1visl\xfd št\xe1tSamoa","common":"Samoa"},"spa":{"official":"Estado Independiente de Samoa","common":"Samoa"},"swe":{"official":"Sj\xe4lvst\xe4ndiga staten Samoa","common":"Samoa"},"urd":{"official":"آزاد سلطنتِ ساموا","common":"سامووا"},"zho":{"official":"萨摩亚独立国","common":"萨摩亚"}},"latlng":[-13.58333333,-172.33333333],"landlocked":false,"borders":[],"area":2842,"flag":"\uD83C\uDDFC\uD83C\uDDF8","demonyms":{"eng":{"f":"Samoan","m":"Samoan"},"fra":{"f":"Samoane","m":"Samoan"}}},{"name":{"common":"Yemen","official":"Republic of Yemen","native":{"ara":{"official":"الجمهورية اليمنية","common":"اليَمَن"}}},"tld":[".ye"],"cca2":"YE","ccn3":"887","cca3":"YEM","cioc":"YEM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"YER":{"name":"Yemeni rial","symbol":"﷼"}},"idd":{"root":"+9","suffixes":["67"]},"capital":["Sana\'a"],"altSpellings":["YE","Yemeni Republic","al-Jumhūriyyah al-Yamaniyyah"],"region":"Asia","subregion":"Western Asia","languages":{"ara":"Arabic"},"translations":{"ces":{"official":"Jemensk\xe1 republika","common":"Jemen"},"deu":{"official":"Republik Jemen","common":"Jemen"},"est":{"official":"Jeemeni Vabariik","common":"Jeemen"},"fin":{"official":"Jemenin tasavalta","common":"Jemen"},"fra":{"official":"R\xe9publique du Y\xe9men","common":"Y\xe9men"},"hrv":{"official":"Republika Jemen","common":"Jemen"},"hun":{"official":"Jemeni K\xf6zt\xe1rsas\xe1g","common":"Jemen"},"ita":{"official":"Repubblica dello Yemen","common":"Yemen"},"jpn":{"official":"イエメン共和国","common":"イエメン"},"kor":{"official":"예멘 공화국","common":"예멘"},"nld":{"official":"Republiek Jemen","common":"Jemen"},"per":{"official":"جمهوری یمن","common":"یمن"},"pol":{"official":"Republika Jemeńska","common":"Jemen"},"por":{"official":"Rep\xfablica do I\xeamen","common":"I\xe9men"},"rus":{"official":"Йеменская Республика","common":"Йемен"},"slk":{"official":"Jemensk\xe1 republika","common":"Jemen"},"spa":{"official":"Rep\xfablica de Yemen","common":"Yemen"},"swe":{"official":"Republiken Jemen","common":"Jemen"},"urd":{"official":"جمہوریہ یمن","common":"یمن"},"zho":{"official":"也门共和国","common":"也门"}},"latlng":[15,48],"landlocked":false,"borders":["OMN","SAU"],"area":527968,"flag":"\uD83C\uDDFE\uD83C\uDDEA","demonyms":{"eng":{"f":"Yemeni","m":"Yemeni"},"fra":{"f":"Y\xe9m\xe9nite","m":"Y\xe9m\xe9nite"}}},{"name":{"common":"South Africa","official":"Republic of South Africa","native":{"afr":{"official":"Republiek van Suid-Afrika","common":"South Africa"},"eng":{"official":"Republic of South Africa","common":"South Africa"},"nbl":{"official":"IRiphabliki yeSewula Afrika","common":"Sewula Afrika"},"nso":{"official":"Rephaboliki ya Afrika-Borwa ","common":"Afrika-Borwa"},"sot":{"official":"Rephaboliki ya Afrika Borwa","common":"Afrika Borwa"},"ssw":{"official":"IRiphabhulikhi yeNingizimu Afrika","common":"Ningizimu Afrika"},"tsn":{"official":"Rephaboliki ya Aforika Borwa","common":"Aforika Borwa"},"tso":{"official":"Riphabliki ra Afrika Dzonga","common":"Afrika Dzonga"},"ven":{"official":"Riphabuḽiki ya Afurika Tshipembe","common":"Afurika Tshipembe"},"xho":{"official":"IRiphabliki yaseMzantsi Afrika","common":"Mzantsi Afrika"},"zul":{"official":"IRiphabliki yaseNingizimu Afrika","common":"Ningizimu Afrika"}}},"tld":[".za"],"cca2":"ZA","ccn3":"710","cca3":"ZAF","cioc":"RSA","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ZAR":{"name":"South African rand","symbol":"R"}},"idd":{"root":"+2","suffixes":["7"]},"capital":["Pretoria","Bloemfontein","Cape Town"],"altSpellings":["ZA","RSA","Suid-Afrika","Republic of South Africa"],"region":"Africa","subregion":"Southern Africa","languages":{"afr":"Afrikaans","eng":"English","nbl":"Southern Ndebele","nso":"Northern Sotho","sot":"Southern Sotho","ssw":"Swazi","tsn":"Tswana","tso":"Tsonga","ven":"Venda","xho":"Xhosa","zul":"Zulu"},"translations":{"ces":{"official":"Jihoafrick\xe1 republika","common":"Jihoafrick\xe1 republika"},"deu":{"official":"Republik S\xfcdafrika","common":"S\xfcdafrika"},"est":{"official":"L\xf5una-Aafrika Vabariik","common":"L\xf5una-Aafrika Vabariik"},"fin":{"official":"Etel\xe4-Afrikan tasavalta","common":"Etel\xe4-Afrikka"},"fra":{"official":"R\xe9publique d\'Afrique du Sud","common":"Afrique du Sud"},"hrv":{"official":"Južnoafrička Republika","common":"Južnoafrička Republika"},"hun":{"official":"D\xe9l-afrikai K\xf6zt\xe1rsas\xe1g","common":"D\xe9l-afrikai K\xf6zt\xe1rsas\xe1g"},"ita":{"official":"Repubblica del Sud Africa","common":"Sud Africa"},"jpn":{"official":"南アフリカ共和国","common":"南アフリカ"},"kor":{"official":"남아프리카 공화국","common":"남아프리카"},"nld":{"official":"Republiek Zuid-Afrika","common":"Zuid-Afrika"},"per":{"official":"جمهوری آفریقای جنوبی","common":"آفریقای جنوبی"},"pol":{"official":"Republika Południowej Afryki","common":"Południowa Afryka"},"por":{"official":"Rep\xfablica da \xc1frica do Sul","common":"\xc1frica do Sul"},"rus":{"official":"Южно-Африканская Республика","common":"Южно-Африканская Республика"},"slk":{"official":"Juhoafrick\xe1 republika","common":"Juhoafrick\xe1 republika"},"spa":{"official":"Rep\xfablica de Sud\xe1frica","common":"Rep\xfablica de Sud\xe1frica"},"swe":{"official":"Republiken Sydafrika","common":"Sydafrika"},"urd":{"official":"جمہوریہ جنوبی افریقا","common":"جنوبی افریقا"},"zho":{"official":"南非共和国","common":"南非"}},"latlng":[-29,24],"landlocked":false,"borders":["BWA","LSO","MOZ","NAM","SWZ","ZWE"],"area":1221037,"flag":"\uD83C\uDDFF\uD83C\uDDE6","demonyms":{"eng":{"f":"South African","m":"South African"},"fra":{"f":"Sud-africaine","m":"Sud-africain"}}},{"name":{"common":"Zambia","official":"Republic of Zambia","native":{"eng":{"official":"Republic of Zambia","common":"Zambia"}}},"tld":[".zm"],"cca2":"ZM","ccn3":"894","cca3":"ZMB","cioc":"ZAM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"ZMW":{"name":"Zambian kwacha","symbol":"ZK"}},"idd":{"root":"+2","suffixes":["60"]},"capital":["Lusaka"],"altSpellings":["ZM","Republic of Zambia"],"region":"Africa","subregion":"Eastern Africa","languages":{"eng":"English"},"translations":{"ces":{"official":"Zambijsk\xe1 republika","common":"Zambie"},"deu":{"official":"Republik Sambia","common":"Sambia"},"est":{"official":"Sambia Vabariik","common":"Sambia"},"fin":{"official":"Sambian tasavalta","common":"Sambia"},"fra":{"official":"R\xe9publique de Zambie","common":"Zambie"},"hrv":{"official":"Republika Zambija","common":"Zambija"},"hun":{"official":"Zambiai K\xf6zt\xe1rsas\xe1g","common":"Zambia"},"ita":{"official":"Repubblica di Zambia","common":"Zambia"},"jpn":{"official":"ザンビア共和国","common":"ザンビア"},"kor":{"official":"잠비아 공화국","common":"잠비아"},"nld":{"official":"Republiek Zambia","common":"Zambia"},"per":{"official":"جمهوری زامبیا","common":"زامبیا"},"pol":{"official":"Republika Zambii","common":"Zambia"},"por":{"official":"Rep\xfablica da Z\xe2mbia","common":"Z\xe2mbia"},"rus":{"official":"Республика Замбия","common":"Замбия"},"slk":{"official":"Zambijsk\xe1 republika","common":"Zambia"},"spa":{"official":"Rep\xfablica de Zambia","common":"Zambia"},"swe":{"official":"Republiken Zambia","common":"Zambia"},"urd":{"official":"جمہوریہ زیمبیا","common":"زیمبیا"},"zho":{"official":"赞比亚共和国","common":"赞比亚"}},"latlng":[-15,30],"landlocked":true,"borders":["AGO","BWA","COD","MWI","MOZ","NAM","TZA","ZWE"],"area":752612,"flag":"\uD83C\uDDFF\uD83C\uDDF2","demonyms":{"eng":{"f":"Zambian","m":"Zambian"},"fra":{"f":"Zambienne","m":"Zambien"}}},{"name":{"common":"Zimbabwe","official":"Republic of Zimbabwe","native":{"bwg":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"eng":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"kck":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"khi":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"ndc":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"nde":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"nya":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"sna":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"sot":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"toi":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"tsn":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"tso":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"ven":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"xho":{"official":"Republic of Zimbabwe","common":"Zimbabwe"},"zib":{"official":"Republic of Zimbabwe","common":"Zimbabwe"}}},"tld":[".zw"],"cca2":"ZW","ccn3":"716","cca3":"ZWE","cioc":"ZIM","independent":true,"status":"officially-assigned","unMember":true,"currencies":{"BWP":{"name":"Botswana pula","symbol":"P"},"CNY":{"name":"Chinese yuan","symbol":"\xa5"},"EUR":{"name":"Euro","symbol":"€"},"GBP":{"name":"British pound","symbol":"\xa3"},"INR":{"name":"Indian rupee","symbol":"₹"},"JPY":{"name":"Japanese yen","symbol":"\xa5"},"USD":{"name":"United States dollar","symbol":"$"},"ZAR":{"name":"South African rand","symbol":"Rs"},"ZWB":{"name":"Zimbabwean bonds","symbol":"$"}},"idd":{"root":"+2","suffixes":["63"]},"capital":["Harare"],"altSpellings":["ZW","Republic of Zimbabwe"],"region":"Africa","subregion":"Eastern Africa","languages":{"bwg":"Chibarwe","eng":"English","kck":"Kalanga","khi":"Khoisan","ndc":"Ndau","nde":"Northern Ndebele","nya":"Chewa","sna":"Shona","sot":"Sotho","toi":"Tonga","tsn":"Tswana","tso":"Tsonga","ven":"Venda","xho":"Xhosa","zib":"Zimbabwean Sign Language"},"translations":{"ces":{"official":"Zimbabwsk\xe1 republika","common":"Zimbabwe"},"deu":{"official":"Republik Simbabwe","common":"Simbabwe"},"est":{"official":"Zimbabwe Vabariik","common":"Zimbabwe"},"fin":{"official":"Zimbabwen tasavalta","common":"Zimbabwe"},"fra":{"official":"R\xe9publique du Zimbabwe","common":"Zimbabwe"},"hrv":{"official":"Republika Zimbabve","common":"Zimbabve"},"hun":{"official":"Zimbabwei K\xf6zt\xe1rsas\xe1g","common":"Zimbabwe"},"ita":{"official":"Repubblica dello Zimbabwe","common":"Zimbabwe"},"jpn":{"official":"ジンバブエ共和国","common":"ジンバブエ"},"kor":{"official":"짐바브웨 공화국","common":"짐바브웨"},"nld":{"official":"Republiek Zimbabwe","common":"Zimbabwe"},"per":{"official":"جمهوری زیمبابوه","common":"زیمبابوه"},"pol":{"official":"Republika Zimbabwe","common":"Zimbabwe"},"por":{"official":"Rep\xfablica do Zimbabwe","common":"Zimbabwe"},"rus":{"official":"Республика Зимбабве","common":"Зимбабве"},"slk":{"official":"Zimbabwianska republika","common":"Zimbabwe"},"spa":{"official":"Rep\xfablica de Zimbabue","common":"Zimbabue"},"swe":{"official":"Republiken Zimbabwe","common":"Zimbabwe"},"urd":{"official":"جمہوریہ زمبابوے","common":"زمبابوے"},"zho":{"official":"津巴布韦共和国","common":"津巴布韦"}},"latlng":[-20,30],"landlocked":true,"borders":["BWA","MOZ","ZAF","ZMB"],"area":390757,"flag":"\uD83C\uDDFF\uD83C\uDDFC","demonyms":{"eng":{"f":"Zimbabwean","m":"Zimbabwean"},"fra":{"f":"Zimbabw\xe9enne","m":"Zimbabw\xe9en"}}}]')},53370:(e,a,i)=>{"use strict";function o(e){return e&&e.__esModule?e:{default:e}}i.r(a),i.d(a,{_:()=>o,_interop_require_default:()=>o})},50542:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}};